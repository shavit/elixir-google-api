# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AppEngine.V1.Model.FeatureSettings do
  @moduledoc """
  The feature specific settings to be used in the application. These define behaviors that are user configurable.

  ## Attributes

  *   `splitHealthChecks` (*type:* `boolean()`, *default:* `nil`) - Boolean value indicating if split health checks should be used instead of the legacy health checks. At an app.yaml level, this means defaulting to 'readiness_check' and 'liveness_check' values instead of 'health_check' ones. Once the legacy 'health_check' behavior is deprecated, and this value is always true, this setting can be removed.
  *   `useContainerOptimizedOs` (*type:* `boolean()`, *default:* `nil`) - If true, use Container-Optimized OS (https://cloud.google.com/container-optimized-os/) base image for VMs, rather than a base Debian image.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :splitHealthChecks => boolean(),
          :useContainerOptimizedOs => boolean()
        }

  field(:splitHealthChecks)
  field(:useContainerOptimizedOs)
end

defimpl Poison.Decoder, for: GoogleApi.AppEngine.V1.Model.FeatureSettings do
  def decode(value, options) do
    GoogleApi.AppEngine.V1.Model.FeatureSettings.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AppEngine.V1.Model.FeatureSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
