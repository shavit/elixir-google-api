# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastore.V1.Model.GoogleDatastoreAdminV1Index do
  @moduledoc """
  A minimal index definition.

  ## Attributes

  *   `ancestor` (*type:* `String.t`, *default:* `nil`) - The index's ancestor mode.  Must not be ANCESTOR_MODE_UNSPECIFIED.
      Required.
  *   `indexId` (*type:* `String.t`, *default:* `nil`) - The resource ID of the index.
      Output only.
  *   `kind` (*type:* `String.t`, *default:* `nil`) - The entity kind to which this index applies.
      Required.
  *   `projectId` (*type:* `String.t`, *default:* `nil`) - Project ID.
      Output only.
  *   `properties` (*type:* `list(GoogleApi.Datastore.V1.Model.GoogleDatastoreAdminV1IndexedProperty.t)`, *default:* `nil`) - An ordered sequence of property names and their index attributes.
      Required.
  *   `state` (*type:* `String.t`, *default:* `nil`) - The state of the index.
      Output only.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ancestor => String.t(),
          :indexId => String.t(),
          :kind => String.t(),
          :projectId => String.t(),
          :properties =>
            list(GoogleApi.Datastore.V1.Model.GoogleDatastoreAdminV1IndexedProperty.t()),
          :state => String.t()
        }

  field(:ancestor)
  field(:indexId)
  field(:kind)
  field(:projectId)

  field(
    :properties,
    as: GoogleApi.Datastore.V1.Model.GoogleDatastoreAdminV1IndexedProperty,
    type: :list
  )

  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.Datastore.V1.Model.GoogleDatastoreAdminV1Index do
  def decode(value, options) do
    GoogleApi.Datastore.V1.Model.GoogleDatastoreAdminV1Index.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastore.V1.Model.GoogleDatastoreAdminV1Index do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
