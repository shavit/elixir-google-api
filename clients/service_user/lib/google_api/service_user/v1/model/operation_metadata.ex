# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceUser.V1.Model.OperationMetadata do
  @moduledoc """
  The metadata associated with a long running operation resource.

  ## Attributes

  *   `progressPercentage` (*type:* `integer()`, *default:* `nil`) - Percentage of completion of this operation, ranging from 0 to 100.
  *   `resourceNames` (*type:* `list(String.t)`, *default:* `nil`) - The full name of the resources that this operation is directly
      associated with.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - The start time of the operation.
  *   `steps` (*type:* `list(GoogleApi.ServiceUser.V1.Model.Step.t)`, *default:* `nil`) - Detailed status information for each step. The order is undetermined.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :progressPercentage => integer(),
          :resourceNames => list(String.t()),
          :startTime => DateTime.t(),
          :steps => list(GoogleApi.ServiceUser.V1.Model.Step.t())
        }

  field(:progressPercentage)
  field(:resourceNames, type: :list)
  field(:startTime, as: DateTime)
  field(:steps, as: GoogleApi.ServiceUser.V1.Model.Step, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceUser.V1.Model.OperationMetadata do
  def decode(value, options) do
    GoogleApi.ServiceUser.V1.Model.OperationMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceUser.V1.Model.OperationMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
