# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceUser.V1.Model.LoggingDestination do
  @moduledoc """
  Configuration of a specific logging destination (the producer project
  or the consumer project).

  ## Attributes

  *   `logs` (*type:* `list(String.t)`, *default:* `nil`) - Names of the logs to be sent to this destination. Each name must
      be defined in the Service.logs section. If the log name is
      not a domain scoped name, it will be automatically prefixed with
      the service name followed by "/".
  *   `monitoredResource` (*type:* `String.t`, *default:* `nil`) - The monitored resource type. The type must be defined in the
      Service.monitored_resources section.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :logs => list(String.t()),
          :monitoredResource => String.t()
        }

  field(:logs, type: :list)
  field(:monitoredResource)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceUser.V1.Model.LoggingDestination do
  def decode(value, options) do
    GoogleApi.ServiceUser.V1.Model.LoggingDestination.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceUser.V1.Model.LoggingDestination do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
