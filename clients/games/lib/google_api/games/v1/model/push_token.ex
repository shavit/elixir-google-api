# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Games.V1.Model.PushToken do
  @moduledoc """
  This is a JSON template for a push token resource.

  ## Attributes

  *   `clientRevision` (*type:* `String.t`, *default:* `nil`) - The revision of the client SDK used by your application, in the same format that's used by revisions.check. Used to send backward compatible messages. Format: [PLATFORM_TYPE]:[VERSION_NUMBER]. Possible values of PLATFORM_TYPE are:  
      - IOS - Push token is for iOS
  *   `id` (*type:* `GoogleApi.Games.V1.Model.PushTokenId.t`, *default:* `nil`) - Unique identifier for this push token.
  *   `kind` (*type:* `String.t`, *default:* `games#pushToken`) - Uniquely identifies the type of this resource. Value is always the fixed string games#pushToken.
  *   `language` (*type:* `String.t`, *default:* `nil`) - The preferred language for notifications that are sent using this token.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clientRevision => String.t(),
          :id => GoogleApi.Games.V1.Model.PushTokenId.t(),
          :kind => String.t(),
          :language => String.t()
        }

  field(:clientRevision)
  field(:id, as: GoogleApi.Games.V1.Model.PushTokenId)
  field(:kind)
  field(:language)
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.PushToken do
  def decode(value, options) do
    GoogleApi.Games.V1.Model.PushToken.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.PushToken do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
