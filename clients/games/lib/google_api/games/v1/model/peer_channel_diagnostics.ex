# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Games.V1.Model.PeerChannelDiagnostics do
  @moduledoc """
  This is a JSON template for peer channel diagnostics.

  ## Attributes

  *   `bytesReceived` (*type:* `GoogleApi.Games.V1.Model.AggregateStats.t`, *default:* `nil`) - Number of bytes received.
  *   `bytesSent` (*type:* `GoogleApi.Games.V1.Model.AggregateStats.t`, *default:* `nil`) - Number of bytes sent.
  *   `kind` (*type:* `String.t`, *default:* `games#peerChannelDiagnostics`) - Uniquely identifies the type of this resource. Value is always the fixed string games#peerChannelDiagnostics.
  *   `numMessagesLost` (*type:* `integer()`, *default:* `nil`) - Number of messages lost.
  *   `numMessagesReceived` (*type:* `integer()`, *default:* `nil`) - Number of messages received.
  *   `numMessagesSent` (*type:* `integer()`, *default:* `nil`) - Number of messages sent.
  *   `numSendFailures` (*type:* `integer()`, *default:* `nil`) - Number of send failures.
  *   `roundtripLatencyMillis` (*type:* `GoogleApi.Games.V1.Model.AggregateStats.t`, *default:* `nil`) - Roundtrip latency stats in milliseconds.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bytesReceived => GoogleApi.Games.V1.Model.AggregateStats.t(),
          :bytesSent => GoogleApi.Games.V1.Model.AggregateStats.t(),
          :kind => String.t(),
          :numMessagesLost => integer(),
          :numMessagesReceived => integer(),
          :numMessagesSent => integer(),
          :numSendFailures => integer(),
          :roundtripLatencyMillis => GoogleApi.Games.V1.Model.AggregateStats.t()
        }

  field(:bytesReceived, as: GoogleApi.Games.V1.Model.AggregateStats)
  field(:bytesSent, as: GoogleApi.Games.V1.Model.AggregateStats)
  field(:kind)
  field(:numMessagesLost)
  field(:numMessagesReceived)
  field(:numMessagesSent)
  field(:numSendFailures)
  field(:roundtripLatencyMillis, as: GoogleApi.Games.V1.Model.AggregateStats)
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.PeerChannelDiagnostics do
  def decode(value, options) do
    GoogleApi.Games.V1.Model.PeerChannelDiagnostics.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.PeerChannelDiagnostics do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
