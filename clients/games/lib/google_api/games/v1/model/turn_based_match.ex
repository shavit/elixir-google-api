# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Games.V1.Model.TurnBasedMatch do
  @moduledoc """
  This is a JSON template for a turn-based match resource object.

  ## Attributes

  *   `applicationId` (*type:* `String.t`, *default:* `nil`) - The ID of the application being played.
  *   `autoMatchingCriteria` (*type:* `GoogleApi.Games.V1.Model.TurnBasedAutoMatchingCriteria.t`, *default:* `nil`) - Criteria for auto-matching players into this match.
  *   `creationDetails` (*type:* `GoogleApi.Games.V1.Model.TurnBasedMatchModification.t`, *default:* `nil`) - Details about the match creation.
  *   `data` (*type:* `GoogleApi.Games.V1.Model.TurnBasedMatchData.t`, *default:* `nil`) - The data / game state for this match.
  *   `description` (*type:* `String.t`, *default:* `nil`) - This short description is generated by our servers based on turn state and is localized and worded relative to the player requesting the match. It is intended to be displayed when the match is shown in a list.
  *   `inviterId` (*type:* `String.t`, *default:* `nil`) - The ID of the participant that invited the user to the match. Not set if the user was not invited to the match.
  *   `kind` (*type:* `String.t`, *default:* `games#turnBasedMatch`) - Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatch.
  *   `lastUpdateDetails` (*type:* `GoogleApi.Games.V1.Model.TurnBasedMatchModification.t`, *default:* `nil`) - Details about the last update to the match.
  *   `matchId` (*type:* `String.t`, *default:* `nil`) - Globally unique ID for a turn-based match.
  *   `matchNumber` (*type:* `integer()`, *default:* `nil`) - The number of the match in a chain of rematches. Will be set to 1 for the first match and incremented by 1 for each rematch.
  *   `matchVersion` (*type:* `integer()`, *default:* `nil`) - The version of this match: an increasing counter, used to avoid out-of-date updates to the match.
  *   `participants` (*type:* `list(GoogleApi.Games.V1.Model.TurnBasedMatchParticipant.t)`, *default:* `nil`) - The participants involved in the match, along with their statuses. Includes participants who have left or declined invitations.
  *   `pendingParticipantId` (*type:* `String.t`, *default:* `nil`) - The ID of the participant that is taking a turn.
  *   `previousMatchData` (*type:* `GoogleApi.Games.V1.Model.TurnBasedMatchData.t`, *default:* `nil`) - The data / game state for the previous match; set for the first turn of rematches only.
  *   `rematchId` (*type:* `String.t`, *default:* `nil`) - The ID of a rematch of this match. Only set for completed matches that have been rematched.
  *   `results` (*type:* `list(GoogleApi.Games.V1.Model.ParticipantResult.t)`, *default:* `nil`) - The results reported for this match.
  *   `status` (*type:* `String.t`, *default:* `nil`) - The status of the match.
      Possible values are:  
      - "MATCH_AUTO_MATCHING" - One or more slots need to be filled by auto-matching; the match cannot be established until they are filled. 
      - "MATCH_ACTIVE" - The match has started. 
      - "MATCH_COMPLETE" - The match has finished. 
      - "MATCH_CANCELED" - The match was canceled. 
      - "MATCH_EXPIRED" - The match expired due to inactivity. 
      - "MATCH_DELETED" - The match should no longer be shown on the client. Returned only for tombstones for matches when sync is called.
  *   `userMatchStatus` (*type:* `String.t`, *default:* `nil`) - The status of the current user in the match. Derived from the match type, match status, the user's participant status, and the pending participant for the match.
      Possible values are:  
      - "USER_INVITED" - The user has been invited to join the match and has not responded yet. 
      - "USER_AWAITING_TURN" - The user is waiting for their turn. 
      - "USER_TURN" - The user has an action to take in the match. 
      - "USER_MATCH_COMPLETED" - The match has ended (it is completed, canceled, or expired.)
  *   `variant` (*type:* `integer()`, *default:* `nil`) - The variant / mode of the application being played; can be any integer value, or left blank.
  *   `withParticipantId` (*type:* `String.t`, *default:* `nil`) - The ID of another participant in the match that can be used when describing the participants the user is playing with.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :applicationId => String.t(),
          :autoMatchingCriteria => GoogleApi.Games.V1.Model.TurnBasedAutoMatchingCriteria.t(),
          :creationDetails => GoogleApi.Games.V1.Model.TurnBasedMatchModification.t(),
          :data => GoogleApi.Games.V1.Model.TurnBasedMatchData.t(),
          :description => String.t(),
          :inviterId => String.t(),
          :kind => String.t(),
          :lastUpdateDetails => GoogleApi.Games.V1.Model.TurnBasedMatchModification.t(),
          :matchId => String.t(),
          :matchNumber => integer(),
          :matchVersion => integer(),
          :participants => list(GoogleApi.Games.V1.Model.TurnBasedMatchParticipant.t()),
          :pendingParticipantId => String.t(),
          :previousMatchData => GoogleApi.Games.V1.Model.TurnBasedMatchData.t(),
          :rematchId => String.t(),
          :results => list(GoogleApi.Games.V1.Model.ParticipantResult.t()),
          :status => String.t(),
          :userMatchStatus => String.t(),
          :variant => integer(),
          :withParticipantId => String.t()
        }

  field(:applicationId)
  field(:autoMatchingCriteria, as: GoogleApi.Games.V1.Model.TurnBasedAutoMatchingCriteria)
  field(:creationDetails, as: GoogleApi.Games.V1.Model.TurnBasedMatchModification)
  field(:data, as: GoogleApi.Games.V1.Model.TurnBasedMatchData)
  field(:description)
  field(:inviterId)
  field(:kind)
  field(:lastUpdateDetails, as: GoogleApi.Games.V1.Model.TurnBasedMatchModification)
  field(:matchId)
  field(:matchNumber)
  field(:matchVersion)
  field(:participants, as: GoogleApi.Games.V1.Model.TurnBasedMatchParticipant, type: :list)
  field(:pendingParticipantId)
  field(:previousMatchData, as: GoogleApi.Games.V1.Model.TurnBasedMatchData)
  field(:rematchId)
  field(:results, as: GoogleApi.Games.V1.Model.ParticipantResult, type: :list)
  field(:status)
  field(:userMatchStatus)
  field(:variant)
  field(:withParticipantId)
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.TurnBasedMatch do
  def decode(value, options) do
    GoogleApi.Games.V1.Model.TurnBasedMatch.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.TurnBasedMatch do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
