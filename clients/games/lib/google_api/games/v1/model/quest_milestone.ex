# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Games.V1.Model.QuestMilestone do
  @moduledoc """
  This is a JSON template for a Quest Milestone resource.

  ## Attributes

  *   `completionRewardData` (*type:* `String.t`, *default:* `nil`) - The completion reward data of the milestone, represented as a Base64-encoded string. This is a developer-specified binary blob with size between 0 and 2 KB before encoding.
  *   `criteria` (*type:* `list(GoogleApi.Games.V1.Model.QuestCriterion.t)`, *default:* `nil`) - The criteria of the milestone.
  *   `id` (*type:* `String.t`, *default:* `nil`) - The milestone ID.
  *   `kind` (*type:* `String.t`, *default:* `games#questMilestone`) - Uniquely identifies the type of this resource. Value is always the fixed string games#questMilestone.
  *   `state` (*type:* `String.t`, *default:* `nil`) - The current state of the milestone.
      Possible values are:  
      - "COMPLETED_NOT_CLAIMED" - The milestone is complete, but has not yet been claimed. 
      - "CLAIMED" - The milestone is complete and has been claimed. 
      - "NOT_COMPLETED" - The milestone has not yet been completed. 
      - "NOT_STARTED" - The milestone is for a quest that has not yet been accepted.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :completionRewardData => String.t(),
          :criteria => list(GoogleApi.Games.V1.Model.QuestCriterion.t()),
          :id => String.t(),
          :kind => String.t(),
          :state => String.t()
        }

  field(:completionRewardData)
  field(:criteria, as: GoogleApi.Games.V1.Model.QuestCriterion, type: :list)
  field(:id)
  field(:kind)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.Games.V1.Model.QuestMilestone do
  def decode(value, options) do
    GoogleApi.Games.V1.Model.QuestMilestone.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Games.V1.Model.QuestMilestone do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
