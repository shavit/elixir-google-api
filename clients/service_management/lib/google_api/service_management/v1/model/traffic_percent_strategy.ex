# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceManagement.V1.Model.TrafficPercentStrategy do
  @moduledoc """
  Strategy that specifies how clients of Google Service Controller want to
  send traffic to use different config versions. This is generally
  used by API proxy to split traffic based on your configured precentage for
  each config version.

  One example of how to gradually rollout a new service configuration using
  this
  strategy:
  Day 1

      Rollout {
        id: "example.googleapis.com/rollout_20160206"
        traffic_percent_strategy {
          percentages: {
            "example.googleapis.com/20160201": 70.00
            "example.googleapis.com/20160206": 30.00
          }
        }
      }

  Day 2

      Rollout {
        id: "example.googleapis.com/rollout_20160207"
        traffic_percent_strategy: {
          percentages: {
            "example.googleapis.com/20160206": 100.00
          }
        }
      }

  ## Attributes

  *   `percentages` (*type:* `map()`, *default:* `nil`) - Maps service configuration IDs to their corresponding traffic percentage.
      Key is the service configuration ID, Value is the traffic percentage
      which must be greater than 0.0 and the sum must equal to 100.0.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :percentages => map()
        }

  field(:percentages, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceManagement.V1.Model.TrafficPercentStrategy do
  def decode(value, options) do
    GoogleApi.ServiceManagement.V1.Model.TrafficPercentStrategy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceManagement.V1.Model.TrafficPercentStrategy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
