# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceManagement.V1.Model.CustomError do
  @moduledoc """
  Customize service error responses.  For example, list any service
  specific protobuf types that can appear in error detail lists of
  error responses.

  Example:

      custom_error:
        types:
        - google.foo.v1.CustomError
        - google.foo.v1.AnotherError

  ## Attributes

  *   `rules` (*type:* `list(GoogleApi.ServiceManagement.V1.Model.CustomErrorRule.t)`, *default:* `nil`) - The list of custom error rules that apply to individual API messages.

      **NOTE:** All service configuration rules follow "last one wins" order.
  *   `types` (*type:* `list(String.t)`, *default:* `nil`) - The list of custom error detail types, e.g. 'google.foo.v1.CustomError'.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :rules => list(GoogleApi.ServiceManagement.V1.Model.CustomErrorRule.t()),
          :types => list(String.t())
        }

  field(:rules, as: GoogleApi.ServiceManagement.V1.Model.CustomErrorRule, type: :list)
  field(:types, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceManagement.V1.Model.CustomError do
  def decode(value, options) do
    GoogleApi.ServiceManagement.V1.Model.CustomError.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceManagement.V1.Model.CustomError do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
