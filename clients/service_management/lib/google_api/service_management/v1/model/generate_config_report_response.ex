# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceManagement.V1.Model.GenerateConfigReportResponse do
  @moduledoc """
  Response message for GenerateConfigReport method.

  ## Attributes

  *   `changeReports` (*type:* `list(GoogleApi.ServiceManagement.V1.Model.ChangeReport.t)`, *default:* `nil`) - list of ChangeReport, each corresponding to comparison between two
      service configurations.
  *   `diagnostics` (*type:* `list(GoogleApi.ServiceManagement.V1.Model.Diagnostic.t)`, *default:* `nil`) - Errors / Linter warnings associated with the service definition this
      report
      belongs to.
  *   `id` (*type:* `String.t`, *default:* `nil`) - ID of the service configuration this report belongs to.
  *   `serviceName` (*type:* `String.t`, *default:* `nil`) - Name of the service this report belongs to.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :changeReports => list(GoogleApi.ServiceManagement.V1.Model.ChangeReport.t()),
          :diagnostics => list(GoogleApi.ServiceManagement.V1.Model.Diagnostic.t()),
          :id => String.t(),
          :serviceName => String.t()
        }

  field(:changeReports, as: GoogleApi.ServiceManagement.V1.Model.ChangeReport, type: :list)
  field(:diagnostics, as: GoogleApi.ServiceManagement.V1.Model.Diagnostic, type: :list)
  field(:id)
  field(:serviceName)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceManagement.V1.Model.GenerateConfigReportResponse do
  def decode(value, options) do
    GoogleApi.ServiceManagement.V1.Model.GenerateConfigReportResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceManagement.V1.Model.GenerateConfigReportResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
