# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceManagement.V1.Model.Authentication do
  @moduledoc """
  `Authentication` defines the authentication configuration for an API.

  Example for an API targeted for external use:

      name: calendar.googleapis.com
      authentication:
        providers:
        - id: google_calendar_auth
          jwks_uri: https://www.googleapis.com/oauth2/v1/certs
          issuer: https://securetoken.google.com
        rules:
        - selector: "*"
          requirements:
            provider_id: google_calendar_auth

  ## Attributes

  *   `providers` (*type:* `list(GoogleApi.ServiceManagement.V1.Model.AuthProvider.t)`, *default:* `nil`) - Defines a set of authentication providers that a service supports.
  *   `rules` (*type:* `list(GoogleApi.ServiceManagement.V1.Model.AuthenticationRule.t)`, *default:* `nil`) - A list of authentication rules that apply to individual API methods.

      **NOTE:** All service configuration rules follow "last one wins" order.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :providers => list(GoogleApi.ServiceManagement.V1.Model.AuthProvider.t()),
          :rules => list(GoogleApi.ServiceManagement.V1.Model.AuthenticationRule.t())
        }

  field(:providers, as: GoogleApi.ServiceManagement.V1.Model.AuthProvider, type: :list)
  field(:rules, as: GoogleApi.ServiceManagement.V1.Model.AuthenticationRule, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceManagement.V1.Model.Authentication do
  def decode(value, options) do
    GoogleApi.ServiceManagement.V1.Model.Authentication.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceManagement.V1.Model.Authentication do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
