# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Analytics.V3.Model.EntityUserLinkPermissions do
  @moduledoc """
  Permissions the user has for this entity.

  ## Attributes

  *   `effective` (*type:* `list(String.t)`, *default:* `nil`) - Effective permissions represent all the permissions that a user has for this entity. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent entity. Effective permissions are read-only.
  *   `local` (*type:* `list(String.t)`, *default:* `nil`) - Permissions that a user has been assigned at this very level. Does not include any implied or inherited permissions. Local permissions are modifiable.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :effective => list(String.t()),
          :local => list(String.t())
        }

  field(:effective, type: :list)
  field(:local, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Analytics.V3.Model.EntityUserLinkPermissions do
  def decode(value, options) do
    GoogleApi.Analytics.V3.Model.EntityUserLinkPermissions.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Analytics.V3.Model.EntityUserLinkPermissions do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
