# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Analytics.V3.Model.GoalUrlDestinationDetails do
  @moduledoc """
  Details for the goal of the type URL_DESTINATION.

  ## Attributes

  *   `caseSensitive` (*type:* `boolean()`, *default:* `nil`) - Determines if the goal URL must exactly match the capitalization of visited URLs.
  *   `firstStepRequired` (*type:* `boolean()`, *default:* `nil`) - Determines if the first step in this goal is required.
  *   `matchType` (*type:* `String.t`, *default:* `nil`) - Match type for the goal URL. Possible values are HEAD, EXACT, or REGEX.
  *   `steps` (*type:* `list(GoogleApi.Analytics.V3.Model.GoalUrlDestinationDetailsSteps.t)`, *default:* `nil`) - List of steps configured for this goal funnel.
  *   `url` (*type:* `String.t`, *default:* `nil`) - URL for this goal.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :caseSensitive => boolean(),
          :firstStepRequired => boolean(),
          :matchType => String.t(),
          :steps => list(GoogleApi.Analytics.V3.Model.GoalUrlDestinationDetailsSteps.t()),
          :url => String.t()
        }

  field(:caseSensitive)
  field(:firstStepRequired)
  field(:matchType)
  field(:steps, as: GoogleApi.Analytics.V3.Model.GoalUrlDestinationDetailsSteps, type: :list)
  field(:url)
end

defimpl Poison.Decoder, for: GoogleApi.Analytics.V3.Model.GoalUrlDestinationDetails do
  def decode(value, options) do
    GoogleApi.Analytics.V3.Model.GoalUrlDestinationDetails.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Analytics.V3.Model.GoalUrlDestinationDetails do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
