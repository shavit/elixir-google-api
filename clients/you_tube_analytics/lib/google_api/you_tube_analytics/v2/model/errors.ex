# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.YouTubeAnalytics.V2.Model.Errors do
  @moduledoc """
  Request Error information.

  The presence of an error field signals that the operation
  has failed.

  ## Attributes

  *   `code` (*type:* `String.t`, *default:* `nil`) - Global error code. Deprecated and ignored.
      Set custom error codes in ErrorProto.domain and ErrorProto.code
      instead.
  *   `error` (*type:* `list(GoogleApi.YouTubeAnalytics.V2.Model.ErrorProto.t)`, *default:* `nil`) - Specific error description and codes
  *   `requestId` (*type:* `String.t`, *default:* `nil`) - Request identifier generated by the service, which can be
      used to identify the error in the logs
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :code => String.t(),
          :error => list(GoogleApi.YouTubeAnalytics.V2.Model.ErrorProto.t()),
          :requestId => String.t()
        }

  field(:code)
  field(:error, as: GoogleApi.YouTubeAnalytics.V2.Model.ErrorProto, type: :list)
  field(:requestId)
end

defimpl Poison.Decoder, for: GoogleApi.YouTubeAnalytics.V2.Model.Errors do
  def decode(value, options) do
    GoogleApi.YouTubeAnalytics.V2.Model.Errors.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.YouTubeAnalytics.V2.Model.Errors do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
