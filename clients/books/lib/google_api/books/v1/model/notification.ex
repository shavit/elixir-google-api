# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Books.V1.Model.Notification do
  @moduledoc """


  ## Attributes

  *   `body` (*type:* `String.t`, *default:* `nil`) - 
  *   `crmExperimentIds` (*type:* `list(String.t)`, *default:* `nil`) - The list of crm experiment ids.
  *   `doc_id` (*type:* `String.t`, *default:* `nil`) - 
  *   `doc_type` (*type:* `String.t`, *default:* `nil`) - 
  *   `dont_show_notification` (*type:* `boolean()`, *default:* `nil`) - 
  *   `iconUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `is_document_mature` (*type:* `boolean()`, *default:* `nil`) - 
  *   `kind` (*type:* `String.t`, *default:* `books#notification`) - Resource type.
  *   `notificationGroup` (*type:* `String.t`, *default:* `nil`) - 
  *   `notification_type` (*type:* `String.t`, *default:* `nil`) - 
  *   `pcampaign_id` (*type:* `String.t`, *default:* `nil`) - 
  *   `reason` (*type:* `String.t`, *default:* `nil`) - 
  *   `show_notification_settings_action` (*type:* `boolean()`, *default:* `nil`) - 
  *   `targetUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `timeToExpireMs` (*type:* `String.t`, *default:* `nil`) - 
  *   `title` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :body => String.t(),
          :crmExperimentIds => list(String.t()),
          :doc_id => String.t(),
          :doc_type => String.t(),
          :dont_show_notification => boolean(),
          :iconUrl => String.t(),
          :is_document_mature => boolean(),
          :kind => String.t(),
          :notificationGroup => String.t(),
          :notification_type => String.t(),
          :pcampaign_id => String.t(),
          :reason => String.t(),
          :show_notification_settings_action => boolean(),
          :targetUrl => String.t(),
          :timeToExpireMs => String.t(),
          :title => String.t()
        }

  field(:body)
  field(:crmExperimentIds, type: :list)
  field(:doc_id)
  field(:doc_type)
  field(:dont_show_notification)
  field(:iconUrl)
  field(:is_document_mature)
  field(:kind)
  field(:notificationGroup)
  field(:notification_type)
  field(:pcampaign_id)
  field(:reason)
  field(:show_notification_settings_action)
  field(:targetUrl)
  field(:timeToExpireMs)
  field(:title)
end

defimpl Poison.Decoder, for: GoogleApi.Books.V1.Model.Notification do
  def decode(value, options) do
    GoogleApi.Books.V1.Model.Notification.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Books.V1.Model.Notification do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
