# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Books.V1.Model.Volume do
  @moduledoc """


  ## Attributes

  *   `accessInfo` (*type:* `GoogleApi.Books.V1.Model.VolumeAccessInfo.t`, *default:* `nil`) - Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).
  *   `etag` (*type:* `String.t`, *default:* `nil`) - Opaque identifier for a specific version of a volume resource. (In LITE projection)
  *   `id` (*type:* `String.t`, *default:* `nil`) - Unique identifier for a volume. (In LITE projection.)
  *   `kind` (*type:* `String.t`, *default:* `books#volume`) - Resource type for a volume. (In LITE projection.)
  *   `layerInfo` (*type:* `GoogleApi.Books.V1.Model.VolumeLayerInfo.t`, *default:* `nil`) - What layers exist in this volume and high level information about them.
  *   `recommendedInfo` (*type:* `GoogleApi.Books.V1.Model.VolumeRecommendedInfo.t`, *default:* `nil`) - Recommendation related information for this volume.
  *   `saleInfo` (*type:* `GoogleApi.Books.V1.Model.VolumeSaleInfo.t`, *default:* `nil`) - Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).
  *   `searchInfo` (*type:* `GoogleApi.Books.V1.Model.VolumeSearchInfo.t`, *default:* `nil`) - Search result information related to this volume.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - URL to this resource. (In LITE projection.)
  *   `userInfo` (*type:* `GoogleApi.Books.V1.Model.VolumeUserInfo.t`, *default:* `nil`) - User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)
  *   `volumeInfo` (*type:* `GoogleApi.Books.V1.Model.VolumeVolumeInfo.t`, *default:* `nil`) - General volume information.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessInfo => GoogleApi.Books.V1.Model.VolumeAccessInfo.t(),
          :etag => String.t(),
          :id => String.t(),
          :kind => String.t(),
          :layerInfo => GoogleApi.Books.V1.Model.VolumeLayerInfo.t(),
          :recommendedInfo => GoogleApi.Books.V1.Model.VolumeRecommendedInfo.t(),
          :saleInfo => GoogleApi.Books.V1.Model.VolumeSaleInfo.t(),
          :searchInfo => GoogleApi.Books.V1.Model.VolumeSearchInfo.t(),
          :selfLink => String.t(),
          :userInfo => GoogleApi.Books.V1.Model.VolumeUserInfo.t(),
          :volumeInfo => GoogleApi.Books.V1.Model.VolumeVolumeInfo.t()
        }

  field(:accessInfo, as: GoogleApi.Books.V1.Model.VolumeAccessInfo)
  field(:etag)
  field(:id)
  field(:kind)
  field(:layerInfo, as: GoogleApi.Books.V1.Model.VolumeLayerInfo)
  field(:recommendedInfo, as: GoogleApi.Books.V1.Model.VolumeRecommendedInfo)
  field(:saleInfo, as: GoogleApi.Books.V1.Model.VolumeSaleInfo)
  field(:searchInfo, as: GoogleApi.Books.V1.Model.VolumeSearchInfo)
  field(:selfLink)
  field(:userInfo, as: GoogleApi.Books.V1.Model.VolumeUserInfo)
  field(:volumeInfo, as: GoogleApi.Books.V1.Model.VolumeVolumeInfo)
end

defimpl Poison.Decoder, for: GoogleApi.Books.V1.Model.Volume do
  def decode(value, options) do
    GoogleApi.Books.V1.Model.Volume.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Books.V1.Model.Volume do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
