# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ToolResults.V1beta3.Model.ToolOutputReference do
  @moduledoc """
  A reference to a ToolExecution output file.

  ## Attributes

  *   `creationTime` (*type:* `GoogleApi.ToolResults.V1beta3.Model.Timestamp.t`, *default:* `nil`) - The creation time of the file.

      - In response: present if set by create/update request - In create/update request: optional
  *   `output` (*type:* `GoogleApi.ToolResults.V1beta3.Model.FileReference.t`, *default:* `nil`) - A FileReference to an output file.

      - In response: always set - In create/update request: always set
  *   `testCase` (*type:* `GoogleApi.ToolResults.V1beta3.Model.TestCaseReference.t`, *default:* `nil`) - The test case to which this output file belongs.

      - In response: present if set by create/update request - In create/update request: optional
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :creationTime => GoogleApi.ToolResults.V1beta3.Model.Timestamp.t(),
          :output => GoogleApi.ToolResults.V1beta3.Model.FileReference.t(),
          :testCase => GoogleApi.ToolResults.V1beta3.Model.TestCaseReference.t()
        }

  field(:creationTime, as: GoogleApi.ToolResults.V1beta3.Model.Timestamp)
  field(:output, as: GoogleApi.ToolResults.V1beta3.Model.FileReference)
  field(:testCase, as: GoogleApi.ToolResults.V1beta3.Model.TestCaseReference)
end

defimpl Poison.Decoder, for: GoogleApi.ToolResults.V1beta3.Model.ToolOutputReference do
  def decode(value, options) do
    GoogleApi.ToolResults.V1beta3.Model.ToolOutputReference.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ToolResults.V1beta3.Model.ToolOutputReference do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
