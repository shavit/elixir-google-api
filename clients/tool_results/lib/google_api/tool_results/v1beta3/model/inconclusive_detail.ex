# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ToolResults.V1beta3.Model.InconclusiveDetail do
  @moduledoc """
  Details for an outcome with an INCONCLUSIVE outcome summary.

  ## Attributes

  *   `abortedByUser` (*type:* `boolean()`, *default:* `nil`) - If the end user aborted the test execution before a pass or fail could be determined. For example, the user pressed ctrl-c which sent a kill signal to the test runner while the test was running.
  *   `hasErrorLogs` (*type:* `boolean()`, *default:* `nil`) - If results are being provided to the user in certain cases of infrastructure failures
  *   `infrastructureFailure` (*type:* `boolean()`, *default:* `nil`) - If the test runner could not determine success or failure because the test depends on a component other than the system under test which failed.

      For example, a mobile test requires provisioning a device where the test executes, and that provisioning can fail.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :abortedByUser => boolean(),
          :hasErrorLogs => boolean(),
          :infrastructureFailure => boolean()
        }

  field(:abortedByUser)
  field(:hasErrorLogs)
  field(:infrastructureFailure)
end

defimpl Poison.Decoder, for: GoogleApi.ToolResults.V1beta3.Model.InconclusiveDetail do
  def decode(value, options) do
    GoogleApi.ToolResults.V1beta3.Model.InconclusiveDetail.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ToolResults.V1beta3.Model.InconclusiveDetail do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
