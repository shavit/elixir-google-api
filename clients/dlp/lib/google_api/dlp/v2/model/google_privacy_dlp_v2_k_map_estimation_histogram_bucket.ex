# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationHistogramBucket do
  @moduledoc """
  A KMapEstimationHistogramBucket message with the following values:
    min_anonymity: 3
    max_anonymity: 5
    frequency: 42
  means that there are 42 records whose quasi-identifier values correspond
  to 3, 4 or 5 people in the overlying population. An important particular
  case is when min_anonymity = max_anonymity = 1: the frequency field then
  corresponds to the number of uniquely identifiable records.

  ## Attributes

  *   `bucketSize` (*type:* `String.t`, *default:* `nil`) - Number of records within these anonymity bounds.
  *   `bucketValueCount` (*type:* `String.t`, *default:* `nil`) - Total number of distinct quasi-identifier tuple values in this bucket.
  *   `bucketValues` (*type:* `list(GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationQuasiIdValues.t)`, *default:* `nil`) - Sample of quasi-identifier tuple values in this bucket. The total
      number of classes returned per bucket is capped at 20.
  *   `maxAnonymity` (*type:* `String.t`, *default:* `nil`) - Always greater than or equal to min_anonymity.
  *   `minAnonymity` (*type:* `String.t`, *default:* `nil`) - Always positive.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bucketSize => String.t(),
          :bucketValueCount => String.t(),
          :bucketValues =>
            list(GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationQuasiIdValues.t()),
          :maxAnonymity => String.t(),
          :minAnonymity => String.t()
        }

  field(:bucketSize)
  field(:bucketValueCount)

  field(
    :bucketValues,
    as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationQuasiIdValues,
    type: :list
  )

  field(:maxAnonymity)
  field(:minAnonymity)
end

defimpl Poison.Decoder,
  for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationHistogramBucket do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationHistogramBucket.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationHistogramBucket do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
