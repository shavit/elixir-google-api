# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ContentItem do
  @moduledoc """
  Container structure for the content to inspect.

  ## Attributes

  *   `byteItem` (*type:* `GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ByteContentItem.t`, *default:* `nil`) - Content data to inspect or redact. Replaces `type` and `data`.
  *   `table` (*type:* `GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Table.t`, *default:* `nil`) - Structured content for inspection. See
      https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to
      learn more.
  *   `value` (*type:* `String.t`, *default:* `nil`) - String data to inspect or redact.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :byteItem => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ByteContentItem.t(),
          :table => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Table.t(),
          :value => String.t()
        }

  field(:byteItem, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ByteContentItem)
  field(:table, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Table)
  field(:value)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ContentItem do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ContentItem.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2ContentItem do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
