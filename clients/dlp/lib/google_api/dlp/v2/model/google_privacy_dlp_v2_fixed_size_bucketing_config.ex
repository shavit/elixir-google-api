# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2FixedSizeBucketingConfig do
  @moduledoc """
  Buckets values based on fixed size ranges. The
  Bucketing transformation can provide all of this functionality,
  but requires more configuration. This message is provided as a convenience to
  the user for simple bucketing strategies.

  The transformed value will be a hyphenated string of
  <lower_bound>-<upper_bound>, i.e if lower_bound = 10 and upper_bound = 20
  all values that are within this bucket will be replaced with "10-20".

  This can be used on data of type: double, long.

  If the bound Value type differs from the type of data
  being transformed, we will first attempt converting the type of the data to
  be transformed to match the type of the bound before comparing.

  See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.

  ## Attributes

  *   `bucketSize` (*type:* `float()`, *default:* `nil`) - Size of each bucket (except for minimum and maximum buckets). So if
      `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the
      following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,
      60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works. [Required].
  *   `lowerBound` (*type:* `GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value.t`, *default:* `nil`) - Lower bound value of buckets. All values less than `lower_bound` are
      grouped together into a single bucket; for example if `lower_bound` = 10,
      then all values less than 10 are replaced with the value “-10”. [Required].
  *   `upperBound` (*type:* `GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value.t`, *default:* `nil`) - Upper bound value of buckets. All values greater than upper_bound are
      grouped together into a single bucket; for example if `upper_bound` = 89,
      then all values greater than 89 are replaced with the value “89+”.
      [Required].
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bucketSize => float(),
          :lowerBound => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value.t(),
          :upperBound => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value.t()
        }

  field(:bucketSize)
  field(:lowerBound, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value)
  field(:upperBound, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2FixedSizeBucketingConfig do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2FixedSizeBucketingConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2FixedSizeBucketingConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
