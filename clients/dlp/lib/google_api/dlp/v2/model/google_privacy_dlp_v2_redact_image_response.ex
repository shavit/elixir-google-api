# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RedactImageResponse do
  @moduledoc """
  Results of redacting an image.

  ## Attributes

  *   `extractedText` (*type:* `String.t`, *default:* `nil`) - If an image was being inspected and the InspectConfig's include_quote was
      set to true, then this field will include all text, if any, that was found
      in the image.
  *   `inspectResult` (*type:* `GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectResult.t`, *default:* `nil`) - The findings. Populated when include_findings in the request is true.
  *   `redactedImage` (*type:* `String.t`, *default:* `nil`) - The redacted image. The type will be the same as the original image.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :extractedText => String.t(),
          :inspectResult => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectResult.t(),
          :redactedImage => String.t()
        }

  field(:extractedText)
  field(:inspectResult, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectResult)
  field(:redactedImage)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RedactImageResponse do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RedactImageResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RedactImageResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
