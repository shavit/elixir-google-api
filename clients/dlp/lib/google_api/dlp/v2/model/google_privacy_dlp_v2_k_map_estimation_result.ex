# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationResult do
  @moduledoc """
  Result of the reidentifiability analysis. Note that these results are an
  estimation, not exact values.

  ## Attributes

  *   `kMapEstimationHistogram` (*type:* `list(GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationHistogramBucket.t)`, *default:* `nil`) - The intervals [min_anonymity, max_anonymity] do not overlap. If a value
      doesn't correspond to any such interval, the associated frequency is
      zero. For example, the following records:
        {min_anonymity: 1, max_anonymity: 1, frequency: 17}
        {min_anonymity: 2, max_anonymity: 3, frequency: 42}
        {min_anonymity: 5, max_anonymity: 10, frequency: 99}
      mean that there are no record with an estimated anonymity of 4, 5, or
      larger than 10.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :kMapEstimationHistogram =>
            list(GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationHistogramBucket.t())
        }

  field(
    :kMapEstimationHistogram,
    as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationHistogramBucket,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationResult do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationResult.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2KMapEstimationResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
