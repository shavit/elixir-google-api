# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PublishToPubSub do
  @moduledoc """
  Publish a message into given Pub/Sub topic when DlpJob has completed. The
  message contains a single field, `DlpJobName`, which is equal to the
  finished job's
  [`DlpJob.name`](/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob).
  Compatible with: Inspect, Risk

  ## Attributes

  *   `topic` (*type:* `String.t`, *default:* `nil`) - Cloud Pub/Sub topic to send notifications to. The topic must have given
      publishing access rights to the DLP API service account executing
      the long running DlpJob sending the notifications.
      Format is projects/{project}/topics/{topic}.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :topic => String.t()
        }

  field(:topic)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PublishToPubSub do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PublishToPubSub.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PublishToPubSub do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
