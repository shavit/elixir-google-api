# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Classroom.V1.Model.Topic do
  @moduledoc """
  Topic created by a teacher for the course

  ## Attributes

  *   `courseId` (*type:* `String.t`, *default:* `nil`) - Identifier of the course.

      Read-only.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the topic, generated by the user.
      Leading and trailing whitespaces, if any, will be trimmed. Also, multiple
      consecutive whitespaces will be collapsed into one inside the name. The
      result must be a non-empty string. Topic names are case sensitive, and must
      be no longer than 100 characters.
  *   `topicId` (*type:* `String.t`, *default:* `nil`) - Unique identifier for the topic.

      Read-only.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - The time the topic was last updated by the system.

      Read-only.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :courseId => String.t(),
          :name => String.t(),
          :topicId => String.t(),
          :updateTime => DateTime.t()
        }

  field(:courseId)
  field(:name)
  field(:topicId)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Classroom.V1.Model.Topic do
  def decode(value, options) do
    GoogleApi.Classroom.V1.Model.Topic.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Classroom.V1.Model.Topic do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
