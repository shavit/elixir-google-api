# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Classroom.V1.Model.CourseAlias do
  @moduledoc """
  Alternative identifier for a course.

  An alias uniquely identifies a course. It must be unique within one of the
  following scopes:

  * domain: A domain-scoped alias is visible to all users within the alias
  creator's domain and can be created only by a domain admin. A domain-scoped
  alias is often used when a course has an identifier external to Classroom.

  * project: A project-scoped alias is visible to any request from an
  application using the Developer Console project ID that created the alias
  and can be created by any project. A project-scoped alias is often used when
  an application has alternative identifiers. A random value can also be used
  to avoid duplicate courses in the event of transmission failures, as retrying
  a request will return `ALREADY_EXISTS` if a previous one has succeeded.

  ## Attributes

  *   `alias` (*type:* `String.t`, *default:* `nil`) - Alias string. The format of the string indicates the desired alias scoping.

      * `d:<name>` indicates a domain-scoped alias.
        Example: `d:math_101`
      * `p:<name>` indicates a project-scoped alias.
        Example: `p:abc123`

      This field has a maximum length of 256 characters.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alias => String.t()
        }

  field(:alias)
end

defimpl Poison.Decoder, for: GoogleApi.Classroom.V1.Model.CourseAlias do
  def decode(value, options) do
    GoogleApi.Classroom.V1.Model.CourseAlias.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Classroom.V1.Model.CourseAlias do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
