# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AppsActivity.V1.Model.User do
  @moduledoc """
  A representation of a user.

  ## Attributes

  *   `isDeleted` (*type:* `boolean()`, *default:* `nil`) - A boolean which indicates whether the specified User was deleted. If true, name, photo and permission_id will be omitted.
  *   `isMe` (*type:* `boolean()`, *default:* `nil`) - Whether the user is the authenticated user.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The displayable name of the user.
  *   `permissionId` (*type:* `String.t`, *default:* `nil`) - The permission ID associated with this user. Equivalent to the Drive API's permission ID for this user, returned as part of the Drive Permissions resource.
  *   `photo` (*type:* `GoogleApi.AppsActivity.V1.Model.Photo.t`, *default:* `nil`) - The profile photo of the user. Not present if the user has no profile photo.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :isDeleted => boolean(),
          :isMe => boolean(),
          :name => String.t(),
          :permissionId => String.t(),
          :photo => GoogleApi.AppsActivity.V1.Model.Photo.t()
        }

  field(:isDeleted)
  field(:isMe)
  field(:name)
  field(:permissionId)
  field(:photo, as: GoogleApi.AppsActivity.V1.Model.Photo)
end

defimpl Poison.Decoder, for: GoogleApi.AppsActivity.V1.Model.User do
  def decode(value, options) do
    GoogleApi.AppsActivity.V1.Model.User.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AppsActivity.V1.Model.User do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
