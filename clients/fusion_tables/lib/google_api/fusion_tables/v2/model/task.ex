# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FusionTables.V2.Model.Task do
  @moduledoc """
  A background task on a table, initiated for time- or resource-consuming operations such as changing column types or deleting all rows.

  ## Attributes

  *   `kind` (*type:* `String.t`, *default:* `fusiontables#task`) - Type of the resource. This is always "fusiontables#task".
  *   `progress` (*type:* `String.t`, *default:* `nil`) - Task percentage completion.
  *   `started` (*type:* `boolean()`, *default:* `nil`) - false while the table is busy with some other task. true if this background task is currently running.
  *   `taskId` (*type:* `String.t`, *default:* `nil`) - Identifier for the task.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Type of background task.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :kind => String.t(),
          :progress => String.t(),
          :started => boolean(),
          :taskId => String.t(),
          :type => String.t()
        }

  field(:kind)
  field(:progress)
  field(:started)
  field(:taskId)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.FusionTables.V2.Model.Task do
  def decode(value, options) do
    GoogleApi.FusionTables.V2.Model.Task.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FusionTables.V2.Model.Task do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
