# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FusionTables.V2.Model.Sqlresponse do
  @moduledoc """
  Represents a response to a SQL statement.

  ## Attributes

  *   `columns` (*type:* `list(String.t)`, *default:* `nil`) - Columns in the table.
  *   `kind` (*type:* `String.t`, *default:* `fusiontables#sqlresponse`) - The kind of item this is. For responses to SQL queries, this is always fusiontables#sqlresponse.
  *   `rows` (*type:* `list(list(any()))`, *default:* `nil`) - The rows in the table. For each cell we print out whatever cell value (e.g., numeric, string) exists. Thus it is important that each cell contains only one value.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :columns => list(String.t()),
          :kind => String.t(),
          :rows => list(list(any()))
        }

  field(:columns, type: :list)
  field(:kind)
  field(:rows, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.FusionTables.V2.Model.Sqlresponse do
  def decode(value, options) do
    GoogleApi.FusionTables.V2.Model.Sqlresponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FusionTables.V2.Model.Sqlresponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
