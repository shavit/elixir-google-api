# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Vision.V1.Model.AnnotateImageRequest do
  @moduledoc """
  Request for performing Google Cloud Vision API tasks over a user-provided
  image, with user-requested features, and with context information.

  ## Attributes

  *   `features` (*type:* `list(GoogleApi.Vision.V1.Model.Feature.t)`, *default:* `nil`) - Requested features.
  *   `image` (*type:* `GoogleApi.Vision.V1.Model.Image.t`, *default:* `nil`) - The image to be processed.
  *   `imageContext` (*type:* `GoogleApi.Vision.V1.Model.ImageContext.t`, *default:* `nil`) - Additional context that may accompany the image.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :features => list(GoogleApi.Vision.V1.Model.Feature.t()),
          :image => GoogleApi.Vision.V1.Model.Image.t(),
          :imageContext => GoogleApi.Vision.V1.Model.ImageContext.t()
        }

  field(:features, as: GoogleApi.Vision.V1.Model.Feature, type: :list)
  field(:image, as: GoogleApi.Vision.V1.Model.Image)
  field(:imageContext, as: GoogleApi.Vision.V1.Model.ImageContext)
end

defimpl Poison.Decoder, for: GoogleApi.Vision.V1.Model.AnnotateImageRequest do
  def decode(value, options) do
    GoogleApi.Vision.V1.Model.AnnotateImageRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Vision.V1.Model.AnnotateImageRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
