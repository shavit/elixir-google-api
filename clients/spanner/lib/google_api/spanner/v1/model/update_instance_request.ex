# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Spanner.V1.Model.UpdateInstanceRequest do
  @moduledoc """
  The request for UpdateInstance.

  ## Attributes

  *   `fieldMask` (*type:* `String.t`, *default:* `nil`) - Required. A mask specifying which fields in [][google.spanner.admin.instance.v1.UpdateInstanceRequest.instance] should be updated.
      The field mask must always be specified; this prevents any future fields in
      [][google.spanner.admin.instance.v1.Instance] from being erased accidentally by clients that do not know
      about them.
  *   `instance` (*type:* `GoogleApi.Spanner.V1.Model.Instance.t`, *default:* `nil`) - Required. The instance to update, which must always include the instance
      name.  Otherwise, only fields mentioned in [][google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask] need be included.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fieldMask => String.t(),
          :instance => GoogleApi.Spanner.V1.Model.Instance.t()
        }

  field(:fieldMask)
  field(:instance, as: GoogleApi.Spanner.V1.Model.Instance)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.UpdateInstanceRequest do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.UpdateInstanceRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.UpdateInstanceRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
