# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CustomSearch.V1.Model.Result do
  @moduledoc """


  ## Attributes

  *   `cacheId` (*type:* `String.t`, *default:* `nil`) - 
  *   `displayLink` (*type:* `String.t`, *default:* `nil`) - 
  *   `fileFormat` (*type:* `String.t`, *default:* `nil`) - 
  *   `formattedUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `htmlFormattedUrl` (*type:* `String.t`, *default:* `nil`) - 
  *   `htmlSnippet` (*type:* `String.t`, *default:* `nil`) - 
  *   `htmlTitle` (*type:* `String.t`, *default:* `nil`) - 
  *   `image` (*type:* `GoogleApi.CustomSearch.V1.Model.ResultImage.t`, *default:* `nil`) - 
  *   `kind` (*type:* `String.t`, *default:* `customsearch#result`) - 
  *   `labels` (*type:* `list(GoogleApi.CustomSearch.V1.Model.ResultLabels.t)`, *default:* `nil`) - 
  *   `link` (*type:* `String.t`, *default:* `nil`) - 
  *   `mime` (*type:* `String.t`, *default:* `nil`) - 
  *   `pagemap` (*type:* `map()`, *default:* `nil`) - 
  *   `snippet` (*type:* `String.t`, *default:* `nil`) - 
  *   `title` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cacheId => String.t(),
          :displayLink => String.t(),
          :fileFormat => String.t(),
          :formattedUrl => String.t(),
          :htmlFormattedUrl => String.t(),
          :htmlSnippet => String.t(),
          :htmlTitle => String.t(),
          :image => GoogleApi.CustomSearch.V1.Model.ResultImage.t(),
          :kind => String.t(),
          :labels => list(GoogleApi.CustomSearch.V1.Model.ResultLabels.t()),
          :link => String.t(),
          :mime => String.t(),
          :pagemap => map(),
          :snippet => String.t(),
          :title => String.t()
        }

  field(:cacheId)
  field(:displayLink)
  field(:fileFormat)
  field(:formattedUrl)
  field(:htmlFormattedUrl)
  field(:htmlSnippet)
  field(:htmlTitle)
  field(:image, as: GoogleApi.CustomSearch.V1.Model.ResultImage)
  field(:kind)
  field(:labels, as: GoogleApi.CustomSearch.V1.Model.ResultLabels, type: :list)
  field(:link)
  field(:mime)
  field(:pagemap, type: :map)
  field(:snippet)
  field(:title)
end

defimpl Poison.Decoder, for: GoogleApi.CustomSearch.V1.Model.Result do
  def decode(value, options) do
    GoogleApi.CustomSearch.V1.Model.Result.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CustomSearch.V1.Model.Result do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
