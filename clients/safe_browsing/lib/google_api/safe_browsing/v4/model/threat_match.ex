# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SafeBrowsing.V4.Model.ThreatMatch do
  @moduledoc """
  A match when checking a threat entry in the Safe Browsing threat lists.

  ## Attributes

  *   `cacheDuration` (*type:* `String.t`, *default:* `nil`) - The cache lifetime for the returned match. Clients must not cache this
      response for more than this duration to avoid false positives.
  *   `platformType` (*type:* `String.t`, *default:* `nil`) - The platform type matching this threat.
  *   `threat` (*type:* `GoogleApi.SafeBrowsing.V4.Model.ThreatEntry.t`, *default:* `nil`) - The threat matching this threat.
  *   `threatEntryMetadata` (*type:* `GoogleApi.SafeBrowsing.V4.Model.ThreatEntryMetadata.t`, *default:* `nil`) - Optional metadata associated with this threat.
  *   `threatEntryType` (*type:* `String.t`, *default:* `nil`) - The threat entry type matching this threat.
  *   `threatType` (*type:* `String.t`, *default:* `nil`) - The threat type matching this threat.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cacheDuration => String.t(),
          :platformType => String.t(),
          :threat => GoogleApi.SafeBrowsing.V4.Model.ThreatEntry.t(),
          :threatEntryMetadata => GoogleApi.SafeBrowsing.V4.Model.ThreatEntryMetadata.t(),
          :threatEntryType => String.t(),
          :threatType => String.t()
        }

  field(:cacheDuration)
  field(:platformType)
  field(:threat, as: GoogleApi.SafeBrowsing.V4.Model.ThreatEntry)
  field(:threatEntryMetadata, as: GoogleApi.SafeBrowsing.V4.Model.ThreatEntryMetadata)
  field(:threatEntryType)
  field(:threatType)
end

defimpl Poison.Decoder, for: GoogleApi.SafeBrowsing.V4.Model.ThreatMatch do
  def decode(value, options) do
    GoogleApi.SafeBrowsing.V4.Model.ThreatMatch.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SafeBrowsing.V4.Model.ThreatMatch do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
