# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SafeBrowsing.V4.Model.FindFullHashesRequest do
  @moduledoc """
  Request to return full hashes matched by the provided hash prefixes.

  ## Attributes

  *   `apiClient` (*type:* `GoogleApi.SafeBrowsing.V4.Model.ClientInfo.t`, *default:* `nil`) - Client metadata associated with callers of higher-level APIs built on top
      of the client's implementation.
  *   `client` (*type:* `GoogleApi.SafeBrowsing.V4.Model.ClientInfo.t`, *default:* `nil`) - The client metadata.
  *   `clientStates` (*type:* `list(String.t)`, *default:* `nil`) - The current client states for each of the client's local threat lists.
  *   `threatInfo` (*type:* `GoogleApi.SafeBrowsing.V4.Model.ThreatInfo.t`, *default:* `nil`) - The lists and hashes to be checked.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiClient => GoogleApi.SafeBrowsing.V4.Model.ClientInfo.t(),
          :client => GoogleApi.SafeBrowsing.V4.Model.ClientInfo.t(),
          :clientStates => list(String.t()),
          :threatInfo => GoogleApi.SafeBrowsing.V4.Model.ThreatInfo.t()
        }

  field(:apiClient, as: GoogleApi.SafeBrowsing.V4.Model.ClientInfo)
  field(:client, as: GoogleApi.SafeBrowsing.V4.Model.ClientInfo)
  field(:clientStates, type: :list)
  field(:threatInfo, as: GoogleApi.SafeBrowsing.V4.Model.ThreatInfo)
end

defimpl Poison.Decoder, for: GoogleApi.SafeBrowsing.V4.Model.FindFullHashesRequest do
  def decode(value, options) do
    GoogleApi.SafeBrowsing.V4.Model.FindFullHashesRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SafeBrowsing.V4.Model.FindFullHashesRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
