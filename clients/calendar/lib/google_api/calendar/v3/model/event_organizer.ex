# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Calendar.V3.Model.EventOrganizer do
  @moduledoc """
  The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - The organizer's name, if available.
  *   `email` (*type:* `String.t`, *default:* `nil`) - The organizer's email address, if available. It must be a valid email address as per RFC5322.
  *   `id` (*type:* `String.t`, *default:* `nil`) - The organizer's Profile ID, if available. It corresponds to the id field in the People collection of the Google+ API
  *   `self` (*type:* `boolean()`, *default:* `false`) - Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t(),
          :email => String.t(),
          :id => String.t(),
          :self => boolean()
        }

  field(:displayName)
  field(:email)
  field(:id)
  field(:self)
end

defimpl Poison.Decoder, for: GoogleApi.Calendar.V3.Model.EventOrganizer do
  def decode(value, options) do
    GoogleApi.Calendar.V3.Model.EventOrganizer.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Calendar.V3.Model.EventOrganizer do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
