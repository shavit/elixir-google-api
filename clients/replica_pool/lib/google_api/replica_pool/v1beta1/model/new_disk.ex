# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.ReplicaPool.V1beta1.Model.NewDisk do
  @moduledoc """
  A Persistent Disk resource that will be created and attached to each Replica in the Pool. Each Replica will have a unique persistent disk that is created and attached to that Replica in READ_WRITE mode.

  ## Attributes

  *   `attachment` (*type:* `GoogleApi.ReplicaPool.V1beta1.Model.DiskAttachment.t`, *default:* `nil`) - How the disk will be attached to the Replica.
  *   `autoDelete` (*type:* `boolean()`, *default:* `nil`) - If true, then this disk will be deleted when the instance is deleted. The default value is true.
  *   `boot` (*type:* `boolean()`, *default:* `nil`) - If true, indicates that this is the root persistent disk.
  *   `initializeParams` (*type:* `GoogleApi.ReplicaPool.V1beta1.Model.NewDiskInitializeParams.t`, *default:* `nil`) - Create the new disk using these parameters. The name of the disk will be <instance_name>-<four_random_charactersgt;.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attachment => GoogleApi.ReplicaPool.V1beta1.Model.DiskAttachment.t(),
          :autoDelete => boolean(),
          :boot => boolean(),
          :initializeParams => GoogleApi.ReplicaPool.V1beta1.Model.NewDiskInitializeParams.t()
        }

  field(:attachment, as: GoogleApi.ReplicaPool.V1beta1.Model.DiskAttachment)
  field(:autoDelete)
  field(:boot)
  field(:initializeParams, as: GoogleApi.ReplicaPool.V1beta1.Model.NewDiskInitializeParams)
end

defimpl Poison.Decoder, for: GoogleApi.ReplicaPool.V1beta1.Model.NewDisk do
  def decode(value, options) do
    GoogleApi.ReplicaPool.V1beta1.Model.NewDisk.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ReplicaPool.V1beta1.Model.NewDisk do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
