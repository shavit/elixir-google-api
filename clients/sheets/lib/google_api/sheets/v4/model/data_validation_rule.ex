# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Sheets.V4.Model.DataValidationRule do
  @moduledoc """
  A data validation rule.

  ## Attributes

  *   `condition` (*type:* `GoogleApi.Sheets.V4.Model.BooleanCondition.t`, *default:* `nil`) - The condition that data in the cell must match.
  *   `inputMessage` (*type:* `String.t`, *default:* `nil`) - A message to show the user when adding data to the cell.
  *   `showCustomUi` (*type:* `boolean()`, *default:* `nil`) - True if the UI should be customized based on the kind of condition.
      If true, "List" conditions will show a dropdown.
  *   `strict` (*type:* `boolean()`, *default:* `nil`) - True if invalid data should be rejected.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :condition => GoogleApi.Sheets.V4.Model.BooleanCondition.t(),
          :inputMessage => String.t(),
          :showCustomUi => boolean(),
          :strict => boolean()
        }

  field(:condition, as: GoogleApi.Sheets.V4.Model.BooleanCondition)
  field(:inputMessage)
  field(:showCustomUi)
  field(:strict)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.DataValidationRule do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.DataValidationRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.DataValidationRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
