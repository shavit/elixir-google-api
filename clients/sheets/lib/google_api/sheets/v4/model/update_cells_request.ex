# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Sheets.V4.Model.UpdateCellsRequest do
  @moduledoc """
  Updates all cells in a range with new data.

  ## Attributes

  *   `fields` (*type:* `String.t`, *default:* `nil`) - The fields of CellData that should be updated.
      At least one field must be specified.
      The root is the CellData; 'row.values.' should not be specified.
      A single `"*"` can be used as short-hand for listing every field.
  *   `range` (*type:* `GoogleApi.Sheets.V4.Model.GridRange.t`, *default:* `nil`) - The range to write data to.

      If the data in rows does not cover the entire requested range,
      the fields matching those set in fields will be cleared.
  *   `rows` (*type:* `list(GoogleApi.Sheets.V4.Model.RowData.t)`, *default:* `nil`) - The data to write.
  *   `start` (*type:* `GoogleApi.Sheets.V4.Model.GridCoordinate.t`, *default:* `nil`) - The coordinate to start writing data at.
      Any number of rows and columns (including a different number of
      columns per row) may be written.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fields => String.t(),
          :range => GoogleApi.Sheets.V4.Model.GridRange.t(),
          :rows => list(GoogleApi.Sheets.V4.Model.RowData.t()),
          :start => GoogleApi.Sheets.V4.Model.GridCoordinate.t()
        }

  field(:fields)
  field(:range, as: GoogleApi.Sheets.V4.Model.GridRange)
  field(:rows, as: GoogleApi.Sheets.V4.Model.RowData, type: :list)
  field(:start, as: GoogleApi.Sheets.V4.Model.GridCoordinate)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.UpdateCellsRequest do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.UpdateCellsRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.UpdateCellsRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
