# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Sheets.V4.Model.TextFormat do
  @moduledoc """
  The format of a run of text in a cell.
  Absent values indicate that the field isn't specified.

  ## Attributes

  *   `bold` (*type:* `boolean()`, *default:* `nil`) - True if the text is bold.
  *   `fontFamily` (*type:* `String.t`, *default:* `nil`) - The font family.
  *   `fontSize` (*type:* `integer()`, *default:* `nil`) - The size of the font.
  *   `foregroundColor` (*type:* `GoogleApi.Sheets.V4.Model.Color.t`, *default:* `nil`) - The foreground color of the text.
  *   `italic` (*type:* `boolean()`, *default:* `nil`) - True if the text is italicized.
  *   `strikethrough` (*type:* `boolean()`, *default:* `nil`) - True if the text has a strikethrough.
  *   `underline` (*type:* `boolean()`, *default:* `nil`) - True if the text is underlined.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bold => boolean(),
          :fontFamily => String.t(),
          :fontSize => integer(),
          :foregroundColor => GoogleApi.Sheets.V4.Model.Color.t(),
          :italic => boolean(),
          :strikethrough => boolean(),
          :underline => boolean()
        }

  field(:bold)
  field(:fontFamily)
  field(:fontSize)
  field(:foregroundColor, as: GoogleApi.Sheets.V4.Model.Color)
  field(:italic)
  field(:strikethrough)
  field(:underline)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.TextFormat do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.TextFormat.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.TextFormat do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
