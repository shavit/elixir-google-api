# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Sheets.V4.Model.UpdateConditionalFormatRuleRequest do
  @moduledoc """
  Updates a conditional format rule at the given index,
  or moves a conditional format rule to another index.

  ## Attributes

  *   `index` (*type:* `integer()`, *default:* `nil`) - The zero-based index of the rule that should be replaced or moved.
  *   `newIndex` (*type:* `integer()`, *default:* `nil`) - The zero-based new index the rule should end up at.
  *   `rule` (*type:* `GoogleApi.Sheets.V4.Model.ConditionalFormatRule.t`, *default:* `nil`) - The rule that should replace the rule at the given index.
  *   `sheetId` (*type:* `integer()`, *default:* `nil`) - The sheet of the rule to move.  Required if new_index is set,
      unused otherwise.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :index => integer(),
          :newIndex => integer(),
          :rule => GoogleApi.Sheets.V4.Model.ConditionalFormatRule.t(),
          :sheetId => integer()
        }

  field(:index)
  field(:newIndex)
  field(:rule, as: GoogleApi.Sheets.V4.Model.ConditionalFormatRule)
  field(:sheetId)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.UpdateConditionalFormatRuleRequest do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.UpdateConditionalFormatRuleRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.UpdateConditionalFormatRuleRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
