# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Sheets.V4.Model.ExtendedValue do
  @moduledoc """
  The kinds of value that a cell in a spreadsheet can have.

  ## Attributes

  *   `boolValue` (*type:* `boolean()`, *default:* `nil`) - Represents a boolean value.
  *   `errorValue` (*type:* `GoogleApi.Sheets.V4.Model.ErrorValue.t`, *default:* `nil`) - Represents an error.
      This field is read-only.
  *   `formulaValue` (*type:* `String.t`, *default:* `nil`) - Represents a formula.
  *   `numberValue` (*type:* `float()`, *default:* `nil`) - Represents a double value.
      Note: Dates, Times and DateTimes are represented as doubles in
      "serial number" format.
  *   `stringValue` (*type:* `String.t`, *default:* `nil`) - Represents a string value.
      Leading single quotes are not included. For example, if the user typed
      `'123` into the UI, this would be represented as a `stringValue` of
      `"123"`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :boolValue => boolean(),
          :errorValue => GoogleApi.Sheets.V4.Model.ErrorValue.t(),
          :formulaValue => String.t(),
          :numberValue => float(),
          :stringValue => String.t()
        }

  field(:boolValue)
  field(:errorValue, as: GoogleApi.Sheets.V4.Model.ErrorValue)
  field(:formulaValue)
  field(:numberValue)
  field(:stringValue)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.ExtendedValue do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.ExtendedValue.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.ExtendedValue do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
