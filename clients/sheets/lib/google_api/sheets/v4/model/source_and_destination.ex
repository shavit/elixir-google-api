# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Sheets.V4.Model.SourceAndDestination do
  @moduledoc """
  A combination of a source range and how to extend that source.

  ## Attributes

  *   `dimension` (*type:* `String.t`, *default:* `nil`) - The dimension that data should be filled into.
  *   `fillLength` (*type:* `integer()`, *default:* `nil`) - The number of rows or columns that data should be filled into.
      Positive numbers expand beyond the last row or last column
      of the source.  Negative numbers expand before the first row
      or first column of the source.
  *   `source` (*type:* `GoogleApi.Sheets.V4.Model.GridRange.t`, *default:* `nil`) - The location of the data to use as the source of the autofill.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dimension => String.t(),
          :fillLength => integer(),
          :source => GoogleApi.Sheets.V4.Model.GridRange.t()
        }

  field(:dimension)
  field(:fillLength)
  field(:source, as: GoogleApi.Sheets.V4.Model.GridRange)
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.SourceAndDestination do
  def decode(value, options) do
    GoogleApi.Sheets.V4.Model.SourceAndDestination.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.SourceAndDestination do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
