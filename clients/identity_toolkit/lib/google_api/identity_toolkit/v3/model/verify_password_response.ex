# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.VerifyPasswordResponse do
  @moduledoc """
  Request of verifying the password.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - The name of the user.
  *   `email` (*type:* `String.t`, *default:* `nil`) - The email returned by the IdP. NOTE: The federated login user may not own the email.
  *   `expiresIn` (*type:* `String.t`, *default:* `nil`) - If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
  *   `idToken` (*type:* `String.t`, *default:* `nil`) - The GITKit token for authenticated user.
  *   `kind` (*type:* `String.t`, *default:* `identitytoolkit#VerifyPasswordResponse`) - The fixed string "identitytoolkit#VerifyPasswordResponse".
  *   `localId` (*type:* `String.t`, *default:* `nil`) - The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
  *   `oauthAccessToken` (*type:* `String.t`, *default:* `nil`) - The OAuth2 access token.
  *   `oauthAuthorizationCode` (*type:* `String.t`, *default:* `nil`) - The OAuth2 authorization code.
  *   `oauthExpireIn` (*type:* `integer()`, *default:* `nil`) - The lifetime in seconds of the OAuth2 access token.
  *   `photoUrl` (*type:* `String.t`, *default:* `nil`) - The URI of the user's photo at IdP
  *   `refreshToken` (*type:* `String.t`, *default:* `nil`) - If idToken is STS id token, then this field will be refresh token.
  *   `registered` (*type:* `boolean()`, *default:* `nil`) - Whether the email is registered.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t(),
          :email => String.t(),
          :expiresIn => String.t(),
          :idToken => String.t(),
          :kind => String.t(),
          :localId => String.t(),
          :oauthAccessToken => String.t(),
          :oauthAuthorizationCode => String.t(),
          :oauthExpireIn => integer(),
          :photoUrl => String.t(),
          :refreshToken => String.t(),
          :registered => boolean()
        }

  field(:displayName)
  field(:email)
  field(:expiresIn)
  field(:idToken)
  field(:kind)
  field(:localId)
  field(:oauthAccessToken)
  field(:oauthAuthorizationCode)
  field(:oauthExpireIn)
  field(:photoUrl)
  field(:refreshToken)
  field(:registered)
end

defimpl Poison.Decoder, for: GoogleApi.IdentityToolkit.V3.Model.VerifyPasswordResponse do
  def decode(value, options) do
    GoogleApi.IdentityToolkit.V3.Model.VerifyPasswordResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IdentityToolkit.V3.Model.VerifyPasswordResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
