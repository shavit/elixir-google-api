# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.SignupNewUserResponse do
  @moduledoc """
  Response of signing up new user, creating anonymous user or anonymous user reauth.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - The name of the user.
  *   `email` (*type:* `String.t`, *default:* `nil`) - The email of the user.
  *   `expiresIn` (*type:* `String.t`, *default:* `nil`) - If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
  *   `idToken` (*type:* `String.t`, *default:* `nil`) - The Gitkit id token to login the newly sign up user.
  *   `kind` (*type:* `String.t`, *default:* `identitytoolkit#SignupNewUserResponse`) - The fixed string "identitytoolkit#SignupNewUserResponse".
  *   `localId` (*type:* `String.t`, *default:* `nil`) - The RP local ID of the user.
  *   `refreshToken` (*type:* `String.t`, *default:* `nil`) - If idToken is STS id token, then this field will be refresh token.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t(),
          :email => String.t(),
          :expiresIn => String.t(),
          :idToken => String.t(),
          :kind => String.t(),
          :localId => String.t(),
          :refreshToken => String.t()
        }

  field(:displayName)
  field(:email)
  field(:expiresIn)
  field(:idToken)
  field(:kind)
  field(:localId)
  field(:refreshToken)
end

defimpl Poison.Decoder, for: GoogleApi.IdentityToolkit.V3.Model.SignupNewUserResponse do
  def decode(value, options) do
    GoogleApi.IdentityToolkit.V3.Model.SignupNewUserResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IdentityToolkit.V3.Model.SignupNewUserResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
