# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.VerifyCustomTokenResponse do
  @moduledoc """
  Response from verifying a custom token

  ## Attributes

  *   `expiresIn` (*type:* `String.t`, *default:* `nil`) - If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
  *   `idToken` (*type:* `String.t`, *default:* `nil`) - The GITKit token for authenticated user.
  *   `isNewUser` (*type:* `boolean()`, *default:* `nil`) - True if it's a new user sign-in, false if it's a returning user.
  *   `kind` (*type:* `String.t`, *default:* `identitytoolkit#VerifyCustomTokenResponse`) - The fixed string "identitytoolkit#VerifyCustomTokenResponse".
  *   `refreshToken` (*type:* `String.t`, *default:* `nil`) - If idToken is STS id token, then this field will be refresh token.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :expiresIn => String.t(),
          :idToken => String.t(),
          :isNewUser => boolean(),
          :kind => String.t(),
          :refreshToken => String.t()
        }

  field(:expiresIn)
  field(:idToken)
  field(:isNewUser)
  field(:kind)
  field(:refreshToken)
end

defimpl Poison.Decoder, for: GoogleApi.IdentityToolkit.V3.Model.VerifyCustomTokenResponse do
  def decode(value, options) do
    GoogleApi.IdentityToolkit.V3.Model.VerifyCustomTokenResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IdentityToolkit.V3.Model.VerifyCustomTokenResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
