# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyGetProjectConfigResponse do
  @moduledoc """
  Response of getting the project configuration.

  ## Attributes

  *   `allowPasswordUser` (*type:* `boolean()`, *default:* `nil`) - Whether to allow password user sign in or sign up.
  *   `apiKey` (*type:* `String.t`, *default:* `nil`) - Browser API key, needed when making http request to Apiary.
  *   `authorizedDomains` (*type:* `list(String.t)`, *default:* `nil`) - Authorized domains.
  *   `changeEmailTemplate` (*type:* `GoogleApi.IdentityToolkit.V3.Model.EmailTemplate.t`, *default:* `nil`) - Change email template.
  *   `dynamicLinksDomain` (*type:* `String.t`, *default:* `nil`) - 
  *   `enableAnonymousUser` (*type:* `boolean()`, *default:* `nil`) - Whether anonymous user is enabled.
  *   `idpConfig` (*type:* `list(GoogleApi.IdentityToolkit.V3.Model.IdpConfig.t)`, *default:* `nil`) - OAuth2 provider configuration.
  *   `legacyResetPasswordTemplate` (*type:* `GoogleApi.IdentityToolkit.V3.Model.EmailTemplate.t`, *default:* `nil`) - Legacy reset password email template.
  *   `projectId` (*type:* `String.t`, *default:* `nil`) - Project ID of the relying party.
  *   `resetPasswordTemplate` (*type:* `GoogleApi.IdentityToolkit.V3.Model.EmailTemplate.t`, *default:* `nil`) - Reset password email template.
  *   `useEmailSending` (*type:* `boolean()`, *default:* `nil`) - Whether to use email sending provided by Firebear.
  *   `verifyEmailTemplate` (*type:* `GoogleApi.IdentityToolkit.V3.Model.EmailTemplate.t`, *default:* `nil`) - Verify email template.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowPasswordUser => boolean(),
          :apiKey => String.t(),
          :authorizedDomains => list(String.t()),
          :changeEmailTemplate => GoogleApi.IdentityToolkit.V3.Model.EmailTemplate.t(),
          :dynamicLinksDomain => String.t(),
          :enableAnonymousUser => boolean(),
          :idpConfig => list(GoogleApi.IdentityToolkit.V3.Model.IdpConfig.t()),
          :legacyResetPasswordTemplate => GoogleApi.IdentityToolkit.V3.Model.EmailTemplate.t(),
          :projectId => String.t(),
          :resetPasswordTemplate => GoogleApi.IdentityToolkit.V3.Model.EmailTemplate.t(),
          :useEmailSending => boolean(),
          :verifyEmailTemplate => GoogleApi.IdentityToolkit.V3.Model.EmailTemplate.t()
        }

  field(:allowPasswordUser)
  field(:apiKey)
  field(:authorizedDomains, type: :list)
  field(:changeEmailTemplate, as: GoogleApi.IdentityToolkit.V3.Model.EmailTemplate)
  field(:dynamicLinksDomain)
  field(:enableAnonymousUser)
  field(:idpConfig, as: GoogleApi.IdentityToolkit.V3.Model.IdpConfig, type: :list)
  field(:legacyResetPasswordTemplate, as: GoogleApi.IdentityToolkit.V3.Model.EmailTemplate)
  field(:projectId)
  field(:resetPasswordTemplate, as: GoogleApi.IdentityToolkit.V3.Model.EmailTemplate)
  field(:useEmailSending)
  field(:verifyEmailTemplate, as: GoogleApi.IdentityToolkit.V3.Model.EmailTemplate)
end

defimpl Poison.Decoder,
  for: GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyGetProjectConfigResponse do
  def decode(value, options) do
    GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyGetProjectConfigResponse.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.IdentityToolkit.V3.Model.IdentitytoolkitRelyingpartyGetProjectConfigResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
