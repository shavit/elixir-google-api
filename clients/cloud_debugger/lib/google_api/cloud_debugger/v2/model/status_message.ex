# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudDebugger.V2.Model.StatusMessage do
  @moduledoc """
  Represents a contextual status message.
  The message can indicate an error or informational status, and refer to
  specific parts of the containing object.
  For example, the `Breakpoint.status` field can indicate an error referring
  to the `BREAKPOINT_SOURCE_LOCATION` with the message `Location not found`.

  ## Attributes

  *   `description` (*type:* `GoogleApi.CloudDebugger.V2.Model.FormatMessage.t`, *default:* `nil`) - Status message text.
  *   `isError` (*type:* `boolean()`, *default:* `nil`) - Distinguishes errors from informational messages.
  *   `refersTo` (*type:* `String.t`, *default:* `nil`) - Reference to which the message applies.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => GoogleApi.CloudDebugger.V2.Model.FormatMessage.t(),
          :isError => boolean(),
          :refersTo => String.t()
        }

  field(:description, as: GoogleApi.CloudDebugger.V2.Model.FormatMessage)
  field(:isError)
  field(:refersTo)
end

defimpl Poison.Decoder, for: GoogleApi.CloudDebugger.V2.Model.StatusMessage do
  def decode(value, options) do
    GoogleApi.CloudDebugger.V2.Model.StatusMessage.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudDebugger.V2.Model.StatusMessage do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
