# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudDebugger.V2.Model.ListBreakpointsResponse do
  @moduledoc """
  Response for listing breakpoints.

  ## Attributes

  *   `breakpoints` (*type:* `list(GoogleApi.CloudDebugger.V2.Model.Breakpoint.t)`, *default:* `nil`) - List of breakpoints matching the request.
      The fields `id` and `location` are guaranteed to be set on each breakpoint.
      The fields: `stack_frames`, `evaluated_expressions` and `variable_table`
      are cleared on each breakpoint regardless of its status.
  *   `nextWaitToken` (*type:* `String.t`, *default:* `nil`) - A wait token that can be used in the next call to `list` (REST) or
      `ListBreakpoints` (RPC) to block until the list of breakpoints has changes.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :breakpoints => list(GoogleApi.CloudDebugger.V2.Model.Breakpoint.t()),
          :nextWaitToken => String.t()
        }

  field(:breakpoints, as: GoogleApi.CloudDebugger.V2.Model.Breakpoint, type: :list)
  field(:nextWaitToken)
end

defimpl Poison.Decoder, for: GoogleApi.CloudDebugger.V2.Model.ListBreakpointsResponse do
  def decode(value, options) do
    GoogleApi.CloudDebugger.V2.Model.ListBreakpointsResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudDebugger.V2.Model.ListBreakpointsResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
