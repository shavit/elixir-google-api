# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.TagManager.V2.Model.Environment do
  @moduledoc """
  Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types.

  ## Attributes

  *   `accountId` (*type:* `String.t`, *default:* `nil`) - GTM Account ID.
  *   `authorizationCode` (*type:* `String.t`, *default:* `nil`) - The environment authorization code.
  *   `authorizationTimestamp` (*type:* `GoogleApi.TagManager.V2.Model.Timestamp.t`, *default:* `nil`) - The last update time-stamp for the authorization code.
  *   `containerId` (*type:* `String.t`, *default:* `nil`) - GTM Container ID.
  *   `containerVersionId` (*type:* `String.t`, *default:* `nil`) - Represents a link to a container version.
  *   `description` (*type:* `String.t`, *default:* `nil`) - The environment description. Can be set or changed only on USER type environments.
  *   `enableDebug` (*type:* `boolean()`, *default:* `nil`) - Whether or not to enable debug by default for the environment.
  *   `environmentId` (*type:* `String.t`, *default:* `nil`) - GTM Environment ID uniquely identifies the GTM Environment.
  *   `fingerprint` (*type:* `String.t`, *default:* `nil`) - The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The environment display name. Can be set or changed only on USER type environments.
  *   `path` (*type:* `String.t`, *default:* `nil`) - GTM Environment's API relative path.
  *   `tagManagerUrl` (*type:* `String.t`, *default:* `nil`) - Auto generated link to the tag manager UI
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of this environment.
  *   `url` (*type:* `String.t`, *default:* `nil`) - Default preview page url for the environment.
  *   `workspaceId` (*type:* `String.t`, *default:* `nil`) - Represents a link to a quick preview of a workspace.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accountId => String.t(),
          :authorizationCode => String.t(),
          :authorizationTimestamp => GoogleApi.TagManager.V2.Model.Timestamp.t(),
          :containerId => String.t(),
          :containerVersionId => String.t(),
          :description => String.t(),
          :enableDebug => boolean(),
          :environmentId => String.t(),
          :fingerprint => String.t(),
          :name => String.t(),
          :path => String.t(),
          :tagManagerUrl => String.t(),
          :type => String.t(),
          :url => String.t(),
          :workspaceId => String.t()
        }

  field(:accountId)
  field(:authorizationCode)
  field(:authorizationTimestamp, as: GoogleApi.TagManager.V2.Model.Timestamp)
  field(:containerId)
  field(:containerVersionId)
  field(:description)
  field(:enableDebug)
  field(:environmentId)
  field(:fingerprint)
  field(:name)
  field(:path)
  field(:tagManagerUrl)
  field(:type)
  field(:url)
  field(:workspaceId)
end

defimpl Poison.Decoder, for: GoogleApi.TagManager.V2.Model.Environment do
  def decode(value, options) do
    GoogleApi.TagManager.V2.Model.Environment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.TagManager.V2.Model.Environment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
