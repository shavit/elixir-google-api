# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Firestore.V1.Model.Document do
  @moduledoc """
  A Firestore document.

  Must not exceed 1 MiB - 4 bytes.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which the document was created.

      This value increases monotonically when a document is deleted then
      recreated. It can also be compared to values from other documents and
      the `read_time` of a query.
  *   `fields` (*type:* `%{optional(String.t) => GoogleApi.Firestore.V1.Model.Value.t}`, *default:* `nil`) - The document's fields.

      The map keys represent field names.

      A simple field name contains only characters `a` to `z`, `A` to `Z`,
      `0` to `9`, or `_`, and must not start with `0` to `9`. For example,
      `foo_bar_17`.

      Field names matching the regular expression `__.*__` are reserved. Reserved
      field names are forbidden except in certain documented contexts. The map
      keys, represented as UTF-8, must not exceed 1,500 bytes and cannot be
      empty.

      Field paths may be used in other contexts to refer to structured fields
      defined here. For `map_value`, the field path is represented by the simple
      or quoted field names of the containing fields, delimited by `.`. For
      example, the structured field
      `"foo" : { map_value: { "x&y" : { string_value: "hello" }}}` would be
      represented by the field path `foo.x&y`.

      Within a field path, a quoted field name starts and ends with `` ` `` and
      may contain any character. Some characters, including `` ` ``, must be
      escaped using a `\\`. For example, `` `x&y` `` represents `x&y` and
      `` `bak\\`tik` `` represents `` bak`tik ``.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The resource name of the document, for example
      `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which the document was last changed.

      This value is initially set to the `create_time` then increases
      monotonically with each change to the document. It can also be
      compared to values from other documents and the `read_time` of a query.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t(),
          :fields => %{optional(String.t()) => GoogleApi.Firestore.V1.Model.Value.t()},
          :name => String.t(),
          :updateTime => DateTime.t()
        }

  field(:createTime, as: DateTime)
  field(:fields, as: GoogleApi.Firestore.V1.Model.Value, type: :map)
  field(:name)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Firestore.V1.Model.Document do
  def decode(value, options) do
    GoogleApi.Firestore.V1.Model.Document.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Firestore.V1.Model.Document do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
