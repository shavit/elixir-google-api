# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Firestore.V1beta1.Model.BatchGetDocumentsRequest do
  @moduledoc """
  The request for Firestore.BatchGetDocuments.

  ## Attributes

  *   `documents` (*type:* `list(String.t)`, *default:* `nil`) - The names of the documents to retrieve. In the format:
      `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
      The request will fail if any of the document is not a child resource of the
      given `database`. Duplicate names will be elided.
  *   `mask` (*type:* `GoogleApi.Firestore.V1beta1.Model.DocumentMask.t`, *default:* `nil`) - The fields to return. If not set, returns all fields.

      If a document has a field that is not present in this mask, that field will
      not be returned in the response.
  *   `newTransaction` (*type:* `GoogleApi.Firestore.V1beta1.Model.TransactionOptions.t`, *default:* `nil`) - Starts a new transaction and reads the documents.
      Defaults to a read-only transaction.
      The new transaction ID will be returned as the first response in the
      stream.
  *   `readTime` (*type:* `DateTime.t`, *default:* `nil`) - Reads documents as they were at the given time.
      This may not be older than 60 seconds.
  *   `transaction` (*type:* `String.t`, *default:* `nil`) - Reads documents in a transaction.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :documents => list(String.t()),
          :mask => GoogleApi.Firestore.V1beta1.Model.DocumentMask.t(),
          :newTransaction => GoogleApi.Firestore.V1beta1.Model.TransactionOptions.t(),
          :readTime => DateTime.t(),
          :transaction => String.t()
        }

  field(:documents, type: :list)
  field(:mask, as: GoogleApi.Firestore.V1beta1.Model.DocumentMask)
  field(:newTransaction, as: GoogleApi.Firestore.V1beta1.Model.TransactionOptions)
  field(:readTime, as: DateTime)
  field(:transaction)
end

defimpl Poison.Decoder, for: GoogleApi.Firestore.V1beta1.Model.BatchGetDocumentsRequest do
  def decode(value, options) do
    GoogleApi.Firestore.V1beta1.Model.BatchGetDocumentsRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Firestore.V1beta1.Model.BatchGetDocumentsRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
