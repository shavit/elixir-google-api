# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Firestore.V1beta1.Model.WriteResult do
  @moduledoc """
  The result of applying a write.

  ## Attributes

  *   `transformResults` (*type:* `list(GoogleApi.Firestore.V1beta1.Model.Value.t)`, *default:* `nil`) - The results of applying each DocumentTransform.FieldTransform, in the
      same order.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - The last update time of the document after applying the write. Not set
      after a `delete`.

      If the write did not actually change the document, this will be the
      previous update_time.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :transformResults => list(GoogleApi.Firestore.V1beta1.Model.Value.t()),
          :updateTime => DateTime.t()
        }

  field(:transformResults, as: GoogleApi.Firestore.V1beta1.Model.Value, type: :list)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Firestore.V1beta1.Model.WriteResult do
  def decode(value, options) do
    GoogleApi.Firestore.V1beta1.Model.WriteResult.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Firestore.V1beta1.Model.WriteResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
