# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidEnterprise.V1.Model.UserToken do
  @moduledoc """
  A UserToken is used by a user when setting up a managed device or profile with their managed Google Play account on a device. When the user enters their email address and token (activation code) the appropriate EMM app can be automatically downloaded.

  ## Attributes

  *   `kind` (*type:* `String.t`, *default:* `androidenterprise#userToken`) - Identifies what kind of resource this is. Value: the fixed string "androidenterprise#userToken".
  *   `token` (*type:* `String.t`, *default:* `nil`) - The token (activation code) to be entered by the user. This consists of a sequence of decimal digits. Note that the leading digit may be 0.
  *   `userId` (*type:* `String.t`, *default:* `nil`) - The unique ID for the user.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :kind => String.t(),
          :token => String.t(),
          :userId => String.t()
        }

  field(:kind)
  field(:token)
  field(:userId)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidEnterprise.V1.Model.UserToken do
  def decode(value, options) do
    GoogleApi.AndroidEnterprise.V1.Model.UserToken.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidEnterprise.V1.Model.UserToken do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
