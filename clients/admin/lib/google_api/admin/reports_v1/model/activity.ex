# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Admin.Reports_v1.Model.Activity do
  @moduledoc """
  JSON template for the activity resource.

  ## Attributes

  *   `actor` (*type:* `GoogleApi.Admin.Reports_v1.Model.ActivityActor.t`, *default:* `nil`) - User doing the action.
  *   `etag` (*type:* `String.t`, *default:* `nil`) - ETag of the entry.
  *   `events` (*type:* `list(GoogleApi.Admin.Reports_v1.Model.ActivityEvents.t)`, *default:* `nil`) - Activity events.
  *   `id` (*type:* `GoogleApi.Admin.Reports_v1.Model.ActivityId.t`, *default:* `nil`) - Unique identifier for each activity record.
  *   `ipAddress` (*type:* `String.t`, *default:* `nil`) - IP Address of the user doing the action.
  *   `kind` (*type:* `String.t`, *default:* `admin#reports#activity`) - Kind of resource this is.
  *   `ownerDomain` (*type:* `String.t`, *default:* `nil`) - Domain of source customer.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :actor => GoogleApi.Admin.Reports_v1.Model.ActivityActor.t(),
          :etag => String.t(),
          :events => list(GoogleApi.Admin.Reports_v1.Model.ActivityEvents.t()),
          :id => GoogleApi.Admin.Reports_v1.Model.ActivityId.t(),
          :ipAddress => String.t(),
          :kind => String.t(),
          :ownerDomain => String.t()
        }

  field(:actor, as: GoogleApi.Admin.Reports_v1.Model.ActivityActor)
  field(:etag)
  field(:events, as: GoogleApi.Admin.Reports_v1.Model.ActivityEvents, type: :list)
  field(:id, as: GoogleApi.Admin.Reports_v1.Model.ActivityId)
  field(:ipAddress)
  field(:kind)
  field(:ownerDomain)
end

defimpl Poison.Decoder, for: GoogleApi.Admin.Reports_v1.Model.Activity do
  def decode(value, options) do
    GoogleApi.Admin.Reports_v1.Model.Activity.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Admin.Reports_v1.Model.Activity do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
