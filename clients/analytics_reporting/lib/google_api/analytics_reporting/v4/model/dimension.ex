# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AnalyticsReporting.V4.Model.Dimension do
  @moduledoc """
  [Dimensions](https://support.google.com/analytics/answer/1033861)
  are attributes of your data. For example, the dimension `ga:city`
  indicates the city, for example, "Paris" or "New York", from which
  a session originates.

  ## Attributes

  *   `histogramBuckets` (*type:* `list(String.t)`, *default:* `nil`) - If non-empty, we place dimension values into buckets after string to
      int64. Dimension values that are not the string representation of an
      integral value will be converted to zero.  The bucket values have to be in
      increasing order.  Each bucket is closed on the lower end, and open on the
      upper end. The "first" bucket includes all values less than the first
      boundary, the "last" bucket includes all values up to infinity. Dimension
      values that fall in a bucket get transformed to a new dimension value. For
      example, if one gives a list of "0, 1, 3, 4, 7", then we return the
      following buckets:

      - bucket #1: values < 0, dimension value "<0"
      - bucket #2: values in [0,1), dimension value "0"
      - bucket #3: values in [1,3), dimension value "1-2"
      - bucket #4: values in [3,4), dimension value "3"
      - bucket #5: values in [4,7), dimension value "4-6"
      - bucket #6: values >= 7, dimension value "7+"

      NOTE: If you are applying histogram mutation on any dimension, and using
      that dimension in sort, you will want to use the sort type
      `HISTOGRAM_BUCKET` for that purpose. Without that the dimension values
      will be sorted according to dictionary
      (lexicographic) order. For example the ascending dictionary order is:

         "<50", "1001+", "121-1000", "50-120"

      And the ascending `HISTOGRAM_BUCKET` order is:

         "<50", "50-120", "121-1000", "1001+"

      The client has to explicitly request `"orderType": "HISTOGRAM_BUCKET"`
      for a histogram-mutated dimension.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the dimension to fetch, for example `ga:browser`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :histogramBuckets => list(String.t()),
          :name => String.t()
        }

  field(:histogramBuckets, type: :list)
  field(:name)
end

defimpl Poison.Decoder, for: GoogleApi.AnalyticsReporting.V4.Model.Dimension do
  def decode(value, options) do
    GoogleApi.AnalyticsReporting.V4.Model.Dimension.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AnalyticsReporting.V4.Model.Dimension do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
