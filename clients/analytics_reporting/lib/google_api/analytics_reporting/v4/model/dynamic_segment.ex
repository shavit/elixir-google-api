# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AnalyticsReporting.V4.Model.DynamicSegment do
  @moduledoc """
  Dynamic segment definition for defining the segment within the request.
  A segment can select users, sessions or both.

  ## Attributes

  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the dynamic segment.
  *   `sessionSegment` (*type:* `GoogleApi.AnalyticsReporting.V4.Model.SegmentDefinition.t`, *default:* `nil`) - Session Segment to select sessions to include in the segment.
  *   `userSegment` (*type:* `GoogleApi.AnalyticsReporting.V4.Model.SegmentDefinition.t`, *default:* `nil`) - User Segment to select users to include in the segment.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :name => String.t(),
          :sessionSegment => GoogleApi.AnalyticsReporting.V4.Model.SegmentDefinition.t(),
          :userSegment => GoogleApi.AnalyticsReporting.V4.Model.SegmentDefinition.t()
        }

  field(:name)
  field(:sessionSegment, as: GoogleApi.AnalyticsReporting.V4.Model.SegmentDefinition)
  field(:userSegment, as: GoogleApi.AnalyticsReporting.V4.Model.SegmentDefinition)
end

defimpl Poison.Decoder, for: GoogleApi.AnalyticsReporting.V4.Model.DynamicSegment do
  def decode(value, options) do
    GoogleApi.AnalyticsReporting.V4.Model.DynamicSegment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AnalyticsReporting.V4.Model.DynamicSegment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
