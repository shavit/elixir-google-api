# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Poly.V1.Api.Assets do
  @moduledoc """
  API calls for all endpoints tagged `Assets`.
  """

  alias GoogleApi.Poly.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @library_version Mix.Project.config() |> Keyword.get(:version, "")

  @doc """
  Returns detailed information about an asset given its name.
  PRIVATE assets are returned only if
   the currently authenticated user (via OAuth token) is the author of the
   asset.

  ## Parameters

  *   `connection` (*type:* `GoogleApi.Poly.V1.Connection.t`) - Connection to server
  *   `name` (*type:* `String.t`) - Required. An asset's name in the form `assets/{ASSET_ID}`.
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:"$.xgafv"` (*type:* `String.t`) - V1 error format.
      *   `:access_token` (*type:* `String.t`) - OAuth access token.
      *   `:alt` (*type:* `String.t`) - Data format for response.
      *   `:callback` (*type:* `String.t`) - JSONP
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      *   `:uploadType` (*type:* `String.t`) - Legacy upload protocol for media (e.g. "media", "multipart").
      *   `:upload_protocol` (*type:* `String.t`) - Upload protocol for media (e.g. "raw", "multipart").
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %GoogleApi.Poly.V1.Model.Asset{}}` on success
  *   `{:error, info}` on failure
  """
  @spec poly_assets_get(Tesla.Env.client(), String.t(), keyword(), keyword()) ::
          {:ok, GoogleApi.Poly.V1.Model.Asset.t()} | {:error, Tesla.Env.t()}
  def poly_assets_get(connection, name, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/{+name}", %{
        "name" => URI.encode(name, &URI.char_unreserved?/1)
      })
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Poly.V1.Model.Asset{}])
  end

  @doc """
  Lists all public, remixable assets. These are assets with an access level
  of PUBLIC and published under the
  CC-By license.

  ## Parameters

  *   `connection` (*type:* `GoogleApi.Poly.V1.Connection.t`) - Connection to server
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:"$.xgafv"` (*type:* `String.t`) - V1 error format.
      *   `:access_token` (*type:* `String.t`) - OAuth access token.
      *   `:alt` (*type:* `String.t`) - Data format for response.
      *   `:callback` (*type:* `String.t`) - JSONP
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      *   `:uploadType` (*type:* `String.t`) - Legacy upload protocol for media (e.g. "media", "multipart").
      *   `:upload_protocol` (*type:* `String.t`) - Upload protocol for media (e.g. "raw", "multipart").
      *   `:category` (*type:* `String.t`) - Filter assets based on the specified category. Supported values are:
          `animals`, `architecture`, `art`, `food`, `nature`, `objects`, `people`,
          `scenes`, `technology`, and `transport`.
      *   `:curated` (*type:* `boolean()`) - Return only assets that have been curated by the Poly team.
      *   `:format` (*type:* `String.t`) - Return only assets with the matching format. Acceptable values are:
          `BLOCKS`, `FBX`, `GLTF`, `GLTF2`, `OBJ`, `TILT`.
      *   `:keywords` (*type:* `String.t`) - One or more search terms to be matched against all text that Poly has
          indexed for assets, which includes display_name,
          description, and tags. Multiple keywords should be
          separated by spaces.
      *   `:maxComplexity` (*type:* `String.t`) - Returns assets that are of the specified complexity or less. Defaults to
          COMPLEX. For example, a request for
          MEDIUM assets also includes
          SIMPLE assets.
      *   `:orderBy` (*type:* `String.t`) - Specifies an ordering for assets. Acceptable values are:
          `BEST`, `NEWEST`, `OLDEST`. Defaults to `BEST`, which ranks assets
          based on a combination of popularity and other features.
      *   `:pageSize` (*type:* `integer()`) - The maximum number of assets to be returned. This value must be between `1`
          and `100`. Defaults to `20`.
      *   `:pageToken` (*type:* `String.t`) - Specifies a continuation token from a previous search whose results were
          split into multiple pages. To get the next page, submit the same request
          specifying the value from
          next_page_token.
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %GoogleApi.Poly.V1.Model.ListAssetsResponse{}}` on success
  *   `{:error, info}` on failure
  """
  @spec poly_assets_list(Tesla.Env.client(), keyword(), keyword()) ::
          {:ok, GoogleApi.Poly.V1.Model.ListAssetsResponse.t()} | {:error, Tesla.Env.t()}
  def poly_assets_list(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :category => :query,
      :curated => :query,
      :format => :query,
      :keywords => :query,
      :maxComplexity => :query,
      :orderBy => :query,
      :pageSize => :query,
      :pageToken => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/assets", %{})
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Poly.V1.Model.ListAssetsResponse{}])
  end
end
