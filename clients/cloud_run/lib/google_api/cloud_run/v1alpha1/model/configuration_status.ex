# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudRun.V1alpha1.Model.ConfigurationStatus do
  @moduledoc """
  ConfigurationStatus communicates the observed state of the Configuration
  (from the controller).

  ## Attributes

  *   `conditions` (*type:* `list(GoogleApi.CloudRun.V1alpha1.Model.ConfigurationCondition.t)`, *default:* `nil`) - Conditions communicates information about ongoing/complete
      reconciliation processes that bring the "spec" inline with the observed
      state of the world.
  *   `latestCreatedRevisionName` (*type:* `String.t`, *default:* `nil`) - LatestCreatedRevisionName is the last revision that was created from this
      Configuration. It might not be ready yet, for that use
      LatestReadyRevisionName.
  *   `latestReadyRevisionName` (*type:* `String.t`, *default:* `nil`) - LatestReadyRevisionName holds the name of the latest Revision stamped out
      from this Configuration that has had its "Ready" condition become "True".
  *   `observedGeneration` (*type:* `integer()`, *default:* `nil`) - ObservedGeneration is the 'Generation' of the Configuration that
      was last processed by the controller. The observed generation is updated
      even if the controller failed to process the spec and create the Revision.

      Clients polling for completed reconciliation should poll until
      observedGeneration = metadata.generation, and the Ready condition's status
      is True or False.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :conditions => list(GoogleApi.CloudRun.V1alpha1.Model.ConfigurationCondition.t()),
          :latestCreatedRevisionName => String.t(),
          :latestReadyRevisionName => String.t(),
          :observedGeneration => integer()
        }

  field(:conditions, as: GoogleApi.CloudRun.V1alpha1.Model.ConfigurationCondition, type: :list)
  field(:latestCreatedRevisionName)
  field(:latestReadyRevisionName)
  field(:observedGeneration)
end

defimpl Poison.Decoder, for: GoogleApi.CloudRun.V1alpha1.Model.ConfigurationStatus do
  def decode(value, options) do
    GoogleApi.CloudRun.V1alpha1.Model.ConfigurationStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudRun.V1alpha1.Model.ConfigurationStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
