# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2EventInput do
  @moduledoc """
  Events allow for matching intents by event name instead of the natural
  language input. For instance, input `<event: { name: "welcome_event",
  parameters: { name: "Sam" } }>` can trigger a personalized welcome response.
  The parameter `name` may be used by the agent in the response:
  `"Hello #welcome_event.name! What can I do for you today?"`.

  ## Attributes

  *   `languageCode` (*type:* `String.t`, *default:* `nil`) - Required. The language of this query. See [Language
      Support](https://cloud.google.com/dialogflow/docs/reference/language)
      for a list of the currently supported language codes. Note that queries in
      the same session do not necessarily need to specify the same language.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Required. The unique identifier of the event.
  *   `parameters` (*type:* `map()`, *default:* `nil`) - Optional. The collection of parameters associated with the event.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :languageCode => String.t(),
          :name => String.t(),
          :parameters => map()
        }

  field(:languageCode)
  field(:name)
  field(:parameters, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2EventInput do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2EventInput.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2EventInput do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
