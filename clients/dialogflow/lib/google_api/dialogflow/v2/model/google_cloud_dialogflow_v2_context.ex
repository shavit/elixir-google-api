# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2Context do
  @moduledoc """
  Represents a context.

  ## Attributes

  *   `lifespanCount` (*type:* `integer()`, *default:* `nil`) - Optional. The number of conversational query requests after which the
      context expires. If set to `0` (the default) the context expires
      immediately. Contexts expire automatically after 20 minutes if there
      are no matching queries.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Required. The unique identifier of the context. Format:
      `projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>`.

      The `Context ID` is always converted to lowercase, may only contain
      characters in [a-zA-Z0-9_-%] and may be at most 250 bytes long.
  *   `parameters` (*type:* `map()`, *default:* `nil`) - Optional. The collection of parameters associated with this context.
      Refer to [this
      doc](https://cloud.google.com/dialogflow/docs/intents-actions-parameters)
      for syntax.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :lifespanCount => integer(),
          :name => String.t(),
          :parameters => map()
        }

  field(:lifespanCount)
  field(:name)
  field(:parameters, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2Context do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2Context.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2Context do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
