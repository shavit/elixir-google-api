# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Fitness.V1.Model.AggregateBucket do
  @moduledoc """


  ## Attributes

  *   `activity` (*type:* `integer()`, *default:* `nil`) - Available for Bucket.Type.ACTIVITY_TYPE, Bucket.Type.ACTIVITY_SEGMENT
  *   `dataset` (*type:* `list(GoogleApi.Fitness.V1.Model.Dataset.t)`, *default:* `nil`) - There will be one dataset per AggregateBy in the request.
  *   `endTimeMillis` (*type:* `String.t`, *default:* `nil`) - The end time for the aggregated data, in milliseconds since epoch, inclusive.
  *   `session` (*type:* `GoogleApi.Fitness.V1.Model.Session.t`, *default:* `nil`) - Available for Bucket.Type.SESSION
  *   `startTimeMillis` (*type:* `String.t`, *default:* `nil`) - The start time for the aggregated data, in milliseconds since epoch, inclusive.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of a bucket signifies how the data aggregation is performed in the bucket.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :activity => integer(),
          :dataset => list(GoogleApi.Fitness.V1.Model.Dataset.t()),
          :endTimeMillis => String.t(),
          :session => GoogleApi.Fitness.V1.Model.Session.t(),
          :startTimeMillis => String.t(),
          :type => String.t()
        }

  field(:activity)
  field(:dataset, as: GoogleApi.Fitness.V1.Model.Dataset, type: :list)
  field(:endTimeMillis)
  field(:session, as: GoogleApi.Fitness.V1.Model.Session)
  field(:startTimeMillis)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Fitness.V1.Model.AggregateBucket do
  def decode(value, options) do
    GoogleApi.Fitness.V1.Model.AggregateBucket.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Fitness.V1.Model.AggregateBucket do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
