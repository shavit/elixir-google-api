# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceControl.V1.Model.Resource do
  @moduledoc """
  This message defines core attributes for a resource. A resource is an
  addressable (named) entity provided by the destination service. For
  example, a file stored on a network storage service.

  ## Attributes

  *   `labels` (*type:* `map()`, *default:* `nil`) - The labels or tags on the resource, such as AWS resource tags and
      Kubernetes resource labels.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The stable identifier (name) of a resource on the `service`. A resource
      can be logically identified as "//{resource.service}/{resource.name}".
      The differences between a resource name and a URI are:

      *   Resource name is a logical identifier, independent of network
          protocol and API version. For example,
          `//pubsub.googleapis.com/projects/123/topics/news-feed`.
      *   URI often includes protocol and version information, so it can
          be used directly by applications. For example,
          `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`.

      See https://cloud.google.com/apis/design/resource_names for details.
  *   `service` (*type:* `String.t`, *default:* `nil`) - The name of the service that this resource belongs to, such as
      `pubsub.googleapis.com`. The service may be different from the DNS
      hostname that actually serves the request.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of the resource. The syntax is platform-specific because
      different platforms define their resources differently.

      For Google APIs, the type format must be "{service}/{kind}".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :labels => map(),
          :name => String.t(),
          :service => String.t(),
          :type => String.t()
        }

  field(:labels, type: :map)
  field(:name)
  field(:service)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceControl.V1.Model.Resource do
  def decode(value, options) do
    GoogleApi.ServiceControl.V1.Model.Resource.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceControl.V1.Model.Resource do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
