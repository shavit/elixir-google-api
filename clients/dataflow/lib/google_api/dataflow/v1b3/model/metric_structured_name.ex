# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.MetricStructuredName do
  @moduledoc """
  Identifies a metric, by describing the source which generated the
  metric.

  ## Attributes

  *   `context` (*type:* `map()`, *default:* `nil`) - Zero or more labeled fields which identify the part of the job this
      metric is associated with, such as the name of a step or collection.

      For example, built-in counters associated with steps will have
      context['step'] = <step-name>. Counters associated with PCollections
      in the SDK will have context['pcollection'] = <pcollection-name>.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Worker-defined metric name.
  *   `origin` (*type:* `String.t`, *default:* `nil`) - Origin (namespace) of metric name. May be blank for user-define metrics;
      will be "dataflow" for metrics defined by the Dataflow service or SDK.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :context => map(),
          :name => String.t(),
          :origin => String.t()
        }

  field(:context, type: :map)
  field(:name)
  field(:origin)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.MetricStructuredName do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.MetricStructuredName.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.MetricStructuredName do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
