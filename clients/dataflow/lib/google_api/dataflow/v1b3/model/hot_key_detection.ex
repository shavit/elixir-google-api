# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.HotKeyDetection do
  @moduledoc """
  Proto describing a hot key detected on a given WorkItem.

  ## Attributes

  *   `hotKeyAge` (*type:* `String.t`, *default:* `nil`) - The age of the hot key measured from when it was first detected.
  *   `systemName` (*type:* `String.t`, *default:* `nil`) - System-defined name of the step containing this hot key.
      Unique across the workflow.
  *   `userStepName` (*type:* `String.t`, *default:* `nil`) - User-provided name of the step that contains this hot key.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :hotKeyAge => String.t(),
          :systemName => String.t(),
          :userStepName => String.t()
        }

  field(:hotKeyAge)
  field(:systemName)
  field(:userStepName)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.HotKeyDetection do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.HotKeyDetection.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.HotKeyDetection do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
