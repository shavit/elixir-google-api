# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.ComputationTopology do
  @moduledoc """
  All configuration data for a particular Computation.

  ## Attributes

  *   `computationId` (*type:* `String.t`, *default:* `nil`) - The ID of the computation.
  *   `inputs` (*type:* `list(GoogleApi.Dataflow.V1b3.Model.StreamLocation.t)`, *default:* `nil`) - The inputs to the computation.
  *   `keyRanges` (*type:* `list(GoogleApi.Dataflow.V1b3.Model.KeyRangeLocation.t)`, *default:* `nil`) - The key ranges processed by the computation.
  *   `outputs` (*type:* `list(GoogleApi.Dataflow.V1b3.Model.StreamLocation.t)`, *default:* `nil`) - The outputs from the computation.
  *   `stateFamilies` (*type:* `list(GoogleApi.Dataflow.V1b3.Model.StateFamilyConfig.t)`, *default:* `nil`) - The state family values.
  *   `systemStageName` (*type:* `String.t`, *default:* `nil`) - The system stage name.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :computationId => String.t(),
          :inputs => list(GoogleApi.Dataflow.V1b3.Model.StreamLocation.t()),
          :keyRanges => list(GoogleApi.Dataflow.V1b3.Model.KeyRangeLocation.t()),
          :outputs => list(GoogleApi.Dataflow.V1b3.Model.StreamLocation.t()),
          :stateFamilies => list(GoogleApi.Dataflow.V1b3.Model.StateFamilyConfig.t()),
          :systemStageName => String.t()
        }

  field(:computationId)
  field(:inputs, as: GoogleApi.Dataflow.V1b3.Model.StreamLocation, type: :list)
  field(:keyRanges, as: GoogleApi.Dataflow.V1b3.Model.KeyRangeLocation, type: :list)
  field(:outputs, as: GoogleApi.Dataflow.V1b3.Model.StreamLocation, type: :list)
  field(:stateFamilies, as: GoogleApi.Dataflow.V1b3.Model.StateFamilyConfig, type: :list)
  field(:systemStageName)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.ComputationTopology do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.ComputationTopology.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.ComputationTopology do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
