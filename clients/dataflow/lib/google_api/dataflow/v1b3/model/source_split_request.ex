# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.SourceSplitRequest do
  @moduledoc """
  Represents the operation to split a high-level Source specification
  into bundles (parts for parallel processing).

  At a high level, splitting of a source into bundles happens as follows:
  SourceSplitRequest is applied to the source. If it returns
  SOURCE_SPLIT_OUTCOME_USE_CURRENT, no further splitting happens and the source
  is used "as is". Otherwise, splitting is applied recursively to each
  produced DerivedSource.

  As an optimization, for any Source, if its does_not_need_splitting is
  true, the framework assumes that splitting this source would return
  SOURCE_SPLIT_OUTCOME_USE_CURRENT, and doesn't initiate a SourceSplitRequest.
  This applies both to the initial source being split and to bundles
  produced from it.

  ## Attributes

  *   `options` (*type:* `GoogleApi.Dataflow.V1b3.Model.SourceSplitOptions.t`, *default:* `nil`) - Hints for tuning the splitting process.
  *   `source` (*type:* `GoogleApi.Dataflow.V1b3.Model.Source.t`, *default:* `nil`) - Specification of the source to be split.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :options => GoogleApi.Dataflow.V1b3.Model.SourceSplitOptions.t(),
          :source => GoogleApi.Dataflow.V1b3.Model.Source.t()
        }

  field(:options, as: GoogleApi.Dataflow.V1b3.Model.SourceSplitOptions)
  field(:source, as: GoogleApi.Dataflow.V1b3.Model.Source)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.SourceSplitRequest do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.SourceSplitRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.SourceSplitRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
