# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.DynamicSourceSplit do
  @moduledoc """
  When a task splits using WorkItemStatus.dynamic_source_split, this
  message describes the two parts of the split relative to the
  description of the current task's input.

  ## Attributes

  *   `primary` (*type:* `GoogleApi.Dataflow.V1b3.Model.DerivedSource.t`, *default:* `nil`) - Primary part (continued to be processed by worker).
      Specified relative to the previously-current source.
      Becomes current.
  *   `residual` (*type:* `GoogleApi.Dataflow.V1b3.Model.DerivedSource.t`, *default:* `nil`) - Residual part (returned to the pool of work).
      Specified relative to the previously-current source.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :primary => GoogleApi.Dataflow.V1b3.Model.DerivedSource.t(),
          :residual => GoogleApi.Dataflow.V1b3.Model.DerivedSource.t()
        }

  field(:primary, as: GoogleApi.Dataflow.V1b3.Model.DerivedSource)
  field(:residual, as: GoogleApi.Dataflow.V1b3.Model.DerivedSource)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.DynamicSourceSplit do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.DynamicSourceSplit.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.DynamicSourceSplit do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
