# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.WorkerLifecycleEvent do
  @moduledoc """
  A report of an event in a worker's lifecycle.
  The proto contains one event, because the worker is expected to
  asynchronously send each message immediately after the event.
  Due to this asynchrony, messages may arrive out of order (or missing), and it
  is up to the consumer to interpret.
  The timestamp of the event is in the enclosing WorkerMessage proto.

  ## Attributes

  *   `containerStartTime` (*type:* `DateTime.t`, *default:* `nil`) - The start time of this container. All events will report this so that
      events can be grouped together across container/VM restarts.
  *   `event` (*type:* `String.t`, *default:* `nil`) - The event being reported.
  *   `metadata` (*type:* `map()`, *default:* `nil`) - Other stats that can accompany an event. E.g.
      { "downloaded_bytes" : "123456" }
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :containerStartTime => DateTime.t(),
          :event => String.t(),
          :metadata => map()
        }

  field(:containerStartTime, as: DateTime)
  field(:event)
  field(:metadata, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.WorkerLifecycleEvent do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.WorkerLifecycleEvent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.WorkerLifecycleEvent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
