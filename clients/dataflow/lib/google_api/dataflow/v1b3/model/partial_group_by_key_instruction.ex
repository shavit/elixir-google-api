# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.PartialGroupByKeyInstruction do
  @moduledoc """
  An instruction that does a partial group-by-key.
  One input and one output.

  ## Attributes

  *   `input` (*type:* `GoogleApi.Dataflow.V1b3.Model.InstructionInput.t`, *default:* `nil`) - Describes the input to the partial group-by-key instruction.
  *   `inputElementCodec` (*type:* `map()`, *default:* `nil`) - The codec to use for interpreting an element in the input PTable.
  *   `originalCombineValuesInputStoreName` (*type:* `String.t`, *default:* `nil`) - If this instruction includes a combining function this is the name of the
      intermediate store between the GBK and the CombineValues.
  *   `originalCombineValuesStepName` (*type:* `String.t`, *default:* `nil`) - If this instruction includes a combining function, this is the name of the
      CombineValues instruction lifted into this instruction.
  *   `sideInputs` (*type:* `list(GoogleApi.Dataflow.V1b3.Model.SideInputInfo.t)`, *default:* `nil`) - Zero or more side inputs.
  *   `valueCombiningFn` (*type:* `map()`, *default:* `nil`) - The value combining function to invoke.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :input => GoogleApi.Dataflow.V1b3.Model.InstructionInput.t(),
          :inputElementCodec => map(),
          :originalCombineValuesInputStoreName => String.t(),
          :originalCombineValuesStepName => String.t(),
          :sideInputs => list(GoogleApi.Dataflow.V1b3.Model.SideInputInfo.t()),
          :valueCombiningFn => map()
        }

  field(:input, as: GoogleApi.Dataflow.V1b3.Model.InstructionInput)
  field(:inputElementCodec, type: :map)
  field(:originalCombineValuesInputStoreName)
  field(:originalCombineValuesStepName)
  field(:sideInputs, as: GoogleApi.Dataflow.V1b3.Model.SideInputInfo, type: :list)
  field(:valueCombiningFn, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.PartialGroupByKeyInstruction do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.PartialGroupByKeyInstruction.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.PartialGroupByKeyInstruction do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
