# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.DisplayData do
  @moduledoc """
  Data provided with a pipeline or transform to provide descriptive info.

  ## Attributes

  *   `boolValue` (*type:* `boolean()`, *default:* `nil`) - Contains value if the data is of a boolean type.
  *   `durationValue` (*type:* `String.t`, *default:* `nil`) - Contains value if the data is of duration type.
  *   `floatValue` (*type:* `number()`, *default:* `nil`) - Contains value if the data is of float type.
  *   `int64Value` (*type:* `String.t`, *default:* `nil`) - Contains value if the data is of int64 type.
  *   `javaClassValue` (*type:* `String.t`, *default:* `nil`) - Contains value if the data is of java class type.
  *   `key` (*type:* `String.t`, *default:* `nil`) - The key identifying the display data.
      This is intended to be used as a label for the display data
      when viewed in a dax monitoring system.
  *   `label` (*type:* `String.t`, *default:* `nil`) - An optional label to display in a dax UI for the element.
  *   `namespace` (*type:* `String.t`, *default:* `nil`) - The namespace for the key. This is usually a class name or programming
      language namespace (i.e. python module) which defines the display data.
      This allows a dax monitoring system to specially handle the data
      and perform custom rendering.
  *   `shortStrValue` (*type:* `String.t`, *default:* `nil`) - A possible additional shorter value to display.
      For example a java_class_name_value of com.mypackage.MyDoFn
      will be stored with MyDoFn as the short_str_value and
      com.mypackage.MyDoFn as the java_class_name value.
      short_str_value can be displayed and java_class_name_value
      will be displayed as a tooltip.
  *   `strValue` (*type:* `String.t`, *default:* `nil`) - Contains value if the data is of string type.
  *   `timestampValue` (*type:* `DateTime.t`, *default:* `nil`) - Contains value if the data is of timestamp type.
  *   `url` (*type:* `String.t`, *default:* `nil`) - An optional full URL.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :boolValue => boolean(),
          :durationValue => String.t(),
          :floatValue => number(),
          :int64Value => String.t(),
          :javaClassValue => String.t(),
          :key => String.t(),
          :label => String.t(),
          :namespace => String.t(),
          :shortStrValue => String.t(),
          :strValue => String.t(),
          :timestampValue => DateTime.t(),
          :url => String.t()
        }

  field(:boolValue)
  field(:durationValue)
  field(:floatValue)
  field(:int64Value)
  field(:javaClassValue)
  field(:key)
  field(:label)
  field(:namespace)
  field(:shortStrValue)
  field(:strValue)
  field(:timestampValue, as: DateTime)
  field(:url)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.DisplayData do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.DisplayData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.DisplayData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
