# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.InstructionOutput do
  @moduledoc """
  An output of an instruction.

  ## Attributes

  *   `codec` (*type:* `map()`, *default:* `nil`) - The codec to use to encode data being written via this output.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The user-provided name of this output.
  *   `onlyCountKeyBytes` (*type:* `boolean()`, *default:* `nil`) - For system-generated byte and mean byte metrics, certain instructions
      should only report the key size.
  *   `onlyCountValueBytes` (*type:* `boolean()`, *default:* `nil`) - For system-generated byte and mean byte metrics, certain instructions
      should only report the value size.
  *   `originalName` (*type:* `String.t`, *default:* `nil`) - System-defined name for this output in the original workflow graph.
      Outputs that do not contribute to an original instruction do not set this.
  *   `systemName` (*type:* `String.t`, *default:* `nil`) - System-defined name of this output.
      Unique across the workflow.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :codec => map(),
          :name => String.t(),
          :onlyCountKeyBytes => boolean(),
          :onlyCountValueBytes => boolean(),
          :originalName => String.t(),
          :systemName => String.t()
        }

  field(:codec, type: :map)
  field(:name)
  field(:onlyCountKeyBytes)
  field(:onlyCountValueBytes)
  field(:originalName)
  field(:systemName)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.InstructionOutput do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.InstructionOutput.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.InstructionOutput do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
