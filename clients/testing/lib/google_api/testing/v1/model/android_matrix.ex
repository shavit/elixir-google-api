# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Testing.V1.Model.AndroidMatrix do
  @moduledoc """
  A set of Android device configuration permutations is defined by the
  the cross-product of the given axes. Internally, the given AndroidMatrix
  will be expanded into a set of AndroidDevices.

  Only supported permutations will be instantiated.  Invalid permutations
  (e.g., incompatible models/versions) are ignored.

  ## Attributes

  *   `androidModelIds` (*type:* `list(String.t)`, *default:* `nil`) - Required. The ids of the set of Android device to be used.
      Use the TestEnvironmentDiscoveryService to get supported options.
  *   `androidVersionIds` (*type:* `list(String.t)`, *default:* `nil`) - Required. The ids of the set of Android OS version to be used.
      Use the TestEnvironmentDiscoveryService to get supported options.
  *   `locales` (*type:* `list(String.t)`, *default:* `nil`) - Required. The set of locales the test device will enable for testing.
      Use the TestEnvironmentDiscoveryService to get supported options.
  *   `orientations` (*type:* `list(String.t)`, *default:* `nil`) - Required. The set of orientations to test with.
      Use the TestEnvironmentDiscoveryService to get supported options.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :androidModelIds => list(String.t()),
          :androidVersionIds => list(String.t()),
          :locales => list(String.t()),
          :orientations => list(String.t())
        }

  field(:androidModelIds, type: :list)
  field(:androidVersionIds, type: :list)
  field(:locales, type: :list)
  field(:orientations, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Testing.V1.Model.AndroidMatrix do
  def decode(value, options) do
    GoogleApi.Testing.V1.Model.AndroidMatrix.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Testing.V1.Model.AndroidMatrix do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
