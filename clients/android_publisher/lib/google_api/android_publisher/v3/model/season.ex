# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidPublisher.V3.Model.Season do
  @moduledoc """


  ## Attributes

  *   `end` (*type:* `GoogleApi.AndroidPublisher.V3.Model.MonthDay.t`, *default:* `nil`) - Inclusive end date of the recurrence period.
  *   `prorations` (*type:* `list(GoogleApi.AndroidPublisher.V3.Model.Prorate.t)`, *default:* `nil`) - Optionally present list of prorations for the season. Each proration is a one-off discounted entry into a subscription. Each proration contains the first date on which the discount is available and the new pricing information.
  *   `start` (*type:* `GoogleApi.AndroidPublisher.V3.Model.MonthDay.t`, *default:* `nil`) - Inclusive start date of the recurrence period.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :end => GoogleApi.AndroidPublisher.V3.Model.MonthDay.t(),
          :prorations => list(GoogleApi.AndroidPublisher.V3.Model.Prorate.t()),
          :start => GoogleApi.AndroidPublisher.V3.Model.MonthDay.t()
        }

  field(:end, as: GoogleApi.AndroidPublisher.V3.Model.MonthDay)
  field(:prorations, as: GoogleApi.AndroidPublisher.V3.Model.Prorate, type: :list)
  field(:start, as: GoogleApi.AndroidPublisher.V3.Model.MonthDay)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidPublisher.V3.Model.Season do
  def decode(value, options) do
    GoogleApi.AndroidPublisher.V3.Model.Season.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidPublisher.V3.Model.Season do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
