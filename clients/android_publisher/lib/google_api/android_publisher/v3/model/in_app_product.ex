# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidPublisher.V3.Model.InAppProduct do
  @moduledoc """


  ## Attributes

  *   `defaultLanguage` (*type:* `String.t`, *default:* `nil`) - The default language of the localized data, as defined by BCP 47. e.g. "en-US", "en-GB".
  *   `defaultPrice` (*type:* `GoogleApi.AndroidPublisher.V3.Model.Price.t`, *default:* `nil`) - Default price cannot be zero. In-app products can never be free. Default price is always in the developer's Checkout merchant currency.
  *   `gracePeriod` (*type:* `String.t`, *default:* `nil`) - Grace period of the subscription, specified in ISO 8601 format. It will allow developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values = "P3D" (three days) and "P7D" (seven days)
  *   `listings` (*type:* `%{optional(String.t) => GoogleApi.AndroidPublisher.V3.Model.InAppProductListing.t}`, *default:* `nil`) - List of localized title and description data.
  *   `packageName` (*type:* `String.t`, *default:* `nil`) - The package name of the parent app.
  *   `prices` (*type:* `%{optional(String.t) => GoogleApi.AndroidPublisher.V3.Model.Price.t}`, *default:* `nil`) - Prices per buyer region. None of these prices should be zero. In-app products can never be free.
  *   `purchaseType` (*type:* `String.t`, *default:* `nil`) - Purchase type enum value. Unmodifiable after creation.
  *   `season` (*type:* `GoogleApi.AndroidPublisher.V3.Model.Season.t`, *default:* `nil`) - Definition of a season for a seasonal subscription. Can be defined only for yearly subscriptions.
  *   `sku` (*type:* `String.t`, *default:* `nil`) - The stock-keeping-unit (SKU) of the product, unique within an app.
  *   `status` (*type:* `String.t`, *default:* `nil`) - 
  *   `subscriptionPeriod` (*type:* `String.t`, *default:* `nil`) - Subscription period, specified in ISO 8601 format. Acceptable values are "P1W" (one week), "P1M" (one month), "P3M" (three months), "P6M" (six months), and "P1Y" (one year).
  *   `trialPeriod` (*type:* `String.t`, *default:* `nil`) - Trial period, specified in ISO 8601 format. Acceptable values are anything between "P7D" (seven days) and "P999D" (999 days). Seasonal subscriptions cannot have a trial period.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :defaultLanguage => String.t(),
          :defaultPrice => GoogleApi.AndroidPublisher.V3.Model.Price.t(),
          :gracePeriod => String.t(),
          :listings => %{
            optional(String.t()) => GoogleApi.AndroidPublisher.V3.Model.InAppProductListing.t()
          },
          :packageName => String.t(),
          :prices => %{optional(String.t()) => GoogleApi.AndroidPublisher.V3.Model.Price.t()},
          :purchaseType => String.t(),
          :season => GoogleApi.AndroidPublisher.V3.Model.Season.t(),
          :sku => String.t(),
          :status => String.t(),
          :subscriptionPeriod => String.t(),
          :trialPeriod => String.t()
        }

  field(:defaultLanguage)
  field(:defaultPrice, as: GoogleApi.AndroidPublisher.V3.Model.Price)
  field(:gracePeriod)
  field(:listings, as: GoogleApi.AndroidPublisher.V3.Model.InAppProductListing, type: :map)
  field(:packageName)
  field(:prices, as: GoogleApi.AndroidPublisher.V3.Model.Price, type: :map)
  field(:purchaseType)
  field(:season, as: GoogleApi.AndroidPublisher.V3.Model.Season)
  field(:sku)
  field(:status)
  field(:subscriptionPeriod)
  field(:trialPeriod)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidPublisher.V3.Model.InAppProduct do
  def decode(value, options) do
    GoogleApi.AndroidPublisher.V3.Model.InAppProduct.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidPublisher.V3.Model.InAppProduct do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
