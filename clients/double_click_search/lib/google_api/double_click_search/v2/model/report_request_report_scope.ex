# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DoubleClickSearch.V2.Model.ReportRequestReportScope do
  @moduledoc """
  The reportScope is a set of IDs that are used to determine which subset of entities will be returned in the report. The full lineage of IDs from the lowest scoped level desired up through agency is required.

  ## Attributes

  *   `adGroupId` (*type:* `String.t`, *default:* `nil`) - DS ad group ID.
  *   `adId` (*type:* `String.t`, *default:* `nil`) - DS ad ID.
  *   `advertiserId` (*type:* `String.t`, *default:* `nil`) - DS advertiser ID.
  *   `agencyId` (*type:* `String.t`, *default:* `nil`) - DS agency ID.
  *   `campaignId` (*type:* `String.t`, *default:* `nil`) - DS campaign ID.
  *   `engineAccountId` (*type:* `String.t`, *default:* `nil`) - DS engine account ID.
  *   `keywordId` (*type:* `String.t`, *default:* `nil`) - DS keyword ID.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :adGroupId => String.t(),
          :adId => String.t(),
          :advertiserId => String.t(),
          :agencyId => String.t(),
          :campaignId => String.t(),
          :engineAccountId => String.t(),
          :keywordId => String.t()
        }

  field(:adGroupId)
  field(:adId)
  field(:advertiserId)
  field(:agencyId)
  field(:campaignId)
  field(:engineAccountId)
  field(:keywordId)
end

defimpl Poison.Decoder, for: GoogleApi.DoubleClickSearch.V2.Model.ReportRequestReportScope do
  def decode(value, options) do
    GoogleApi.DoubleClickSearch.V2.Model.ReportRequestReportScope.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DoubleClickSearch.V2.Model.ReportRequestReportScope do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
