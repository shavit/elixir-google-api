# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion do
  @moduledoc """
  A CryptoKeyVersion represents an individual cryptographic key, and the
  associated key material.

  An ENABLED version can be
  used for cryptographic operations.

  For security reasons, the raw cryptographic key material represented by a
  CryptoKeyVersion can never be viewed or exported. It can only be used to
  encrypt, decrypt, or sign data when an authorized user or application invokes
  Cloud KMS.

  ## Attributes

  *   `algorithm` (*type:* `String.t`, *default:* `nil`) - Output only. The CryptoKeyVersionAlgorithm that this
      CryptoKeyVersion supports.
  *   `attestation` (*type:* `GoogleApi.CloudKMS.V1.Model.KeyOperationAttestation.t`, *default:* `nil`) - Output only. Statement that was generated and signed by the HSM at key
      creation time. Use this statement to verify attributes of the key as stored
      on the HSM, independently of Google. Only provided for key versions with
      protection_level HSM.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which this CryptoKeyVersion was created.
  *   `destroyEventTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time this CryptoKeyVersion's key material was
      destroyed. Only present if state is
      DESTROYED.
  *   `destroyTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time this CryptoKeyVersion's key material is scheduled
      for destruction. Only present if state is
      DESTROY_SCHEDULED.
  *   `generateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time this CryptoKeyVersion's key material was
      generated.
  *   `importFailureReason` (*type:* `String.t`, *default:* `nil`) - Output only. The root cause of an import failure. Only present if
      state is
      IMPORT_FAILED.
  *   `importJob` (*type:* `String.t`, *default:* `nil`) - Output only. The name of the ImportJob used to import this
      CryptoKeyVersion. Only present if the underlying key material was
      imported.
  *   `importTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which this CryptoKeyVersion's key material
      was imported.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The resource name for this CryptoKeyVersion in the format
      `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
  *   `protectionLevel` (*type:* `String.t`, *default:* `nil`) - Output only. The ProtectionLevel describing how crypto operations are
      performed with this CryptoKeyVersion.
  *   `state` (*type:* `String.t`, *default:* `nil`) - The current state of the CryptoKeyVersion.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :algorithm => String.t(),
          :attestation => GoogleApi.CloudKMS.V1.Model.KeyOperationAttestation.t(),
          :createTime => DateTime.t(),
          :destroyEventTime => DateTime.t(),
          :destroyTime => DateTime.t(),
          :generateTime => DateTime.t(),
          :importFailureReason => String.t(),
          :importJob => String.t(),
          :importTime => DateTime.t(),
          :name => String.t(),
          :protectionLevel => String.t(),
          :state => String.t()
        }

  field(:algorithm)
  field(:attestation, as: GoogleApi.CloudKMS.V1.Model.KeyOperationAttestation)
  field(:createTime, as: DateTime)
  field(:destroyEventTime, as: DateTime)
  field(:destroyTime, as: DateTime)
  field(:generateTime, as: DateTime)
  field(:importFailureReason)
  field(:importJob)
  field(:importTime, as: DateTime)
  field(:name)
  field(:protectionLevel)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion do
  def decode(value, options) do
    GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudKMS.V1.Model.CryptoKeyVersion do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
