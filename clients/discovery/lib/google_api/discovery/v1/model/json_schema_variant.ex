# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Discovery.V1.Model.JsonSchemaVariant do
  @moduledoc """
  In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names.

  ## Attributes

  *   `discriminant` (*type:* `String.t`, *default:* `nil`) - The name of the type discriminant property.
  *   `map` (*type:* `list(GoogleApi.Discovery.V1.Model.JsonSchemaVariantMap.t)`, *default:* `nil`) - The map of discriminant value to schema to use for parsing..
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :discriminant => String.t(),
          :map => list(GoogleApi.Discovery.V1.Model.JsonSchemaVariantMap.t())
        }

  field(:discriminant)
  field(:map, as: GoogleApi.Discovery.V1.Model.JsonSchemaVariantMap, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Discovery.V1.Model.JsonSchemaVariant do
  def decode(value, options) do
    GoogleApi.Discovery.V1.Model.JsonSchemaVariant.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Discovery.V1.Model.JsonSchemaVariant do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
