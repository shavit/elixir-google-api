# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidDeviceProvisioning.V1.Model.PerDeviceStatusInBatch do
  @moduledoc """
  Captures the processing status for each device in the operation.

  ## Attributes

  *   `deviceId` (*type:* `String.t`, *default:* `nil`) - If processing succeeds, the device ID of the device.
  *   `errorIdentifier` (*type:* `String.t`, *default:* `nil`) - If processing fails, the error type.
  *   `errorMessage` (*type:* `String.t`, *default:* `nil`) - If processing fails, a developer message explaining what went wrong.
  *   `status` (*type:* `String.t`, *default:* `nil`) - The result status of the device after processing.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deviceId => String.t(),
          :errorIdentifier => String.t(),
          :errorMessage => String.t(),
          :status => String.t()
        }

  field(:deviceId)
  field(:errorIdentifier)
  field(:errorMessage)
  field(:status)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidDeviceProvisioning.V1.Model.PerDeviceStatusInBatch do
  def decode(value, options) do
    GoogleApi.AndroidDeviceProvisioning.V1.Model.PerDeviceStatusInBatch.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidDeviceProvisioning.V1.Model.PerDeviceStatusInBatch do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
