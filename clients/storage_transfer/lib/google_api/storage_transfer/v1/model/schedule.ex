# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.StorageTransfer.V1.Model.Schedule do
  @moduledoc """
  Transfers can be scheduled to recur or to run just once.

  ## Attributes

  *   `scheduleEndDate` (*type:* `GoogleApi.StorageTransfer.V1.Model.Date.t`, *default:* `nil`) - The last day a transfer runs. Date boundaries are determined relative to
      UTC time. A job will run once per 24 hours within the following guidelines:

      *   If `scheduleEndDate` and `scheduleStartDate` are the same and in the
          future relative to UTC, the transfer is executed only one time.
      *   If `scheduleEndDate` is later than `scheduleStartDate` and
          `scheduleEndDate` is in the future relative to UTC, the job will
          run each day at `startTimeOfDay` through `scheduleEndDate`.
  *   `scheduleStartDate` (*type:* `GoogleApi.StorageTransfer.V1.Model.Date.t`, *default:* `nil`) - Required. The start date of a transfer. Date boundaries are determined
      relative to UTC time. If `scheduleStartDate` and `startTimeOfDay` are in
      the past relative to the job's creation time, the transfer starts the day
      after you schedule the transfer request.

      Note: When starting jobs at or near midnight UTC it is possible that
      a job will start later than expected. For example, if you send an outbound
      request on June 1 one millisecond prior to midnight UTC and the Storage
      Transfer Service server receives the request on June 2, then it will create
      a TransferJob with `scheduleStartDate` set to June 2 and a `startTimeOfDay`
      set to midnight UTC. The first scheduled TransferOperation will take place
      on June 3 at midnight UTC.
  *   `startTimeOfDay` (*type:* `GoogleApi.StorageTransfer.V1.Model.TimeOfDay.t`, *default:* `nil`) - The time in UTC that a transfer job is scheduled to run. Transfers may
      start later than this time.

      If `startTimeOfDay` is not specified:

      *   One-time transfers run immediately.
      *   Recurring transfers run immediately, and each day at midnight UTC,
          through `scheduleEndDate`.

      If `startTimeOfDay` is specified:

      *   One-time transfers run at the specified time.
      *   Recurring transfers run at the specified time each day, through
          `scheduleEndDate`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :scheduleEndDate => GoogleApi.StorageTransfer.V1.Model.Date.t(),
          :scheduleStartDate => GoogleApi.StorageTransfer.V1.Model.Date.t(),
          :startTimeOfDay => GoogleApi.StorageTransfer.V1.Model.TimeOfDay.t()
        }

  field(:scheduleEndDate, as: GoogleApi.StorageTransfer.V1.Model.Date)
  field(:scheduleStartDate, as: GoogleApi.StorageTransfer.V1.Model.Date)
  field(:startTimeOfDay, as: GoogleApi.StorageTransfer.V1.Model.TimeOfDay)
end

defimpl Poison.Decoder, for: GoogleApi.StorageTransfer.V1.Model.Schedule do
  def decode(value, options) do
    GoogleApi.StorageTransfer.V1.Model.Schedule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.StorageTransfer.V1.Model.Schedule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
