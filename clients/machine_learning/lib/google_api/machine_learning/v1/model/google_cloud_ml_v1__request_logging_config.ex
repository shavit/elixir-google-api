# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1_RequestLoggingConfig do
  @moduledoc """
  Configuration for logging request-response pairs to a BigQuery table.
  Online prediction requests to a model version and the responses to these
  requests are converted to raw strings and saved to the specified BigQuery
  table. Logging is constrained by [BigQuery quotas and
  limits](/bigquery/quotas). If your project exceeds BigQuery quotas or limits,
  AI Platform Prediction does not log request-response pairs, but it continues
  to serve predictions.

  If you are using [continuous
  evaluation](/ml-engine/docs/continuous-evaluation/), you do not need to
  specify this configuration manually. Setting up continuous evaluation
  automatically enables logging of request-response pairs.

  ## Attributes

  *   `bigqueryTableName` (*type:* `String.t`, *default:* `nil`) - Required. Fully qualified BigQuery table name in the following format:
      "<var>project_id</var>.<var>dataset_name</var>.<var>table_name</var>"

      The specifcied table must already exist, and the "Cloud ML Service Agent"
      for your project must have permission to write to it. The table must have
      the following [schema](/bigquery/docs/schemas):

      <table>
        <tr><th>Field name</th><th style="display: table-cell">Type</th>
          <th style="display: table-cell">Mode</th></tr>
        <tr><td>model</td><td>STRING</td><td>REQUIRED</td></tr>
        <tr><td>model_version</td><td>STRING</td><td>REQUIRED</td></tr>
        <tr><td>time</td><td>TIMESTAMP</td><td>REQUIRED</td></tr>
        <tr><td>raw_data</td><td>STRING</td><td>REQUIRED</td></tr>
        <tr><td>raw_prediction</td><td>STRING</td><td>NULLABLE</td></tr>
        <tr><td>groundtruth</td><td>STRING</td><td>NULLABLE</td></tr>
      </table>
  *   `samplingPercentage` (*type:* `float()`, *default:* `nil`) - Percentage of requests to be logged, expressed as a fraction from 0 to 1.
      For example, if you want to log 10% of requests, enter `0.1`. The sampling
      window is the lifetime of the model version. Defaults to 0.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bigqueryTableName => String.t(),
          :samplingPercentage => float()
        }

  field(:bigqueryTableName)
  field(:samplingPercentage)
end

defimpl Poison.Decoder,
  for: GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1_RequestLoggingConfig do
  def decode(value, options) do
    GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1_RequestLoggingConfig.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.MachineLearning.V1.Model.GoogleCloudMlV1_RequestLoggingConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
