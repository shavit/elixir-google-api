# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DigitalAssetLinks.V1.Model.CertificateInfo do
  @moduledoc """
  Describes an X509 certificate.

  ## Attributes

  *   `sha256Fingerprint` (*type:* `String.t`, *default:* `nil`) - The uppercase SHA-265 fingerprint of the certificate.  From the PEM
       certificate, it can be acquired like this:

          $ keytool -printcert -file $CERTFILE | grep SHA256:
          SHA256: 14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83: \\
              42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5

      or like this:

          $ openssl x509 -in $CERTFILE -noout -fingerprint -sha256
          SHA256 Fingerprint=14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64: \\
              16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5

      In this example, the contents of this field would be `14:6D:E9:83:C5:73:
      06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:
      44:E5`.

      If these tools are not available to you, you can convert the PEM
      certificate into the DER format, compute the SHA-256 hash of that string
      and represent the result as a hexstring (that is, uppercase hexadecimal
      representations of each octet, separated by colons).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :sha256Fingerprint => String.t()
        }

  field(:sha256Fingerprint)
end

defimpl Poison.Decoder, for: GoogleApi.DigitalAssetLinks.V1.Model.CertificateInfo do
  def decode(value, options) do
    GoogleApi.DigitalAssetLinks.V1.Model.CertificateInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DigitalAssetLinks.V1.Model.CertificateInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
