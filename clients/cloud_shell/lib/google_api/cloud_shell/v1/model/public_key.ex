# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudShell.V1.Model.PublicKey do
  @moduledoc """
  A public SSH key, corresponding to a private SSH key held by the client.

  ## Attributes

  *   `format` (*type:* `String.t`, *default:* `nil`) - Required. Format of this key's content.
  *   `key` (*type:* `String.t`, *default:* `nil`) - Required. Content of this key.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Full name of this resource, in the format
      `users/{owner_email}/environments/{environment_id}/publicKeys/{key_id}`.
      `{owner_email}` is the email address of the user to whom the key belongs.
      `{environment_id}` is the identifier of the environment to which the key
      grants access. `{key_id}` is the unique identifier of the key. For example,
      `users/someone@example.com/environments/default/publicKeys/myKey`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :format => String.t(),
          :key => String.t(),
          :name => String.t()
        }

  field(:format)
  field(:key)
  field(:name)
end

defimpl Poison.Decoder, for: GoogleApi.CloudShell.V1.Model.PublicKey do
  def decode(value, options) do
    GoogleApi.CloudShell.V1.Model.PublicKey.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudShell.V1.Model.PublicKey do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
