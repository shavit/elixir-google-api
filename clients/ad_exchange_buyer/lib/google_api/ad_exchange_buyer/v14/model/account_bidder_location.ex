# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AdExchangeBuyer.V14.Model.AccountBidderLocation do
  @moduledoc """


  ## Attributes

  *   `bidProtocol` (*type:* `String.t`, *default:* `nil`) - The protocol that the bidder endpoint is using. OpenRTB protocols with prefix PROTOCOL_OPENRTB_PROTOBUF use proto buffer, otherwise use JSON.  Allowed values:  
      - PROTOCOL_ADX 
      - PROTOCOL_OPENRTB_2_2 
      - PROTOCOL_OPENRTB_2_3 
      - PROTOCOL_OPENRTB_2_4 
      - PROTOCOL_OPENRTB_2_5 
      - PROTOCOL_OPENRTB_PROTOBUF_2_3 
      - PROTOCOL_OPENRTB_PROTOBUF_2_4 
      - PROTOCOL_OPENRTB_PROTOBUF_2_5
  *   `maximumQps` (*type:* `integer()`, *default:* `nil`) - The maximum queries per second the Ad Exchange will send.
  *   `region` (*type:* `String.t`, *default:* `nil`) - The geographical region the Ad Exchange should send requests from. Only used by some quota systems, but always setting the value is recommended. Allowed values:  
      - ASIA 
      - EUROPE 
      - US_EAST 
      - US_WEST
  *   `url` (*type:* `String.t`, *default:* `nil`) - The URL to which the Ad Exchange will send bid requests.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bidProtocol => String.t(),
          :maximumQps => integer(),
          :region => String.t(),
          :url => String.t()
        }

  field(:bidProtocol)
  field(:maximumQps)
  field(:region)
  field(:url)
end

defimpl Poison.Decoder, for: GoogleApi.AdExchangeBuyer.V14.Model.AccountBidderLocation do
  def decode(value, options) do
    GoogleApi.AdExchangeBuyer.V14.Model.AccountBidderLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AdExchangeBuyer.V14.Model.AccountBidderLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
