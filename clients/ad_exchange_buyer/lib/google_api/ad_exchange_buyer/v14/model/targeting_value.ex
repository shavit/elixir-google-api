# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AdExchangeBuyer.V14.Model.TargetingValue do
  @moduledoc """


  ## Attributes

  *   `creativeSizeValue` (*type:* `GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueCreativeSize.t`, *default:* `nil`) - The creative size value to exclude/include.
  *   `dayPartTargetingValue` (*type:* `GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueDayPartTargeting.t`, *default:* `nil`) - The daypart targeting to include / exclude. Filled in when the key is GOOG_DAYPART_TARGETING.
  *   `demogAgeCriteriaValue` (*type:* `GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueDemogAgeCriteria.t`, *default:* `nil`) - 
  *   `demogGenderCriteriaValue` (*type:* `GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueDemogGenderCriteria.t`, *default:* `nil`) - 
  *   `longValue` (*type:* `String.t`, *default:* `nil`) - The long value to exclude/include.
  *   `stringValue` (*type:* `String.t`, *default:* `nil`) - The string value to exclude/include.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :creativeSizeValue =>
            GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueCreativeSize.t(),
          :dayPartTargetingValue =>
            GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueDayPartTargeting.t(),
          :demogAgeCriteriaValue =>
            GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueDemogAgeCriteria.t(),
          :demogGenderCriteriaValue =>
            GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueDemogGenderCriteria.t(),
          :longValue => String.t(),
          :stringValue => String.t()
        }

  field(:creativeSizeValue, as: GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueCreativeSize)

  field(
    :dayPartTargetingValue,
    as: GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueDayPartTargeting
  )

  field(
    :demogAgeCriteriaValue,
    as: GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueDemogAgeCriteria
  )

  field(
    :demogGenderCriteriaValue,
    as: GoogleApi.AdExchangeBuyer.V14.Model.TargetingValueDemogGenderCriteria
  )

  field(:longValue)
  field(:stringValue)
end

defimpl Poison.Decoder, for: GoogleApi.AdExchangeBuyer.V14.Model.TargetingValue do
  def decode(value, options) do
    GoogleApi.AdExchangeBuyer.V14.Model.TargetingValue.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AdExchangeBuyer.V14.Model.TargetingValue do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
