# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DFAReporting.V33.Model.CreativeAsset do
  @moduledoc """
  Creative Asset.

  ## Attributes

  *   `displayType` (*type:* `String.t`, *default:* `nil`) - Type of rich media asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
  *   `frameRate` (*type:* `number()`, *default:* `nil`) - Video frame rate for video asset in frames per second. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.
  *   `mimeType` (*type:* `String.t`, *default:* `nil`) - Detected MIME type for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
  *   `sslCompliant` (*type:* `boolean()`, *default:* `nil`) - Whether the asset is SSL-compliant. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.
  *   `streamingServingUrl` (*type:* `String.t`, *default:* `nil`) - Streaming URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.
  *   `pushdown` (*type:* `boolean()`, *default:* `nil`) - Whether the asset pushes down other content. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable when the asset offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height.
  *   `detectedFeatures` (*type:* `list(String.t)`, *default:* `nil`) - List of feature dependencies for the creative asset that are detected by Campaign Manager. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field. Applicable to the following creative types: HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
  *   `zIndex` (*type:* `integer()`, *default:* `nil`) - zIndex value of an asset. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable to assets whose displayType is NOT one of the following types: ASSET_DISPLAY_TYPE_INPAGE or ASSET_DISPLAY_TYPE_OVERLAY. Acceptable values are -999999999 to 999999999, inclusive.
  *   `horizontallyLocked` (*type:* `boolean()`, *default:* `nil`) - Whether the asset is horizontally locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
  *   `id` (*type:* `String.t`, *default:* `nil`) - Numeric ID of this creative asset. This is a required field and should not be modified. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.
  *   `startTimeType` (*type:* `String.t`, *default:* `nil`) - Initial wait time type before making the asset visible. Applicable to the following creative types: all RICH_MEDIA.
  *   `actionScript3` (*type:* `boolean()`, *default:* `nil`) - Whether ActionScript3 is enabled for the flash asset. This is a read-only field. Applicable to the following creative type: FLASH_INPAGE. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
  *   `orientation` (*type:* `String.t`, *default:* `nil`) - Orientation of video asset. This is a read-only, auto-generated field.
  *   `flashVersion` (*type:* `integer()`, *default:* `nil`) - Flash version of the asset. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
  *   `role` (*type:* `String.t`, *default:* `nil`) - Role of the asset in relation to creative. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT. This is a required field.
      PRIMARY applies to DISPLAY, FLASH_INPAGE, HTML5_BANNER, IMAGE, DISPLAY_IMAGE_GALLERY, all RICH_MEDIA (which may contain multiple primary assets), and all VPAID creatives.
      BACKUP_IMAGE applies to FLASH_INPAGE, HTML5_BANNER, all RICH_MEDIA, and all VPAID creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
      ADDITIONAL_IMAGE and ADDITIONAL_FLASH apply to FLASH_INPAGE creatives.
      OTHER refers to assets from sources other than Campaign Manager, such as Studio uploaded assets, applicable to all RICH_MEDIA and all VPAID creatives.
      PARENT_VIDEO refers to videos uploaded by the user in Campaign Manager and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives.
      TRANSCODED_VIDEO refers to videos transcoded by Campaign Manager from PARENT_VIDEO assets and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives.
      ALTERNATE_VIDEO refers to the Campaign Manager representation of child asset videos from Studio, and is applicable to VPAID_LINEAR_VIDEO creatives. These cannot be added or removed within Campaign Manager.
      For VPAID_LINEAR_VIDEO creatives, PARENT_VIDEO, TRANSCODED_VIDEO and ALTERNATE_VIDEO assets that are marked active serve as backup in case the VPAID creative cannot be served. Only PARENT_VIDEO assets can be added or removed for an INSTREAM_VIDEO or VPAID_LINEAR_VIDEO creative.
      PARENT_AUDIO refers to audios uploaded by the user in Campaign Manager and is applicable to INSTREAM_AUDIO creatives.
      TRANSCODED_AUDIO refers to audios transcoded by Campaign Manager from PARENT_AUDIO assets and is applicable to INSTREAM_AUDIO creatives.
  *   `companionCreativeIds` (*type:* `list(String.t)`, *default:* `nil`) - List of companion creatives assigned to an in-stream video creative asset. Acceptable values include IDs of existing flash and image creatives. Applicable to INSTREAM_VIDEO creative type with dynamicAssetSelection set to true.
  *   `originalBackup` (*type:* `boolean()`, *default:* `nil`) - Whether the backup asset is original or changed by the user in Campaign Manager. Applicable to the following creative types: all RICH_MEDIA.
  *   `hideFlashObjects` (*type:* `boolean()`, *default:* `nil`) - Whether to hide Flash objects flag for an asset. Applicable to the following creative types: all RICH_MEDIA.
  *   `expandedDimension` (*type:* `GoogleApi.DFAReporting.V33.Model.Size.t`, *default:* `nil`) - Detected expanded dimension for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.
  *   `transparency` (*type:* `boolean()`, *default:* `nil`) - Whether the asset is transparent. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable to HTML5 assets.
  *   `mediaDuration` (*type:* `number()`, *default:* `nil`) - Detected duration for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
  *   `backupImageExit` (*type:* `GoogleApi.DFAReporting.V33.Model.CreativeCustomEvent.t`, *default:* `nil`) - Exit event configured for the backup image. Applicable to the following creative types: all RICH_MEDIA.
  *   `active` (*type:* `boolean()`, *default:* `nil`) - Whether the video or audio asset is active. This is a read-only field for VPAID_NON_LINEAR_VIDEO assets. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
  *   `progressiveServingUrl` (*type:* `String.t`, *default:* `nil`) - Progressive URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.
  *   `offset` (*type:* `GoogleApi.DFAReporting.V33.Model.OffsetPosition.t`, *default:* `nil`) - Offset position for an asset in collapsed mode. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, only applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.
  *   `alignment` (*type:* `String.t`, *default:* `nil`) - Possible alignments for an asset. This is a read-only field. Applicable to the following creative types: RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL.
  *   `idDimensionValue` (*type:* `GoogleApi.DFAReporting.V33.Model.DimensionValue.t`, *default:* `nil`) - Dimension value for the ID of the asset. This is a read-only, auto-generated field.
  *   `windowMode` (*type:* `String.t`, *default:* `nil`) - Window mode options for flash assets. Applicable to the following creative types: FLASH_INPAGE, RICH_MEDIA_DISPLAY_EXPANDING, RICH_MEDIA_IM_EXPAND, RICH_MEDIA_DISPLAY_BANNER, and RICH_MEDIA_INPAGE_FLOATING.
  *   `audioBitRate` (*type:* `integer()`, *default:* `nil`) - Audio stream bit rate in kbps. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
  *   `politeLoad` (*type:* `boolean()`, *default:* `nil`) - Whether this asset is used as a polite load asset.
  *   `audioSampleRate` (*type:* `integer()`, *default:* `nil`) - Audio sample bit rate in hertz. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
  *   `pushdownDuration` (*type:* `number()`, *default:* `nil`) - Pushdown duration in seconds for an asset. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable when the asset pushdown field is true, the offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height. Acceptable values are 0 to 9.99, inclusive.
  *   `collapsedSize` (*type:* `GoogleApi.DFAReporting.V33.Model.Size.t`, *default:* `nil`) - Size of an asset when collapsed. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.
  *   `assetIdentifier` (*type:* `GoogleApi.DFAReporting.V33.Model.CreativeAssetId.t`, *default:* `nil`) - Identifier of this asset. This is the same identifier returned during creative asset insert operation. This is a required field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.
  *   `bitRate` (*type:* `integer()`, *default:* `nil`) - Detected bit-rate for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
  *   `artworkType` (*type:* `String.t`, *default:* `nil`) - Artwork type of rich media creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
  *   `childAssetType` (*type:* `String.t`, *default:* `nil`) - Rich media child asset type. This is a read-only field. Applicable to the following creative types: all VPAID.
  *   `zipFilesize` (*type:* `String.t`, *default:* `nil`) - Size of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.
  *   `hideSelectionBoxes` (*type:* `boolean()`, *default:* `nil`) - Whether to hide selection boxes flag for an asset. Applicable to the following creative types: all RICH_MEDIA.
  *   `customStartTimeValue` (*type:* `integer()`, *default:* `nil`) - Custom start time in seconds for making the asset visible. Applicable to the following creative types: all RICH_MEDIA. Value must be greater than or equal to 0.
  *   `durationType` (*type:* `String.t`, *default:* `nil`) - Duration type for which an asset will be displayed. Applicable to the following creative types: all RICH_MEDIA.
  *   `position` (*type:* `GoogleApi.DFAReporting.V33.Model.OffsetPosition.t`, *default:* `nil`) - Offset position for an asset. Applicable to the following creative types: all RICH_MEDIA.
  *   `fileSize` (*type:* `String.t`, *default:* `nil`) - File size associated with this creative asset. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.
  *   `zipFilename` (*type:* `String.t`, *default:* `nil`) - File name of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.
  *   `duration` (*type:* `integer()`, *default:* `nil`) - Duration in seconds for which an asset will be displayed. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and VPAID_LINEAR_VIDEO. Value must be greater than or equal to 1.
  *   `positionTopUnit` (*type:* `String.t`, *default:* `nil`) - Offset top unit for an asset. This is a read-only field if the asset displayType is ASSET_DISPLAY_TYPE_OVERLAY. Applicable to the following creative types: all RICH_MEDIA.
  *   `verticallyLocked` (*type:* `boolean()`, *default:* `nil`) - Whether the asset is vertically locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
  *   `size` (*type:* `GoogleApi.DFAReporting.V33.Model.Size.t`, *default:* `nil`) - Size associated with this creative asset. This is a required field when applicable; however for IMAGE and FLASH_INPAGE, creatives if left blank, this field will be automatically set using the actual size of the associated image asset. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
  *   `positionLeftUnit` (*type:* `String.t`, *default:* `nil`) - Offset left unit for an asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.
  *   `additionalSizes` (*type:* `list(GoogleApi.DFAReporting.V33.Model.Size.t)`, *default:* `nil`) - Additional sizes associated with this creative asset. HTML5 asset generated by compatible software such as GWD will be able to support more sizes this creative asset can render.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayType => String.t(),
          :frameRate => number(),
          :mimeType => String.t(),
          :sslCompliant => boolean(),
          :streamingServingUrl => String.t(),
          :pushdown => boolean(),
          :detectedFeatures => list(String.t()),
          :zIndex => integer(),
          :horizontallyLocked => boolean(),
          :id => String.t(),
          :startTimeType => String.t(),
          :actionScript3 => boolean(),
          :orientation => String.t(),
          :flashVersion => integer(),
          :role => String.t(),
          :companionCreativeIds => list(String.t()),
          :originalBackup => boolean(),
          :hideFlashObjects => boolean(),
          :expandedDimension => GoogleApi.DFAReporting.V33.Model.Size.t(),
          :transparency => boolean(),
          :mediaDuration => number(),
          :backupImageExit => GoogleApi.DFAReporting.V33.Model.CreativeCustomEvent.t(),
          :active => boolean(),
          :progressiveServingUrl => String.t(),
          :offset => GoogleApi.DFAReporting.V33.Model.OffsetPosition.t(),
          :alignment => String.t(),
          :idDimensionValue => GoogleApi.DFAReporting.V33.Model.DimensionValue.t(),
          :windowMode => String.t(),
          :audioBitRate => integer(),
          :politeLoad => boolean(),
          :audioSampleRate => integer(),
          :pushdownDuration => number(),
          :collapsedSize => GoogleApi.DFAReporting.V33.Model.Size.t(),
          :assetIdentifier => GoogleApi.DFAReporting.V33.Model.CreativeAssetId.t(),
          :bitRate => integer(),
          :artworkType => String.t(),
          :childAssetType => String.t(),
          :zipFilesize => String.t(),
          :hideSelectionBoxes => boolean(),
          :customStartTimeValue => integer(),
          :durationType => String.t(),
          :position => GoogleApi.DFAReporting.V33.Model.OffsetPosition.t(),
          :fileSize => String.t(),
          :zipFilename => String.t(),
          :duration => integer(),
          :positionTopUnit => String.t(),
          :verticallyLocked => boolean(),
          :size => GoogleApi.DFAReporting.V33.Model.Size.t(),
          :positionLeftUnit => String.t(),
          :additionalSizes => list(GoogleApi.DFAReporting.V33.Model.Size.t())
        }

  field(:displayType)
  field(:frameRate)
  field(:mimeType)
  field(:sslCompliant)
  field(:streamingServingUrl)
  field(:pushdown)
  field(:detectedFeatures, type: :list)
  field(:zIndex)
  field(:horizontallyLocked)
  field(:id)
  field(:startTimeType)
  field(:actionScript3)
  field(:orientation)
  field(:flashVersion)
  field(:role)
  field(:companionCreativeIds, type: :list)
  field(:originalBackup)
  field(:hideFlashObjects)
  field(:expandedDimension, as: GoogleApi.DFAReporting.V33.Model.Size)
  field(:transparency)
  field(:mediaDuration)
  field(:backupImageExit, as: GoogleApi.DFAReporting.V33.Model.CreativeCustomEvent)
  field(:active)
  field(:progressiveServingUrl)
  field(:offset, as: GoogleApi.DFAReporting.V33.Model.OffsetPosition)
  field(:alignment)
  field(:idDimensionValue, as: GoogleApi.DFAReporting.V33.Model.DimensionValue)
  field(:windowMode)
  field(:audioBitRate)
  field(:politeLoad)
  field(:audioSampleRate)
  field(:pushdownDuration)
  field(:collapsedSize, as: GoogleApi.DFAReporting.V33.Model.Size)
  field(:assetIdentifier, as: GoogleApi.DFAReporting.V33.Model.CreativeAssetId)
  field(:bitRate)
  field(:artworkType)
  field(:childAssetType)
  field(:zipFilesize)
  field(:hideSelectionBoxes)
  field(:customStartTimeValue)
  field(:durationType)
  field(:position, as: GoogleApi.DFAReporting.V33.Model.OffsetPosition)
  field(:fileSize)
  field(:zipFilename)
  field(:duration)
  field(:positionTopUnit)
  field(:verticallyLocked)
  field(:size, as: GoogleApi.DFAReporting.V33.Model.Size)
  field(:positionLeftUnit)
  field(:additionalSizes, as: GoogleApi.DFAReporting.V33.Model.Size, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.DFAReporting.V33.Model.CreativeAsset do
  def decode(value, options) do
    GoogleApi.DFAReporting.V33.Model.CreativeAsset.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DFAReporting.V33.Model.CreativeAsset do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
