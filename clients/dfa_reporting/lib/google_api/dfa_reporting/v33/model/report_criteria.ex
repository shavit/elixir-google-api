# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DFAReporting.V33.Model.ReportCriteria do
  @moduledoc """
  The report criteria for a report of type "STANDARD".

  ## Attributes

  *   `activities` (*type:* `GoogleApi.DFAReporting.V33.Model.Activities.t`, *default:* `nil`) - Activity group.
  *   `customRichMediaEvents` (*type:* `GoogleApi.DFAReporting.V33.Model.CustomRichMediaEvents.t`, *default:* `nil`) - Custom Rich Media Events group.
  *   `dateRange` (*type:* `GoogleApi.DFAReporting.V33.Model.DateRange.t`, *default:* `nil`) - The date range for which this report should be run.
  *   `dimensionFilters` (*type:* `list(GoogleApi.DFAReporting.V33.Model.DimensionValue.t)`, *default:* `nil`) - The list of filters on which dimensions are filtered.
      Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.
  *   `dimensions` (*type:* `list(GoogleApi.DFAReporting.V33.Model.SortedDimension.t)`, *default:* `nil`) - The list of standard dimensions the report should include.
  *   `metricNames` (*type:* `list(String.t)`, *default:* `nil`) - The list of names of metrics the report should include.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :activities => GoogleApi.DFAReporting.V33.Model.Activities.t(),
          :customRichMediaEvents => GoogleApi.DFAReporting.V33.Model.CustomRichMediaEvents.t(),
          :dateRange => GoogleApi.DFAReporting.V33.Model.DateRange.t(),
          :dimensionFilters => list(GoogleApi.DFAReporting.V33.Model.DimensionValue.t()),
          :dimensions => list(GoogleApi.DFAReporting.V33.Model.SortedDimension.t()),
          :metricNames => list(String.t())
        }

  field(:activities, as: GoogleApi.DFAReporting.V33.Model.Activities)
  field(:customRichMediaEvents, as: GoogleApi.DFAReporting.V33.Model.CustomRichMediaEvents)
  field(:dateRange, as: GoogleApi.DFAReporting.V33.Model.DateRange)
  field(:dimensionFilters, as: GoogleApi.DFAReporting.V33.Model.DimensionValue, type: :list)
  field(:dimensions, as: GoogleApi.DFAReporting.V33.Model.SortedDimension, type: :list)
  field(:metricNames, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.DFAReporting.V33.Model.ReportCriteria do
  def decode(value, options) do
    GoogleApi.DFAReporting.V33.Model.ReportCriteria.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DFAReporting.V33.Model.ReportCriteria do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
