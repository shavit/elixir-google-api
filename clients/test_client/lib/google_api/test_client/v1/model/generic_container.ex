# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.TestClient.V1.Model.GenericContainer do
  @moduledoc """
  A data structure to test different any types

  ## Attributes

  *   `any` (*type:* `any()`, *default:* `nil`) - A generic field type
  *   `attributes` (*type:* `map()`, *default:* `nil`) - This field can contain anything
  *   `listOfAny` (*type:* `list(any())`, *default:* `nil`) - Contains a list of anything
  *   `mapOfRefs` (*type:* `%{optional(String.t) => GoogleApi.TestClient.V1.Model.Container.t}`, *default:* `nil`) - A map of references to objects
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :any => any(),
          :attributes => map(),
          :listOfAny => list(any()),
          :mapOfRefs => %{optional(String.t()) => GoogleApi.TestClient.V1.Model.Container.t()}
        }

  field(:any)
  field(:attributes, type: :map)
  field(:listOfAny, type: :list)
  field(:mapOfRefs, as: GoogleApi.TestClient.V1.Model.Container, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.TestClient.V1.Model.GenericContainer do
  def decode(value, options) do
    GoogleApi.TestClient.V1.Model.GenericContainer.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.TestClient.V1.Model.GenericContainer do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
