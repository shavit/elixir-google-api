# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Container.V1.Model.ResourceUsageExportConfig do
  @moduledoc """
  Configuration for exporting cluster resource usages.

  ## Attributes

  *   `bigqueryDestination` (*type:* `GoogleApi.Container.V1.Model.BigQueryDestination.t`, *default:* `nil`) - Configuration to use BigQuery as usage export destination.
  *   `consumptionMeteringConfig` (*type:* `GoogleApi.Container.V1.Model.ConsumptionMeteringConfig.t`, *default:* `nil`) - Configuration to enable resource consumption metering.
  *   `enableNetworkEgressMetering` (*type:* `boolean()`, *default:* `nil`) - Whether to enable network egress metering for this cluster. If enabled, a
      daemonset will be created in the cluster to meter network egress traffic.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bigqueryDestination => GoogleApi.Container.V1.Model.BigQueryDestination.t(),
          :consumptionMeteringConfig =>
            GoogleApi.Container.V1.Model.ConsumptionMeteringConfig.t(),
          :enableNetworkEgressMetering => boolean()
        }

  field(:bigqueryDestination, as: GoogleApi.Container.V1.Model.BigQueryDestination)
  field(:consumptionMeteringConfig, as: GoogleApi.Container.V1.Model.ConsumptionMeteringConfig)
  field(:enableNetworkEgressMetering)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.ResourceUsageExportConfig do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.ResourceUsageExportConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.ResourceUsageExportConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
