# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Container.V1.Model.NodeManagement do
  @moduledoc """
  NodeManagement defines the set of node management services turned on for the
  node pool.

  ## Attributes

  *   `autoRepair` (*type:* `boolean()`, *default:* `nil`) - A flag that specifies whether the node auto-repair is enabled for the node
      pool. If enabled, the nodes in this node pool will be monitored and, if
      they fail health checks too many times, an automatic repair action will be
      triggered.
  *   `autoUpgrade` (*type:* `boolean()`, *default:* `nil`) - A flag that specifies whether node auto-upgrade is enabled for the node
      pool. If enabled, node auto-upgrade helps keep the nodes in your node pool
      up to date with the latest release version of Kubernetes.
  *   `upgradeOptions` (*type:* `GoogleApi.Container.V1.Model.AutoUpgradeOptions.t`, *default:* `nil`) - Specifies the Auto Upgrade knobs for the node pool.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :autoRepair => boolean(),
          :autoUpgrade => boolean(),
          :upgradeOptions => GoogleApi.Container.V1.Model.AutoUpgradeOptions.t()
        }

  field(:autoRepair)
  field(:autoUpgrade)
  field(:upgradeOptions, as: GoogleApi.Container.V1.Model.AutoUpgradeOptions)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.NodeManagement do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.NodeManagement.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.NodeManagement do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
