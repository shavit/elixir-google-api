# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Container.V1.Model.Operation do
  @moduledoc """
  This operation resource represents operations that may have happened or are
  happening on the cluster. All fields are output only.

  ## Attributes

  *   `clusterConditions` (*type:* `list(GoogleApi.Container.V1.Model.StatusCondition.t)`, *default:* `nil`) - Which conditions caused the current cluster state.
  *   `detail` (*type:* `String.t`, *default:* `nil`) - Detailed operation progress, if available.
  *   `endTime` (*type:* `String.t`, *default:* `nil`) - [Output only] The time the operation completed, in
      [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  *   `location` (*type:* `String.t`, *default:* `nil`) - [Output only] The name of the Google Compute Engine
      [zone](/compute/docs/regions-zones/regions-zones#available) or
      [region](/compute/docs/regions-zones/regions-zones#available) in which
      the cluster resides.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The server-assigned ID for the operation.
  *   `nodepoolConditions` (*type:* `list(GoogleApi.Container.V1.Model.StatusCondition.t)`, *default:* `nil`) - Which conditions caused the current node pool state.
  *   `operationType` (*type:* `String.t`, *default:* `nil`) - The operation type.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - Server-defined URL for the resource.
  *   `startTime` (*type:* `String.t`, *default:* `nil`) - [Output only] The time the operation started, in
      [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  *   `status` (*type:* `String.t`, *default:* `nil`) - The current status of the operation.
  *   `statusMessage` (*type:* `String.t`, *default:* `nil`) - If an error has occurred, a textual description of the error.
  *   `targetLink` (*type:* `String.t`, *default:* `nil`) - Server-defined URL for the target of the operation.
  *   `zone` (*type:* `String.t`, *default:* `nil`) - The name of the Google Compute Engine
      [zone](/compute/docs/zones#available) in which the operation
      is taking place.
      This field is deprecated, use location instead.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clusterConditions => list(GoogleApi.Container.V1.Model.StatusCondition.t()),
          :detail => String.t(),
          :endTime => String.t(),
          :location => String.t(),
          :name => String.t(),
          :nodepoolConditions => list(GoogleApi.Container.V1.Model.StatusCondition.t()),
          :operationType => String.t(),
          :selfLink => String.t(),
          :startTime => String.t(),
          :status => String.t(),
          :statusMessage => String.t(),
          :targetLink => String.t(),
          :zone => String.t()
        }

  field(:clusterConditions, as: GoogleApi.Container.V1.Model.StatusCondition, type: :list)
  field(:detail)
  field(:endTime)
  field(:location)
  field(:name)
  field(:nodepoolConditions, as: GoogleApi.Container.V1.Model.StatusCondition, type: :list)
  field(:operationType)
  field(:selfLink)
  field(:startTime)
  field(:status)
  field(:statusMessage)
  field(:targetLink)
  field(:zone)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.Operation do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.Operation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.Operation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
