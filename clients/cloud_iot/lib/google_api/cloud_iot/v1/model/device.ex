# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudIot.V1.Model.Device do
  @moduledoc """
  The device resource.

  ## Attributes

  *   `blocked` (*type:* `boolean()`, *default:* `nil`) - If a device is blocked, connections or requests from this device will fail.
      Can be used to temporarily prevent the device from connecting if, for
      example, the sensor is generating bad data and needs maintenance.
  *   `config` (*type:* `GoogleApi.CloudIot.V1.Model.DeviceConfig.t`, *default:* `nil`) - The most recent device configuration, which is eventually sent from
      Cloud IoT Core to the device. If not present on creation, the
      configuration will be initialized with an empty payload and version value
      of `1`. To update this field after creation, use the
      `DeviceManager.ModifyCloudToDeviceConfig` method.
  *   `credentials` (*type:* `list(GoogleApi.CloudIot.V1.Model.DeviceCredential.t)`, *default:* `nil`) - The credentials used to authenticate this device. To allow credential
      rotation without interruption, multiple device credentials can be bound to
      this device. No more than 3 credentials can be bound to a single device at
      a time. When new credentials are added to a device, they are verified
      against the registry credentials. For details, see the description of the
      `DeviceRegistry.credentials` field.
  *   `gatewayConfig` (*type:* `GoogleApi.CloudIot.V1.Model.GatewayConfig.t`, *default:* `nil`) - Gateway-related configuration and state.
  *   `id` (*type:* `String.t`, *default:* `nil`) - The user-defined device identifier. The device ID must be unique
      within a device registry.
  *   `lastConfigAckTime` (*type:* `DateTime.t`, *default:* `nil`) - [Output only] The last time a cloud-to-device config version acknowledgment
      was received from the device. This field is only for configurations
      sent through MQTT.
  *   `lastConfigSendTime` (*type:* `DateTime.t`, *default:* `nil`) - [Output only] The last time a cloud-to-device config version was sent to
      the device.
  *   `lastErrorStatus` (*type:* `GoogleApi.CloudIot.V1.Model.Status.t`, *default:* `nil`) - [Output only] The error message of the most recent error, such as a failure
      to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
      field. If no errors have occurred, this field has an empty message
      and the status code 0 == OK. Otherwise, this field is expected to have a
      status code other than OK.
  *   `lastErrorTime` (*type:* `DateTime.t`, *default:* `nil`) - [Output only] The time the most recent error occurred, such as a failure to
      publish to Cloud Pub/Sub. This field is the timestamp of
      'last_error_status'.
  *   `lastEventTime` (*type:* `DateTime.t`, *default:* `nil`) - [Output only] The last time a telemetry event was received. Timestamps are
      periodically collected and written to storage; they may be stale by a few
      minutes.
  *   `lastHeartbeatTime` (*type:* `DateTime.t`, *default:* `nil`) - [Output only] The last time an MQTT `PINGREQ` was received. This field
      applies only to devices connecting through MQTT. MQTT clients usually only
      send `PINGREQ` messages if the connection is idle, and no other messages
      have been sent. Timestamps are periodically collected and written to
      storage; they may be stale by a few minutes.
  *   `lastStateTime` (*type:* `DateTime.t`, *default:* `nil`) - [Output only] The last time a state event was received. Timestamps are
      periodically collected and written to storage; they may be stale by a few
      minutes.
  *   `logLevel` (*type:* `String.t`, *default:* `nil`) - **Beta Feature**

      The logging verbosity for device activity. If unspecified,
      DeviceRegistry.log_level will be used.
  *   `metadata` (*type:* `map()`, *default:* `nil`) - The metadata key-value pairs assigned to the device. This metadata is not
      interpreted or indexed by Cloud IoT Core. It can be used to add contextual
      information for the device.

      Keys must conform to the regular expression a-zA-Z+ and
      be less than 128 bytes in length.

      Values are free-form strings. Each value must be less than or equal to 32
      KB in size.

      The total size of all keys and values must be less than 256 KB, and the
      maximum number of key-value pairs is 500.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The resource path name. For example,
      `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
      `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
      When `name` is populated as a response from the service, it always ends
      in the device numeric ID.
  *   `numId` (*type:* `String.t`, *default:* `nil`) - [Output only] A server-defined unique numeric ID for the device. This is a
      more compact way to identify devices, and it is globally unique.
  *   `state` (*type:* `GoogleApi.CloudIot.V1.Model.DeviceState.t`, *default:* `nil`) - [Output only] The state most recently received from the device. If no state
      has been reported, this field is not present.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :blocked => boolean(),
          :config => GoogleApi.CloudIot.V1.Model.DeviceConfig.t(),
          :credentials => list(GoogleApi.CloudIot.V1.Model.DeviceCredential.t()),
          :gatewayConfig => GoogleApi.CloudIot.V1.Model.GatewayConfig.t(),
          :id => String.t(),
          :lastConfigAckTime => DateTime.t(),
          :lastConfigSendTime => DateTime.t(),
          :lastErrorStatus => GoogleApi.CloudIot.V1.Model.Status.t(),
          :lastErrorTime => DateTime.t(),
          :lastEventTime => DateTime.t(),
          :lastHeartbeatTime => DateTime.t(),
          :lastStateTime => DateTime.t(),
          :logLevel => String.t(),
          :metadata => map(),
          :name => String.t(),
          :numId => String.t(),
          :state => GoogleApi.CloudIot.V1.Model.DeviceState.t()
        }

  field(:blocked)
  field(:config, as: GoogleApi.CloudIot.V1.Model.DeviceConfig)
  field(:credentials, as: GoogleApi.CloudIot.V1.Model.DeviceCredential, type: :list)
  field(:gatewayConfig, as: GoogleApi.CloudIot.V1.Model.GatewayConfig)
  field(:id)
  field(:lastConfigAckTime, as: DateTime)
  field(:lastConfigSendTime, as: DateTime)
  field(:lastErrorStatus, as: GoogleApi.CloudIot.V1.Model.Status)
  field(:lastErrorTime, as: DateTime)
  field(:lastEventTime, as: DateTime)
  field(:lastHeartbeatTime, as: DateTime)
  field(:lastStateTime, as: DateTime)
  field(:logLevel)
  field(:metadata, type: :map)
  field(:name)
  field(:numId)
  field(:state, as: GoogleApi.CloudIot.V1.Model.DeviceState)
end

defimpl Poison.Decoder, for: GoogleApi.CloudIot.V1.Model.Device do
  def decode(value, options) do
    GoogleApi.CloudIot.V1.Model.Device.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudIot.V1.Model.Device do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
