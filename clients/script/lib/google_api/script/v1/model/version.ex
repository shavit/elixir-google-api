# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Script.V1.Model.Version do
  @moduledoc """
  A resource representing a script project version. A version is a "snapshot"
  of a script project and is similar to a read-only branched release. When
  creating deployments, the version to use must be specified.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - When the version was created.
  *   `description` (*type:* `String.t`, *default:* `nil`) - The description for this version.
  *   `scriptId` (*type:* `String.t`, *default:* `nil`) - The script project's Drive ID.
  *   `versionNumber` (*type:* `integer()`, *default:* `nil`) - The incremental ID that is created by Apps Script when a version is
      created. This is system assigned number and is immutable once created.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t(),
          :description => String.t(),
          :scriptId => String.t(),
          :versionNumber => integer()
        }

  field(:createTime, as: DateTime)
  field(:description)
  field(:scriptId)
  field(:versionNumber)
end

defimpl Poison.Decoder, for: GoogleApi.Script.V1.Model.Version do
  def decode(value, options) do
    GoogleApi.Script.V1.Model.Version.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Script.V1.Model.Version do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
