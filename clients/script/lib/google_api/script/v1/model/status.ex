# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Script.V1.Model.Status do
  @moduledoc """
  If a `run` call succeeds but the script function (or Apps Script itself) throws an exception, the response body's error field contains this `Status` object.

  ## Attributes

  *   `code` (*type:* `integer()`, *default:* `nil`) - The status code. For this API, this value either: <ul> <li> 10, indicating a `SCRIPT_TIMEOUT` error,</li> <li> 3, indicating an `INVALID_ARGUMENT` error, or</li> <li> 1, indicating a `CANCELLED` execution.</li> </ul>
  *   `details` (*type:* `list(map())`, *default:* `nil`) - An array that contains a single ExecutionError object that provides information about the nature of the error.
  *   `message` (*type:* `String.t`, *default:* `nil`) - A developer-facing error message, which is in English. Any user-facing error message is localized and sent in the details field, or localized by the client.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :code => integer(),
          :details => list(map()),
          :message => String.t()
        }

  field(:code)
  field(:details, type: :list)
  field(:message)
end

defimpl Poison.Decoder, for: GoogleApi.Script.V1.Model.Status do
  def decode(value, options) do
    GoogleApi.Script.V1.Model.Status.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Script.V1.Model.Status do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
