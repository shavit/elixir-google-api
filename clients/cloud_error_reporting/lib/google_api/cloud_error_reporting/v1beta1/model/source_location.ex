# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudErrorReporting.V1beta1.Model.SourceLocation do
  @moduledoc """
  Indicates a location in the source code of the service for which errors are
  reported. `functionName` must be provided by the application when reporting
  an error, unless the error report contains a `message` with a supported
  exception stack trace. All fields are optional for the later case.

  ## Attributes

  *   `filePath` (*type:* `String.t`, *default:* `nil`) - The source code filename, which can include a truncated relative
      path, or a full path from a production machine.
  *   `functionName` (*type:* `String.t`, *default:* `nil`) - Human-readable name of a function or method.
      The value can include optional context like the class or package name.
      For example, `my.package.MyClass.method` in case of Java.
  *   `lineNumber` (*type:* `integer()`, *default:* `nil`) - 1-based. 0 indicates that the line number is unknown.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :filePath => String.t(),
          :functionName => String.t(),
          :lineNumber => integer()
        }

  field(:filePath)
  field(:functionName)
  field(:lineNumber)
end

defimpl Poison.Decoder, for: GoogleApi.CloudErrorReporting.V1beta1.Model.SourceLocation do
  def decode(value, options) do
    GoogleApi.CloudErrorReporting.V1beta1.Model.SourceLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudErrorReporting.V1beta1.Model.SourceLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
