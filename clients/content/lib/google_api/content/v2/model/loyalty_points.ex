# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V2.Model.LoyaltyPoints do
  @moduledoc """


  ## Attributes

  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.
  *   `pointsValue` (*type:* `String.t`, *default:* `nil`) - The retailer's loyalty points in absolute value.
  *   `ratio` (*type:* `float()`, *default:* `nil`) - The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :name => String.t(),
          :pointsValue => String.t(),
          :ratio => float()
        }

  field(:name)
  field(:pointsValue)
  field(:ratio)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V2.Model.LoyaltyPoints do
  def decode(value, options) do
    GoogleApi.Content.V2.Model.LoyaltyPoints.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V2.Model.LoyaltyPoints do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
