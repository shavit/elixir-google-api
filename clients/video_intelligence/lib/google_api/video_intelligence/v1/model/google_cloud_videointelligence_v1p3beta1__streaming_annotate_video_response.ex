# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse do
  @moduledoc """
  `StreamingAnnotateVideoResponse` is the only message returned to the client
  by `StreamingAnnotateVideo`. A series of zero or more
  `StreamingAnnotateVideoResponse` messages are streamed back to the client.

  ## Attributes

  *   `annotationResults` (*type:* `GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults.t`, *default:* `nil`) - Streaming annotation results.
  *   `annotationResultsUri` (*type:* `String.t`, *default:* `nil`) - GCS URI that stores annotation results of one streaming session.
      It is a directory that can hold multiple files in JSON format.
      Example uri format:
      gs://bucket_id/object_id/cloud_project_name-session_id
  *   `error` (*type:* `GoogleApi.VideoIntelligence.V1.Model.GoogleRpc_Status.t`, *default:* `nil`) - If set, returns a google.rpc.Status message that
      specifies the error for the operation.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotationResults =>
            GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults.t(),
          :annotationResultsUri => String.t(),
          :error => GoogleApi.VideoIntelligence.V1.Model.GoogleRpc_Status.t()
        }

  field(
    :annotationResults,
    as:
      GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1p3beta1_StreamingVideoAnnotationResults
  )

  field(:annotationResultsUri)
  field(:error, as: GoogleApi.VideoIntelligence.V1.Model.GoogleRpc_Status)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse do
  def decode(value, options) do
    GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1p3beta1_StreamingAnnotateVideoResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
