# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1_SpeechContext do
  @moduledoc """
  Provides "hints" to the speech recognizer to favor specific words and phrases
  in the results.

  ## Attributes

  *   `phrases` (*type:* `list(String.t)`, *default:* `nil`) - *Optional* A list of strings containing words and phrases "hints" so that
      the speech recognition is more likely to recognize them. This can be used
      to improve the accuracy for specific words and phrases, for example, if
      specific commands are typically spoken by the user. This can also be used
      to add additional words to the vocabulary of the recognizer. See
      [usage limits](https://cloud.google.com/speech/limits#content).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :phrases => list(String.t())
        }

  field(:phrases, type: :list)
end

defimpl Poison.Decoder,
  for: GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1_SpeechContext do
  def decode(value, options) do
    GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1_SpeechContext.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.VideoIntelligence.V1.Model.GoogleCloudVideointelligenceV1_SpeechContext do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
