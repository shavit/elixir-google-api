# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PageSpeedOnline.V2.Model.ResultFormattedResults do
  @moduledoc """
  Localized PageSpeed results. Contains a ruleResults entry for each PageSpeed rule instantiated and run by the server.

  ## Attributes

  *   `locale` (*type:* `String.t`, *default:* `nil`) - The locale of the formattedResults, e.g. "en_US".
  *   `ruleResults` (*type:* `map()`, *default:* `nil`) - Dictionary of formatted rule results, with one entry for each PageSpeed rule instantiated and run by the server.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :locale => String.t(),
          :ruleResults => map()
        }

  field(:locale)
  field(:ruleResults, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.PageSpeedOnline.V2.Model.ResultFormattedResults do
  def decode(value, options) do
    GoogleApi.PageSpeedOnline.V2.Model.ResultFormattedResults.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PageSpeedOnline.V2.Model.ResultFormattedResults do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
