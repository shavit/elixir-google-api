# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.People.V1.Model.Source do
  @moduledoc """
  The source of a field.

  ## Attributes

  *   `etag` (*type:* `String.t`, *default:* `nil`) - **Only populated in `person.metadata.sources`.**

      The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the
      source. Used for web cache validation.
  *   `id` (*type:* `String.t`, *default:* `nil`) - The unique identifier within the source type generated by the server.
  *   `profileMetadata` (*type:* `GoogleApi.People.V1.Model.ProfileMetadata.t`, *default:* `nil`) - **Only populated in `person.metadata.sources`.**

      Metadata about a source of type PROFILE.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The source type.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - **Only populated in `person.metadata.sources`.**

      Last update timestamp of this source.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :etag => String.t(),
          :id => String.t(),
          :profileMetadata => GoogleApi.People.V1.Model.ProfileMetadata.t(),
          :type => String.t(),
          :updateTime => DateTime.t()
        }

  field(:etag)
  field(:id)
  field(:profileMetadata, as: GoogleApi.People.V1.Model.ProfileMetadata)
  field(:type)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.People.V1.Model.Source do
  def decode(value, options) do
    GoogleApi.People.V1.Model.Source.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.People.V1.Model.Source do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
