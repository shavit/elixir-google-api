# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Logging.V2.Model.SourceLocation do
  @moduledoc """
  Specifies a location in a source code file.

  ## Attributes

  *   `file` (*type:* `String.t`, *default:* `nil`) - Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.
  *   `functionName` (*type:* `String.t`, *default:* `nil`) - Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information is used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: qual.if.ied.Class.method (Java), dir/package.func (Go), function (Python).
  *   `line` (*type:* `String.t`, *default:* `nil`) - Line within the source file.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :file => String.t(),
          :functionName => String.t(),
          :line => String.t()
        }

  field(:file)
  field(:functionName)
  field(:line)
end

defimpl Poison.Decoder, for: GoogleApi.Logging.V2.Model.SourceLocation do
  def decode(value, options) do
    GoogleApi.Logging.V2.Model.SourceLocation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Logging.V2.Model.SourceLocation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
