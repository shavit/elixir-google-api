# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AcceleratedMobilePageUrl.V1.Model.BatchGetAmpUrlsResponse do
  @moduledoc """
  Batch AMP URL response.

  ## Attributes

  *   `ampUrls` (*type:* `list(GoogleApi.AcceleratedMobilePageUrl.V1.Model.AmpUrl.t)`, *default:* `nil`) - For each URL in BatchAmpUrlsRequest, the URL response. The response might
      not be in the same order as URLs in the batch request.
      If BatchAmpUrlsRequest contains duplicate URLs, AmpUrl is generated
      only once.
  *   `urlErrors` (*type:* `list(GoogleApi.AcceleratedMobilePageUrl.V1.Model.AmpUrlError.t)`, *default:* `nil`) - The errors for requested URLs that have no AMP URL.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ampUrls => list(GoogleApi.AcceleratedMobilePageUrl.V1.Model.AmpUrl.t()),
          :urlErrors => list(GoogleApi.AcceleratedMobilePageUrl.V1.Model.AmpUrlError.t())
        }

  field(:ampUrls, as: GoogleApi.AcceleratedMobilePageUrl.V1.Model.AmpUrl, type: :list)
  field(:urlErrors, as: GoogleApi.AcceleratedMobilePageUrl.V1.Model.AmpUrlError, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.AcceleratedMobilePageUrl.V1.Model.BatchGetAmpUrlsResponse do
  def decode(value, options) do
    GoogleApi.AcceleratedMobilePageUrl.V1.Model.BatchGetAmpUrlsResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AcceleratedMobilePageUrl.V1.Model.BatchGetAmpUrlsResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
