# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.BasicYarnAutoscalingConfig do
  @moduledoc """
  Basic autoscaling configurations for YARN.

  ## Attributes

  *   `gracefulDecommissionTimeout` (*type:* `String.t`, *default:* `nil`) - Required. Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
  *   `scaleDownFactor` (*type:* `float()`, *default:* `nil`) - Required. Fraction of average pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job.Bounds: 0.0, 1.0.
  *   `scaleDownMinWorkerFraction` (*type:* `float()`, *default:* `nil`) - Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
  *   `scaleUpFactor` (*type:* `float()`, *default:* `nil`) - Required. Fraction of average pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling).Bounds: 0.0, 1.0.
  *   `scaleUpMinWorkerFraction` (*type:* `float()`, *default:* `nil`) - Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :gracefulDecommissionTimeout => String.t(),
          :scaleDownFactor => float(),
          :scaleDownMinWorkerFraction => float(),
          :scaleUpFactor => float(),
          :scaleUpMinWorkerFraction => float()
        }

  field(:gracefulDecommissionTimeout)
  field(:scaleDownFactor)
  field(:scaleDownMinWorkerFraction)
  field(:scaleUpFactor)
  field(:scaleUpMinWorkerFraction)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.BasicYarnAutoscalingConfig do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.BasicYarnAutoscalingConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.BasicYarnAutoscalingConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
