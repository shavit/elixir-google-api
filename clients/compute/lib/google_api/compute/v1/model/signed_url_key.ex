# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.SignedUrlKey do
  @moduledoc """
  Represents a customer-supplied Signing Key used by Cloud CDN Signed URLs

  ## Attributes

  *   `keyName` (*type:* `String.t`, *default:* `nil`) - Name of the key. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  *   `keyValue` (*type:* `String.t`, *default:* `nil`) - 128-bit key value used for signing the URL. The key value must be a valid RFC 4648 Section 5 base64url encoded string.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :keyName => String.t(),
          :keyValue => String.t()
        }

  field(:keyName)
  field(:keyValue)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.SignedUrlKey do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.SignedUrlKey.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.SignedUrlKey do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
