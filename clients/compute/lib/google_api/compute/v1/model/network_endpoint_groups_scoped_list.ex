# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.NetworkEndpointGroupsScopedList do
  @moduledoc """


  ## Attributes

  *   `networkEndpointGroups` (*type:* `list(GoogleApi.Compute.V1.Model.NetworkEndpointGroup.t)`, *default:* `nil`) - [Output Only] The list of network endpoint groups that are contained in this scope.
  *   `warning` (*type:* `GoogleApi.Compute.V1.Model.NetworkEndpointGroupsScopedListWarning.t`, *default:* `nil`) - [Output Only] An informational warning that replaces the list of network endpoint groups when the list is empty.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :networkEndpointGroups => list(GoogleApi.Compute.V1.Model.NetworkEndpointGroup.t()),
          :warning => GoogleApi.Compute.V1.Model.NetworkEndpointGroupsScopedListWarning.t()
        }

  field(:networkEndpointGroups, as: GoogleApi.Compute.V1.Model.NetworkEndpointGroup, type: :list)
  field(:warning, as: GoogleApi.Compute.V1.Model.NetworkEndpointGroupsScopedListWarning)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.NetworkEndpointGroupsScopedList do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.NetworkEndpointGroupsScopedList.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.NetworkEndpointGroupsScopedList do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
