# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.ForwardingRule do
  @moduledoc """
  Represents a Forwarding Rule resource.



  A forwardingRules resource represents a regional forwarding rule.

  Regional external forwarding rules can reference any of the following resources:
   
  - A target instance 
  - A Cloud VPN Classic gateway (targetVpnGateway),  
  - A target pool for a Network Load Balancer 
  - A global target HTTP(S) proxy for an HTTP(S) load balancer using Standard Tier 
  - A target SSL proxy for a SSL Proxy load balancer using Standard Tier 
  - A target TCP proxy for a TCP Proxy load balancer using Standard Tier.  

  Regional internal forwarding rules can reference the backend service of an internal TCP/UDP load balancer.

  For regional internal forwarding rules, the following applies:  
  - If the loadBalancingScheme for the load balancer is INTERNAL, then the forwarding rule references a regional internal backend service. 
  - If the loadBalancingScheme for the load balancer is INTERNAL_MANAGED, then the forwarding rule must reference a regional target HTTP(S) proxy.  

  For more information, read Using Forwarding rules.

  A globalForwardingRules resource represents a global forwarding rule.

  Global forwarding rules are only used by load balancers that use Premium Tier. (== resource_for beta.forwardingRules ==) (== resource_for v1.forwardingRules ==) (== resource_for beta.globalForwardingRules ==) (== resource_for v1.globalForwardingRules ==) (== resource_for beta.regionForwardingRules ==) (== resource_for v1.regionForwardingRules ==)

  ## Attributes

  *   `IPAddress` (*type:* `String.t`, *default:* `nil`) - IP address that this forwarding rule serves. When a client sends traffic to this IP address, the forwarding rule directs the traffic to the target that you specify in the forwarding rule.

      If you don't specify a reserved IP address, an ephemeral IP address is assigned. Methods for specifying an IP address:

      * IPv4 dotted decimal, as in `100.1.2.3` * Full URL, as in https://www.googleapis.com/compute/v1/projects/project_id/regions/region/addresses/address-name * Partial URL or by name, as in: * projects/project_id/regions/region/addresses/address-name * regions/region/addresses/address-name * global/addresses/address-name * address-name 

      The loadBalancingScheme and the forwarding rule's target determine the type of IP address that you can use. For detailed information, refer to [IP address specifications](/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
  *   `IPProtocol` (*type:* `String.t`, *default:* `nil`) - The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH, SCTP or ICMP.

      When the load balancing scheme is INTERNAL, only TCP and UDP are valid. When the load balancing scheme is INTERNAL_SELF_MANAGED, only TCPis valid.
  *   `allPorts` (*type:* `boolean()`, *default:* `nil`) - This field is used along with the backend_service field for internal load balancing or with the target field for internal TargetInstance. This field cannot be used with port or portRange fields.

      When the load balancing scheme is INTERNAL and protocol is TCP/UDP, specify this field to allow packets addressed to any ports will be forwarded to the backends configured with this forwarding rule.
  *   `backendService` (*type:* `String.t`, *default:* `nil`) - This field is only used for INTERNAL load balancing.

      For internal load balancing, this field identifies the BackendService resource to receive the matched traffic.
  *   `creationTimestamp` (*type:* `String.t`, *default:* `nil`) - [Output Only] Creation timestamp in RFC3339 text format.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this resource. Provide this property when you create the resource.
  *   `id` (*type:* `String.t`, *default:* `nil`) - [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  *   `ipVersion` (*type:* `String.t`, *default:* `nil`) - The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for an external global forwarding rule.
  *   `kind` (*type:* `String.t`, *default:* `compute#forwardingRule`) - [Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources.
  *   `loadBalancingScheme` (*type:* `String.t`, *default:* `nil`) - This signifies what the ForwardingRule will be used for and can only take the following values: INTERNAL, INTERNAL_SELF_MANAGED, EXTERNAL. The value of INTERNAL means that this will be used for Internal Network Load Balancing (TCP, UDP). The value of INTERNAL_SELF_MANAGED means that this will be used for Internal Global HTTP(S) LB. The value of EXTERNAL means that this will be used for External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  *   `network` (*type:* `String.t`, *default:* `nil`) - This field is not used for external load balancing.

      For INTERNAL and INTERNAL_SELF_MANAGED load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.
  *   `networkTier` (*type:* `String.t`, *default:* `nil`) - This signifies the networking tier used for configuring this load balancer and can only take the following values: PREMIUM , STANDARD.

      For regional ForwardingRule, the valid values are PREMIUM and STANDARD. For GlobalForwardingRule, the valid value is PREMIUM.

      If this field is not specified, it is assumed to be PREMIUM. If IPAddress is specified, this value must be equal to the networkTier of the Address.
  *   `portRange` (*type:* `String.t`, *default:* `nil`) - This field is deprecated. See the port
      field.
  *   `ports` (*type:* `list(String.t)`, *default:* `nil`) - List of comma-separated ports. The forwarding rule forwards packets with matching destination ports. If the forwarding rule's loadBalancingScheme is EXTERNAL, and the forwarding rule references a target pool, specifying ports is optional. You can specify an unlimited number of ports, but they must be contiguous. If you omit ports, GCP forwards traffic on any port of the forwarding rule's protocol.

      If the forwarding rule's loadBalancingScheme is EXTERNAL, and the forwarding rule references a target HTTP proxy, target HTTPS proxy, target TCP proxy, target SSL proxy, or target VPN gateway, you must specify ports using the following constraints:

       
      - TargetHttpProxy: 80, 8080 
      - TargetHttpsProxy: 443 
      - TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222 
      - TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222 
      - TargetVpnGateway: 500, 4500  

      If the forwarding rule's loadBalancingScheme is INTERNAL, you must specify ports in one of the following ways:

      * A list of up to five ports, which can be non-contiguous * Keyword ALL, which causes the forwarding rule to forward traffic on any port of the forwarding rule's protocol.

      The ports field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.

      Applicable only when IPProtocol is TCP, UDP, or SCTP. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges.
  *   `region` (*type:* `String.t`, *default:* `nil`) - [Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined URL for the resource.
  *   `serviceLabel` (*type:* `String.t`, *default:* `nil`) - An optional prefix to the service name for this Forwarding Rule. If specified, the prefix is the first label of the fully qualified service name.

      The label must be 1-63 characters long, and comply with RFC1035. Specifically, the label must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.

      This field is only used for internal load balancing.
  *   `serviceName` (*type:* `String.t`, *default:* `nil`) - [Output Only] The internal fully qualified service name for this Forwarding Rule.

      This field is only used for internal load balancing.
  *   `subnetwork` (*type:* `String.t`, *default:* `nil`) - This field is only used for INTERNAL load balancing.

      For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule.

      If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified.
  *   `target` (*type:* `String.t`, *default:* `nil`) - The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object. For INTERNAL_SELF_MANAGED load balancing, only HTTP and HTTPS targets are valid.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :IPAddress => String.t(),
          :IPProtocol => String.t(),
          :allPorts => boolean(),
          :backendService => String.t(),
          :creationTimestamp => String.t(),
          :description => String.t(),
          :id => String.t(),
          :ipVersion => String.t(),
          :kind => String.t(),
          :loadBalancingScheme => String.t(),
          :name => String.t(),
          :network => String.t(),
          :networkTier => String.t(),
          :portRange => String.t(),
          :ports => list(String.t()),
          :region => String.t(),
          :selfLink => String.t(),
          :serviceLabel => String.t(),
          :serviceName => String.t(),
          :subnetwork => String.t(),
          :target => String.t()
        }

  field(:IPAddress)
  field(:IPProtocol)
  field(:allPorts)
  field(:backendService)
  field(:creationTimestamp)
  field(:description)
  field(:id)
  field(:ipVersion)
  field(:kind)
  field(:loadBalancingScheme)
  field(:name)
  field(:network)
  field(:networkTier)
  field(:portRange)
  field(:ports, type: :list)
  field(:region)
  field(:selfLink)
  field(:serviceLabel)
  field(:serviceName)
  field(:subnetwork)
  field(:target)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.ForwardingRule do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.ForwardingRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.ForwardingRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
