# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.Address do
  @moduledoc """
  Represents an IP Address resource.

  An address resource represents a regional internal IP address. Regional internal IP addresses are RFC 1918 addresses that come from either a primary or secondary IP range of a subnet in a VPC network. Regional external IP addresses can be assigned to GCP VM instances, Cloud VPN gateways, regional external forwarding rules for network load balancers (in either Standard or Premium Tier), and regional external forwarding rules for HTTP(S), SSL Proxy, and TCP Proxy load balancers in Standard Tier. For more information, read IP addresses.

  A globalAddresses resource represent a global external IP address. Global external IP addresses are IPv4 or IPv6 addresses. They can only be assigned to global forwarding rules for HTTP(S), SSL Proxy, or TCP Proxy load balancers in Premium Tier. For more information, read Global resources. (== resource_for beta.addresses ==) (== resource_for v1.addresses ==) (== resource_for beta.globalAddresses ==) (== resource_for v1.globalAddresses ==)

  ## Attributes

  *   `address` (*type:* `String.t`, *default:* `nil`) - The static IP address represented by this resource.
  *   `addressType` (*type:* `String.t`, *default:* `nil`) - The type of address to reserve, either INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL.
  *   `creationTimestamp` (*type:* `String.t`, *default:* `nil`) - [Output Only] Creation timestamp in RFC3339 text format.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this resource. Provide this field when you create the resource.
  *   `id` (*type:* `String.t`, *default:* `nil`) - [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  *   `ipVersion` (*type:* `String.t`, *default:* `nil`) - The IP version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
  *   `kind` (*type:* `String.t`, *default:* `compute#address`) - [Output Only] Type of the resource. Always compute#address for addresses.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
  *   `network` (*type:* `String.t`, *default:* `nil`) - The URL of the network in which to reserve the address. This field can only be used with INTERNAL type with the VPC_PEERING purpose.
  *   `networkTier` (*type:* `String.t`, *default:* `nil`) - This signifies the networking tier used for configuring this address and can only take the following values: PREMIUM or STANDARD. Global forwarding rules can only be Premium Tier. Regional forwarding rules can be either Premium or Standard Tier. Standard Tier addresses applied to regional forwarding rules can be used with any external load balancer. Regional forwarding rules in Premium Tier can only be used with a network load balancer.

      If this field is not specified, it is assumed to be PREMIUM.
  *   `prefixLength` (*type:* `integer()`, *default:* `nil`) - The prefix length if the resource reprensents an IP range.
  *   `purpose` (*type:* `String.t`, *default:* `nil`) - The purpose of this resource, which can be one of the following values:  
      - `GCE_ENDPOINT` for addresses that are used by VM instances, alias IP ranges, internal load balancers, and similar resources. 
      - `DNS_RESOLVER` for a DNS resolver address in a subnetwork 
      - `VPC_PEERING` for addresses that are reserved for VPC peer networks. 
      - `NAT_AUTO` for addresses that are external IP addresses automatically reserved for Cloud NAT.
  *   `region` (*type:* `String.t`, *default:* `nil`) - [Output Only] The URL of the region where the regional address resides. This field is not applicable to global addresses. You must specify this field as part of the HTTP request URL.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined URL for the resource.
  *   `status` (*type:* `String.t`, *default:* `nil`) - [Output Only] The status of the address, which can be one of RESERVING, RESERVED, or IN_USE. An address that is RESERVING is currently in the process of being reserved. A RESERVED address is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.
  *   `subnetwork` (*type:* `String.t`, *default:* `nil`) - The URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the subnetwork's IP range. This field can only be used with INTERNAL type with a GCE_ENDPOINT or DNS_RESOLVER purpose.
  *   `users` (*type:* `list(String.t)`, *default:* `nil`) - [Output Only] The URLs of the resources that are using this address.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :address => String.t(),
          :addressType => String.t(),
          :creationTimestamp => String.t(),
          :description => String.t(),
          :id => String.t(),
          :ipVersion => String.t(),
          :kind => String.t(),
          :name => String.t(),
          :network => String.t(),
          :networkTier => String.t(),
          :prefixLength => integer(),
          :purpose => String.t(),
          :region => String.t(),
          :selfLink => String.t(),
          :status => String.t(),
          :subnetwork => String.t(),
          :users => list(String.t())
        }

  field(:address)
  field(:addressType)
  field(:creationTimestamp)
  field(:description)
  field(:id)
  field(:ipVersion)
  field(:kind)
  field(:name)
  field(:network)
  field(:networkTier)
  field(:prefixLength)
  field(:purpose)
  field(:region)
  field(:selfLink)
  field(:status)
  field(:subnetwork)
  field(:users, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.Address do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.Address.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.Address do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
