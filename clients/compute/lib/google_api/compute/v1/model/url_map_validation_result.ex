# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.UrlMapValidationResult do
  @moduledoc """
  Message representing the validation result for a UrlMap.

  ## Attributes

  *   `loadErrors` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `loadSucceeded` (*type:* `boolean()`, *default:* `nil`) - Whether the given UrlMap can be successfully loaded. If false, 'loadErrors' indicates the reasons.
  *   `testFailures` (*type:* `list(GoogleApi.Compute.V1.Model.TestFailure.t)`, *default:* `nil`) - 
  *   `testPassed` (*type:* `boolean()`, *default:* `nil`) - If successfully loaded, this field indicates whether the test passed. If false, 'testFailures's indicate the reason of failure.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :loadErrors => list(String.t()),
          :loadSucceeded => boolean(),
          :testFailures => list(GoogleApi.Compute.V1.Model.TestFailure.t()),
          :testPassed => boolean()
        }

  field(:loadErrors, type: :list)
  field(:loadSucceeded)
  field(:testFailures, as: GoogleApi.Compute.V1.Model.TestFailure, type: :list)
  field(:testPassed)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.UrlMapValidationResult do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.UrlMapValidationResult.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.UrlMapValidationResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
