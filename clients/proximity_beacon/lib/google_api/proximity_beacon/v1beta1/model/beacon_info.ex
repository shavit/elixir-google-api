# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ProximityBeacon.V1beta1.Model.BeaconInfo do
  @moduledoc """
  A subset of beacon information served via the `beaconinfo.getforobserved`
  method, which you call when users of your app encounter your beacons.

  ## Attributes

  *   `advertisedId` (*type:* `GoogleApi.ProximityBeacon.V1beta1.Model.AdvertisedId.t`, *default:* `nil`) - The ID advertised by the beacon.
  *   `attachments` (*type:* `list(GoogleApi.ProximityBeacon.V1beta1.Model.AttachmentInfo.t)`, *default:* `nil`) - Attachments matching the type(s) requested.
      May be empty if no attachment types were requested.
  *   `beaconName` (*type:* `String.t`, *default:* `nil`) - The name under which the beacon is registered.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :advertisedId => GoogleApi.ProximityBeacon.V1beta1.Model.AdvertisedId.t(),
          :attachments => list(GoogleApi.ProximityBeacon.V1beta1.Model.AttachmentInfo.t()),
          :beaconName => String.t()
        }

  field(:advertisedId, as: GoogleApi.ProximityBeacon.V1beta1.Model.AdvertisedId)
  field(:attachments, as: GoogleApi.ProximityBeacon.V1beta1.Model.AttachmentInfo, type: :list)
  field(:beaconName)
end

defimpl Poison.Decoder, for: GoogleApi.ProximityBeacon.V1beta1.Model.BeaconInfo do
  def decode(value, options) do
    GoogleApi.ProximityBeacon.V1beta1.Model.BeaconInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ProximityBeacon.V1beta1.Model.BeaconInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
