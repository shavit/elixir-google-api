# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ProximityBeacon.V1beta1.Model.EphemeralIdRegistrationParams do
  @moduledoc """
  Information a client needs to provision and register beacons that
  broadcast Eddystone-EID format beacon IDs, using Elliptic curve
  Diffie-Hellman key exchange. See
  [the Eddystone
  specification](https://github.com/google/eddystone/tree/master/eddystone-eid)
  at GitHub.

  ## Attributes

  *   `maxRotationPeriodExponent` (*type:* `integer()`, *default:* `nil`) - Indicates the maximum rotation period supported by the service.
      See
      EddystoneEidRegistration.rotation_period_exponent
  *   `minRotationPeriodExponent` (*type:* `integer()`, *default:* `nil`) - Indicates the minimum rotation period supported by the service.
      See
      EddystoneEidRegistration.rotation_period_exponent
  *   `serviceEcdhPublicKey` (*type:* `String.t`, *default:* `nil`) - The beacon service's public key for use by a beacon to derive its
      Identity Key using Elliptic Curve Diffie-Hellman key exchange.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :maxRotationPeriodExponent => integer(),
          :minRotationPeriodExponent => integer(),
          :serviceEcdhPublicKey => String.t()
        }

  field(:maxRotationPeriodExponent)
  field(:minRotationPeriodExponent)
  field(:serviceEcdhPublicKey)
end

defimpl Poison.Decoder, for: GoogleApi.ProximityBeacon.V1beta1.Model.EphemeralIdRegistrationParams do
  def decode(value, options) do
    GoogleApi.ProximityBeacon.V1beta1.Model.EphemeralIdRegistrationParams.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ProximityBeacon.V1beta1.Model.EphemeralIdRegistrationParams do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
