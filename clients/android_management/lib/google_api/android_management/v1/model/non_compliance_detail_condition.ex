# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AndroidManagement.V1.Model.NonComplianceDetailCondition do
  @moduledoc """
  A compliance rule condition which is satisfied if there exists any matching NonComplianceDetail for the device. A NonComplianceDetail matches a NonComplianceDetailCondition if all the fields which are set within the NonComplianceDetailCondition match the corresponding NonComplianceDetail fields.

  ## Attributes

  *   `nonComplianceReason` (*type:* `String.t`, *default:* `nil`) - The reason the device is not in compliance with the setting. If not set, then this condition matches any reason.
  *   `packageName` (*type:* `String.t`, *default:* `nil`) - The package name of the app that's out of compliance. If not set, then this condition matches any package name.
  *   `settingName` (*type:* `String.t`, *default:* `nil`) - The name of the policy setting. This is the JSON field name of a top-level Policy field. If not set, then this condition matches any setting name.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :nonComplianceReason => String.t(),
          :packageName => String.t(),
          :settingName => String.t()
        }

  field(:nonComplianceReason)
  field(:packageName)
  field(:settingName)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidManagement.V1.Model.NonComplianceDetailCondition do
  def decode(value, options) do
    GoogleApi.AndroidManagement.V1.Model.NonComplianceDetailCondition.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidManagement.V1.Model.NonComplianceDetailCondition do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
