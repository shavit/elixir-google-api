# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Slides.V1.Model.UpdateParagraphStyleRequest do
  @moduledoc """
  Updates the styling for all of the paragraphs within a Shape or Table that
  overlap with the given text index range.

  ## Attributes

  *   `cellLocation` (*type:* `GoogleApi.Slides.V1.Model.TableCellLocation.t`, *default:* `nil`) - The location of the cell in the table containing the paragraph(s) to
      style. If `object_id` refers to a table, `cell_location` must have a value.
      Otherwise, it must not.
  *   `fields` (*type:* `String.t`, *default:* `nil`) - The fields that should be updated.

      At least one field must be specified. The root `style` is implied and
      should not be specified. A single `"*"` can be used as short-hand for
      listing every field.

      For example, to update the paragraph alignment, set `fields` to
      `"alignment"`.

      To reset a property to its default value, include its field name in the
      field mask but leave the field itself unset.
  *   `objectId` (*type:* `String.t`, *default:* `nil`) - The object ID of the shape or table with the text to be styled.
  *   `style` (*type:* `GoogleApi.Slides.V1.Model.ParagraphStyle.t`, *default:* `nil`) - The paragraph's style.
  *   `textRange` (*type:* `GoogleApi.Slides.V1.Model.Range.t`, *default:* `nil`) - The range of text containing the paragraph(s) to style.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cellLocation => GoogleApi.Slides.V1.Model.TableCellLocation.t(),
          :fields => String.t(),
          :objectId => String.t(),
          :style => GoogleApi.Slides.V1.Model.ParagraphStyle.t(),
          :textRange => GoogleApi.Slides.V1.Model.Range.t()
        }

  field(:cellLocation, as: GoogleApi.Slides.V1.Model.TableCellLocation)
  field(:fields)
  field(:objectId)
  field(:style, as: GoogleApi.Slides.V1.Model.ParagraphStyle)
  field(:textRange, as: GoogleApi.Slides.V1.Model.Range)
end

defimpl Poison.Decoder, for: GoogleApi.Slides.V1.Model.UpdateParagraphStyleRequest do
  def decode(value, options) do
    GoogleApi.Slides.V1.Model.UpdateParagraphStyleRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Slides.V1.Model.UpdateParagraphStyleRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
